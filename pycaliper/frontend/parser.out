Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    LineComment

Grammar

Rule 0     S' -> caliper_declarations
Rule 1     empty -> <empty>
Rule 2     expr_list_p -> expression
Rule 3     expr_list_p -> expression Comma expr_list_p
Rule 4     expr_list -> empty
Rule 5     expr_list -> expr_list_p
Rule 6     primary1_list_p -> primary1
Rule 7     primary1_list_p -> primary1 Comma primary1_list_p
Rule 8     caliper_statement_list_p -> caliper_statement
Rule 9     caliper_statement_list_p -> caliper_statement caliper_statement_list_p
Rule 10    caliper_statement_list -> empty
Rule 11    caliper_statement_list -> caliper_statement_list_p
Rule 12    caliper_mod_stmt_list -> caliper_mod_stmt
Rule 13    caliper_mod_stmt_list -> caliper_mod_stmt caliper_mod_stmt_list
Rule 14    PlusColon -> Plus Colon
Rule 15    MinusColon -> Minus Colon
Rule 16    Power -> Star Star
Rule 17    Equality -> Equals Equals
Rule 18    Inequality -> Not Equals
Rule 19    CaseEquality -> Equals Equals Equals
Rule 20    CaseInequality -> Not Equals Equals
Rule 21    WildcardEquality -> Equals Equals Question
Rule 22    WildcardInequality -> Not Equals Question
Rule 23    LessThanEqual -> LessThan Equals
Rule 24    GreaterThanEqual -> GreaterThan Equals
Rule 25    LogicalAnd -> Amp Amp
Rule 26    LogicalOr -> Bar Bar
Rule 27    BinaryXnor -> Tilde Carat
Rule 28    BinaryXnor -> Carat Tilde
Rule 29    BinaryNand -> Tilde Amp
Rule 30    BinaryNand -> Amp Tilde
Rule 31    BinaryNor -> Tilde Bar
Rule 32    BinaryNor -> Bar Tilde
Rule 33    LogicalImplication -> Minus GreaterThan
Rule 34    LogicalEquivalence -> LessThan Minus GreaterThan
Rule 35    LogicalShiftLeft -> LessThan LessThan
Rule 36    LogicalShiftRight -> GreaterThan GreaterThan
Rule 37    ArithmeticShiftLeft -> LessThan LessThan LessThan
Rule 38    ArithmeticShiftRight -> GreaterThan GreaterThan GreaterThan
Rule 39    expression -> expression1
Rule 40    expression1 -> expression2
Rule 41    expression1 -> expression2 LogicalImplication expression1
Rule 42    expression1 -> expression2 LogicalEquivalence expression1
Rule 43    expression2 -> expression3
Rule 44    expression2 -> expression3 Question expression Colon expression2
Rule 45    expression3 -> expression4
Rule 46    expression3 -> expression3 LogicalOr expression4
Rule 47    expression3 -> expression3 LogicalAnd expression4
Rule 48    expression3 -> expression3 Bar expression4
Rule 49    expression3 -> expression3 Carat expression4
Rule 50    expression3 -> expression3 BinaryXnor expression4
Rule 51    expression3 -> expression3 Amp expression4
Rule 52    expression3 -> expression3 Equality expression4
Rule 53    expression3 -> expression3 Inequality expression4
Rule 54    expression3 -> expression3 CaseEquality expression4
Rule 55    expression3 -> expression3 CaseInequality expression4
Rule 56    expression3 -> expression3 WildcardEquality expression4
Rule 57    expression3 -> expression3 WildcardInequality expression4
Rule 58    expression4 -> expression5
Rule 59    expression4 -> expression4 LessThan expression5
Rule 60    expression4 -> expression4 LessThanEqual expression5
Rule 61    expression4 -> expression4 GreaterThan expression5
Rule 62    expression4 -> expression4 GreaterThanEqual expression5
Rule 63    expression5 -> expression6
Rule 64    expression5 -> expression5 LogicalShiftRight expression6
Rule 65    expression5 -> expression5 LogicalShiftLeft expression6
Rule 66    expression5 -> expression5 ArithmeticShiftRight expression6
Rule 67    expression5 -> expression5 ArithmeticShiftLeft expression6
Rule 68    expression6 -> expression7
Rule 69    expression6 -> expression6 Plus expression7
Rule 70    expression6 -> expression6 Minus expression7
Rule 71    expression7 -> expression8
Rule 72    expression7 -> expression7 Star expression8
Rule 73    expression7 -> expression7 Divide expression8
Rule 74    expression7 -> expression7 Mod expression8
Rule 75    expression7 -> expression7 Power expression8
Rule 76    expression8 -> primary
Rule 77    expression8 -> Plus primary
Rule 78    expression8 -> Minus primary
Rule 79    expression8 -> Amp primary
Rule 80    expression8 -> BinaryNand primary
Rule 81    expression8 -> Bar primary
Rule 82    expression8 -> BinaryNor primary
Rule 83    expression8 -> Carat primary
Rule 84    expression8 -> BinaryXnor primary
Rule 85    expression8 -> Not primary
Rule 86    expression8 -> Tilde primary
Rule 87    part_select_range -> expression Colon expression
Rule 88    part_select_range -> expression PlusColon expression
Rule 89    part_select_range -> expression MinusColon expression
Rule 90    number -> Num
Rule 91    identifier -> Ident
Rule 92    primary1 -> identifier
Rule 93    primary1 -> KW_this
Rule 94    primary1 -> primary1 Dot identifier
Rule 95    primary1 -> primary1 BracketL expression BracketR
Rule 96    primary1 -> primary1 BracketL part_select_range BracketR
Rule 97    function_call -> identifier ParenL expr_list ParenR
Rule 98    primary -> number
Rule 99    primary -> primary1
Rule 100   primary -> function_call
Rule 101   primary -> ParenL expression ParenR
Rule 102   basetype -> KW_logic
Rule 103   basetype -> identifier ParenL expr_list ParenR
Rule 104   basetype -> identifier
Rule 105   dimension -> BracketL expression BracketR
Rule 106   dimension -> BracketL expression Colon expression BracketR
Rule 107   datatype -> basetype
Rule 108   datatype -> datatype dimension
Rule 109   caliper_loop -> identifier LessThan expression
Rule 110   caliper_loop_list_p -> caliper_loop
Rule 111   caliper_loop_list_p -> caliper_loop_list_p Comma caliper_loop
Rule 112   caliper_statement -> KW_def expr_list_p Semi
Rule 113   caliper_statement -> KW_invariant identifier Colon expression Semi
Rule 114   caliper_statement -> datatype primary1_list_p Semi
Rule 115   caliper_statement -> KW_begin caliper_statement_list KW_end
Rule 116   caliper_statement -> KW_if ParenL expression ParenR caliper_statement
Rule 117   caliper_statement -> KW_foreach ParenL caliper_loop_list_p ParenR caliper_statement
Rule 118   caliper_mod_stmt -> KW_input caliper_statement
Rule 119   caliper_mod_stmt -> KW_output caliper_statement
Rule 120   caliper_mod_stmt -> KW_state caliper_statement
Rule 121   caliper_mod_stmt -> KW_output KW_state caliper_statement
Rule 122   caliper_mod_stmt -> KW_begin caliper_mod_stmt_list KW_end
Rule 123   caliper_mod_stmt -> KW_if ParenL expression ParenR caliper_mod_stmt
Rule 124   caliper_mod_stmt -> KW_def expr_list_p Semi
Rule 125   caliper_mod_stmt -> KW_invariant identifier Colon expression Semi
Rule 126   caliper_mod_stmt -> datatype primary1_list_p Semi
Rule 127   caliper_mod_stmt -> KW_submodule identifier ParenL expr_list ParenR identifier Semi
Rule 128   caliper_declaration -> KW_spec identifier ParenL expr_list ParenR Semi caliper_statement_list KW_endspec
Rule 129   caliper_declaration -> KW_struct identifier ParenL expr_list ParenR Semi caliper_statement_list KW_endstruct
Rule 130   caliper_declaration -> KW_module identifier ParenL expr_list ParenR Semi caliper_mod_stmt_list KW_endmodule
Rule 131   caliper_declaration -> KW_parameter identifier Semi
Rule 132   caliper_declarations -> empty
Rule 133   caliper_declarations -> caliper_declaration caliper_declarations

Terminals, with rules where they appear

Amp                  : 25 25 29 30 51 79
Bar                  : 26 26 31 32 48 81
BracketL             : 95 96 105 106
BracketR             : 95 96 105 106
Carat                : 27 28 49 83
Colon                : 14 15 44 87 106 113 125
Comma                : 3 7 111
Divide               : 73
Dot                  : 94
Equals               : 17 17 18 19 19 19 20 20 21 21 22 23 24
GreaterThan          : 24 33 34 36 36 38 38 38 61
Ident                : 91
KW_begin             : 115 122
KW_def               : 112 124
KW_end               : 115 122
KW_endmodule         : 130
KW_endspec           : 128
KW_endstruct         : 129
KW_foreach           : 117
KW_if                : 116 123
KW_input             : 118
KW_invariant         : 113 125
KW_logic             : 102
KW_module            : 130
KW_output            : 119 121
KW_parameter         : 131
KW_spec              : 128
KW_state             : 120 121
KW_struct            : 129
KW_submodule         : 127
KW_this              : 93
LessThan             : 23 34 35 35 37 37 37 59 109
LineComment          : 
Minus                : 15 33 34 70 78
Mod                  : 74
Not                  : 18 20 22 85
Num                  : 90
ParenL               : 97 101 103 116 117 123 127 128 129 130
ParenR               : 97 101 103 116 117 123 127 128 129 130
Plus                 : 14 69 77
Question             : 21 22 44
Semi                 : 112 113 114 124 125 126 127 128 129 130 131
Star                 : 16 16 72
Tilde                : 27 28 29 30 31 32 86
error                : 

Nonterminals, with rules where they appear

ArithmeticShiftLeft  : 67
ArithmeticShiftRight : 66
BinaryNand           : 80
BinaryNor            : 82
BinaryXnor           : 50 84
CaseEquality         : 54
CaseInequality       : 55
Equality             : 52
GreaterThanEqual     : 62
Inequality           : 53
LessThanEqual        : 60
LogicalAnd           : 47
LogicalEquivalence   : 42
LogicalImplication   : 41
LogicalOr            : 46
LogicalShiftLeft     : 65
LogicalShiftRight    : 64
MinusColon           : 89
PlusColon            : 88
Power                : 75
WildcardEquality     : 56
WildcardInequality   : 57
basetype             : 107
caliper_declaration  : 133
caliper_declarations : 133 0
caliper_loop         : 110 111
caliper_loop_list_p  : 111 117
caliper_mod_stmt     : 12 13 123
caliper_mod_stmt_list : 13 122 130
caliper_statement    : 8 9 116 117 118 119 120 121
caliper_statement_list : 115 128 129
caliper_statement_list_p : 9 11
datatype             : 108 114 126
dimension            : 108
empty                : 4 10 132
expr_list            : 97 103 127 128 129 130
expr_list_p          : 3 5 112 124
expression           : 2 3 44 87 87 88 88 89 89 95 101 105 106 106 109 113 116 123 125
expression1          : 39 41 42
expression2          : 40 41 42 44
expression3          : 43 44 46 47 48 49 50 51 52 53 54 55 56 57
expression4          : 45 46 47 48 49 50 51 52 53 54 55 56 57 59 60 61 62
expression5          : 58 59 60 61 62 64 65 66 67
expression6          : 63 64 65 66 67 69 70
expression7          : 68 69 70 72 73 74 75
expression8          : 71 72 73 74 75
function_call        : 100
identifier           : 92 94 97 103 104 109 113 125 127 127 128 129 130 131
number               : 98
part_select_range    : 96
primary              : 76 77 78 79 80 81 82 83 84 85 86
primary1             : 6 7 94 95 96 99
primary1_list_p      : 7 114 126

Parsing method: LALR

state 0

    (0) S' -> . caliper_declarations
    (132) caliper_declarations -> . empty
    (133) caliper_declarations -> . caliper_declaration caliper_declarations
    (1) empty -> .
    (128) caliper_declaration -> . KW_spec identifier ParenL expr_list ParenR Semi caliper_statement_list KW_endspec
    (129) caliper_declaration -> . KW_struct identifier ParenL expr_list ParenR Semi caliper_statement_list KW_endstruct
    (130) caliper_declaration -> . KW_module identifier ParenL expr_list ParenR Semi caliper_mod_stmt_list KW_endmodule
    (131) caliper_declaration -> . KW_parameter identifier Semi

    $end            reduce using rule 1 (empty -> .)
    KW_spec         shift and go to state 4
    KW_struct       shift and go to state 5
    KW_module       shift and go to state 6
    KW_parameter    shift and go to state 7

    caliper_declarations           shift and go to state 1
    empty                          shift and go to state 2
    caliper_declaration            shift and go to state 3

state 1

    (0) S' -> caliper_declarations .



state 2

    (132) caliper_declarations -> empty .

    $end            reduce using rule 132 (caliper_declarations -> empty .)


state 3

    (133) caliper_declarations -> caliper_declaration . caliper_declarations
    (132) caliper_declarations -> . empty
    (133) caliper_declarations -> . caliper_declaration caliper_declarations
    (1) empty -> .
    (128) caliper_declaration -> . KW_spec identifier ParenL expr_list ParenR Semi caliper_statement_list KW_endspec
    (129) caliper_declaration -> . KW_struct identifier ParenL expr_list ParenR Semi caliper_statement_list KW_endstruct
    (130) caliper_declaration -> . KW_module identifier ParenL expr_list ParenR Semi caliper_mod_stmt_list KW_endmodule
    (131) caliper_declaration -> . KW_parameter identifier Semi

    $end            reduce using rule 1 (empty -> .)
    KW_spec         shift and go to state 4
    KW_struct       shift and go to state 5
    KW_module       shift and go to state 6
    KW_parameter    shift and go to state 7

    caliper_declaration            shift and go to state 3
    caliper_declarations           shift and go to state 8
    empty                          shift and go to state 2

state 4

    (128) caliper_declaration -> KW_spec . identifier ParenL expr_list ParenR Semi caliper_statement_list KW_endspec
    (91) identifier -> . Ident

    Ident           shift and go to state 10

    identifier                     shift and go to state 9

state 5

    (129) caliper_declaration -> KW_struct . identifier ParenL expr_list ParenR Semi caliper_statement_list KW_endstruct
    (91) identifier -> . Ident

    Ident           shift and go to state 10

    identifier                     shift and go to state 11

state 6

    (130) caliper_declaration -> KW_module . identifier ParenL expr_list ParenR Semi caliper_mod_stmt_list KW_endmodule
    (91) identifier -> . Ident

    Ident           shift and go to state 10

    identifier                     shift and go to state 12

state 7

    (131) caliper_declaration -> KW_parameter . identifier Semi
    (91) identifier -> . Ident

    Ident           shift and go to state 10

    identifier                     shift and go to state 13

state 8

    (133) caliper_declarations -> caliper_declaration caliper_declarations .

    $end            reduce using rule 133 (caliper_declarations -> caliper_declaration caliper_declarations .)


state 9

    (128) caliper_declaration -> KW_spec identifier . ParenL expr_list ParenR Semi caliper_statement_list KW_endspec

    ParenL          shift and go to state 14


state 10

    (91) identifier -> Ident .

    ParenL          reduce using rule 91 (identifier -> Ident .)
    Semi            reduce using rule 91 (identifier -> Ident .)
    Dot             reduce using rule 91 (identifier -> Ident .)
    BracketL        reduce using rule 91 (identifier -> Ident .)
    Star            reduce using rule 91 (identifier -> Ident .)
    Divide          reduce using rule 91 (identifier -> Ident .)
    Mod             reduce using rule 91 (identifier -> Ident .)
    Plus            reduce using rule 91 (identifier -> Ident .)
    Minus           reduce using rule 91 (identifier -> Ident .)
    GreaterThan     reduce using rule 91 (identifier -> Ident .)
    LessThan        reduce using rule 91 (identifier -> Ident .)
    Question        reduce using rule 91 (identifier -> Ident .)
    Bar             reduce using rule 91 (identifier -> Ident .)
    Carat           reduce using rule 91 (identifier -> Ident .)
    Amp             reduce using rule 91 (identifier -> Ident .)
    Tilde           reduce using rule 91 (identifier -> Ident .)
    Equals          reduce using rule 91 (identifier -> Ident .)
    Not             reduce using rule 91 (identifier -> Ident .)
    Comma           reduce using rule 91 (identifier -> Ident .)
    ParenR          reduce using rule 91 (identifier -> Ident .)
    Colon           reduce using rule 91 (identifier -> Ident .)
    BracketR        reduce using rule 91 (identifier -> Ident .)
    KW_this         reduce using rule 91 (identifier -> Ident .)
    Ident           reduce using rule 91 (identifier -> Ident .)


state 11

    (129) caliper_declaration -> KW_struct identifier . ParenL expr_list ParenR Semi caliper_statement_list KW_endstruct

    ParenL          shift and go to state 15


state 12

    (130) caliper_declaration -> KW_module identifier . ParenL expr_list ParenR Semi caliper_mod_stmt_list KW_endmodule

    ParenL          shift and go to state 16


state 13

    (131) caliper_declaration -> KW_parameter identifier . Semi

    Semi            shift and go to state 17


state 14

    (128) caliper_declaration -> KW_spec identifier ParenL . expr_list ParenR Semi caliper_statement_list KW_endspec
    (4) expr_list -> . empty
    (5) expr_list -> . expr_list_p
    (1) empty -> .
    (2) expr_list_p -> . expression
    (3) expr_list_p -> . expression Comma expr_list_p
    (39) expression -> . expression1
    (40) expression1 -> . expression2
    (41) expression1 -> . expression2 LogicalImplication expression1
    (42) expression1 -> . expression2 LogicalEquivalence expression1
    (43) expression2 -> . expression3
    (44) expression2 -> . expression3 Question expression Colon expression2
    (45) expression3 -> . expression4
    (46) expression3 -> . expression3 LogicalOr expression4
    (47) expression3 -> . expression3 LogicalAnd expression4
    (48) expression3 -> . expression3 Bar expression4
    (49) expression3 -> . expression3 Carat expression4
    (50) expression3 -> . expression3 BinaryXnor expression4
    (51) expression3 -> . expression3 Amp expression4
    (52) expression3 -> . expression3 Equality expression4
    (53) expression3 -> . expression3 Inequality expression4
    (54) expression3 -> . expression3 CaseEquality expression4
    (55) expression3 -> . expression3 CaseInequality expression4
    (56) expression3 -> . expression3 WildcardEquality expression4
    (57) expression3 -> . expression3 WildcardInequality expression4
    (58) expression4 -> . expression5
    (59) expression4 -> . expression4 LessThan expression5
    (60) expression4 -> . expression4 LessThanEqual expression5
    (61) expression4 -> . expression4 GreaterThan expression5
    (62) expression4 -> . expression4 GreaterThanEqual expression5
    (63) expression5 -> . expression6
    (64) expression5 -> . expression5 LogicalShiftRight expression6
    (65) expression5 -> . expression5 LogicalShiftLeft expression6
    (66) expression5 -> . expression5 ArithmeticShiftRight expression6
    (67) expression5 -> . expression5 ArithmeticShiftLeft expression6
    (68) expression6 -> . expression7
    (69) expression6 -> . expression6 Plus expression7
    (70) expression6 -> . expression6 Minus expression7
    (71) expression7 -> . expression8
    (72) expression7 -> . expression7 Star expression8
    (73) expression7 -> . expression7 Divide expression8
    (74) expression7 -> . expression7 Mod expression8
    (75) expression7 -> . expression7 Power expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    ParenR          reduce using rule 1 (empty -> .)
    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    identifier                     shift and go to state 18
    expr_list                      shift and go to state 20
    empty                          shift and go to state 21
    expr_list_p                    shift and go to state 22
    expression                     shift and go to state 23
    expression1                    shift and go to state 24
    expression2                    shift and go to state 25
    expression3                    shift and go to state 26
    expression4                    shift and go to state 27
    BinaryXnor                     shift and go to state 30
    expression5                    shift and go to state 32
    expression6                    shift and go to state 33
    expression7                    shift and go to state 34
    expression8                    shift and go to state 37
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45

state 15

    (129) caliper_declaration -> KW_struct identifier ParenL . expr_list ParenR Semi caliper_statement_list KW_endstruct
    (4) expr_list -> . empty
    (5) expr_list -> . expr_list_p
    (1) empty -> .
    (2) expr_list_p -> . expression
    (3) expr_list_p -> . expression Comma expr_list_p
    (39) expression -> . expression1
    (40) expression1 -> . expression2
    (41) expression1 -> . expression2 LogicalImplication expression1
    (42) expression1 -> . expression2 LogicalEquivalence expression1
    (43) expression2 -> . expression3
    (44) expression2 -> . expression3 Question expression Colon expression2
    (45) expression3 -> . expression4
    (46) expression3 -> . expression3 LogicalOr expression4
    (47) expression3 -> . expression3 LogicalAnd expression4
    (48) expression3 -> . expression3 Bar expression4
    (49) expression3 -> . expression3 Carat expression4
    (50) expression3 -> . expression3 BinaryXnor expression4
    (51) expression3 -> . expression3 Amp expression4
    (52) expression3 -> . expression3 Equality expression4
    (53) expression3 -> . expression3 Inequality expression4
    (54) expression3 -> . expression3 CaseEquality expression4
    (55) expression3 -> . expression3 CaseInequality expression4
    (56) expression3 -> . expression3 WildcardEquality expression4
    (57) expression3 -> . expression3 WildcardInequality expression4
    (58) expression4 -> . expression5
    (59) expression4 -> . expression4 LessThan expression5
    (60) expression4 -> . expression4 LessThanEqual expression5
    (61) expression4 -> . expression4 GreaterThan expression5
    (62) expression4 -> . expression4 GreaterThanEqual expression5
    (63) expression5 -> . expression6
    (64) expression5 -> . expression5 LogicalShiftRight expression6
    (65) expression5 -> . expression5 LogicalShiftLeft expression6
    (66) expression5 -> . expression5 ArithmeticShiftRight expression6
    (67) expression5 -> . expression5 ArithmeticShiftLeft expression6
    (68) expression6 -> . expression7
    (69) expression6 -> . expression6 Plus expression7
    (70) expression6 -> . expression6 Minus expression7
    (71) expression7 -> . expression8
    (72) expression7 -> . expression7 Star expression8
    (73) expression7 -> . expression7 Divide expression8
    (74) expression7 -> . expression7 Mod expression8
    (75) expression7 -> . expression7 Power expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    ParenR          reduce using rule 1 (empty -> .)
    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    identifier                     shift and go to state 18
    expr_list                      shift and go to state 48
    empty                          shift and go to state 21
    expr_list_p                    shift and go to state 22
    expression                     shift and go to state 23
    expression1                    shift and go to state 24
    expression2                    shift and go to state 25
    expression3                    shift and go to state 26
    expression4                    shift and go to state 27
    BinaryXnor                     shift and go to state 30
    expression5                    shift and go to state 32
    expression6                    shift and go to state 33
    expression7                    shift and go to state 34
    expression8                    shift and go to state 37
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45

state 16

    (130) caliper_declaration -> KW_module identifier ParenL . expr_list ParenR Semi caliper_mod_stmt_list KW_endmodule
    (4) expr_list -> . empty
    (5) expr_list -> . expr_list_p
    (1) empty -> .
    (2) expr_list_p -> . expression
    (3) expr_list_p -> . expression Comma expr_list_p
    (39) expression -> . expression1
    (40) expression1 -> . expression2
    (41) expression1 -> . expression2 LogicalImplication expression1
    (42) expression1 -> . expression2 LogicalEquivalence expression1
    (43) expression2 -> . expression3
    (44) expression2 -> . expression3 Question expression Colon expression2
    (45) expression3 -> . expression4
    (46) expression3 -> . expression3 LogicalOr expression4
    (47) expression3 -> . expression3 LogicalAnd expression4
    (48) expression3 -> . expression3 Bar expression4
    (49) expression3 -> . expression3 Carat expression4
    (50) expression3 -> . expression3 BinaryXnor expression4
    (51) expression3 -> . expression3 Amp expression4
    (52) expression3 -> . expression3 Equality expression4
    (53) expression3 -> . expression3 Inequality expression4
    (54) expression3 -> . expression3 CaseEquality expression4
    (55) expression3 -> . expression3 CaseInequality expression4
    (56) expression3 -> . expression3 WildcardEquality expression4
    (57) expression3 -> . expression3 WildcardInequality expression4
    (58) expression4 -> . expression5
    (59) expression4 -> . expression4 LessThan expression5
    (60) expression4 -> . expression4 LessThanEqual expression5
    (61) expression4 -> . expression4 GreaterThan expression5
    (62) expression4 -> . expression4 GreaterThanEqual expression5
    (63) expression5 -> . expression6
    (64) expression5 -> . expression5 LogicalShiftRight expression6
    (65) expression5 -> . expression5 LogicalShiftLeft expression6
    (66) expression5 -> . expression5 ArithmeticShiftRight expression6
    (67) expression5 -> . expression5 ArithmeticShiftLeft expression6
    (68) expression6 -> . expression7
    (69) expression6 -> . expression6 Plus expression7
    (70) expression6 -> . expression6 Minus expression7
    (71) expression7 -> . expression8
    (72) expression7 -> . expression7 Star expression8
    (73) expression7 -> . expression7 Divide expression8
    (74) expression7 -> . expression7 Mod expression8
    (75) expression7 -> . expression7 Power expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    ParenR          reduce using rule 1 (empty -> .)
    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    identifier                     shift and go to state 18
    expr_list                      shift and go to state 49
    empty                          shift and go to state 21
    expr_list_p                    shift and go to state 22
    expression                     shift and go to state 23
    expression1                    shift and go to state 24
    expression2                    shift and go to state 25
    expression3                    shift and go to state 26
    expression4                    shift and go to state 27
    BinaryXnor                     shift and go to state 30
    expression5                    shift and go to state 32
    expression6                    shift and go to state 33
    expression7                    shift and go to state 34
    expression8                    shift and go to state 37
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45

state 17

    (131) caliper_declaration -> KW_parameter identifier Semi .

    KW_spec         reduce using rule 131 (caliper_declaration -> KW_parameter identifier Semi .)
    KW_struct       reduce using rule 131 (caliper_declaration -> KW_parameter identifier Semi .)
    KW_module       reduce using rule 131 (caliper_declaration -> KW_parameter identifier Semi .)
    KW_parameter    reduce using rule 131 (caliper_declaration -> KW_parameter identifier Semi .)
    $end            reduce using rule 131 (caliper_declaration -> KW_parameter identifier Semi .)


state 18

    (92) primary1 -> identifier .
    (97) function_call -> identifier . ParenL expr_list ParenR

    Dot             reduce using rule 92 (primary1 -> identifier .)
    BracketL        reduce using rule 92 (primary1 -> identifier .)
    Star            reduce using rule 92 (primary1 -> identifier .)
    Divide          reduce using rule 92 (primary1 -> identifier .)
    Mod             reduce using rule 92 (primary1 -> identifier .)
    Plus            reduce using rule 92 (primary1 -> identifier .)
    Minus           reduce using rule 92 (primary1 -> identifier .)
    GreaterThan     reduce using rule 92 (primary1 -> identifier .)
    LessThan        reduce using rule 92 (primary1 -> identifier .)
    Question        reduce using rule 92 (primary1 -> identifier .)
    Bar             reduce using rule 92 (primary1 -> identifier .)
    Carat           reduce using rule 92 (primary1 -> identifier .)
    Amp             reduce using rule 92 (primary1 -> identifier .)
    Tilde           reduce using rule 92 (primary1 -> identifier .)
    Equals          reduce using rule 92 (primary1 -> identifier .)
    Not             reduce using rule 92 (primary1 -> identifier .)
    Comma           reduce using rule 92 (primary1 -> identifier .)
    ParenR          reduce using rule 92 (primary1 -> identifier .)
    Semi            reduce using rule 92 (primary1 -> identifier .)
    Colon           reduce using rule 92 (primary1 -> identifier .)
    BracketR        reduce using rule 92 (primary1 -> identifier .)
    ParenL          shift and go to state 50


state 19

    (101) primary -> ParenL . expression ParenR
    (39) expression -> . expression1
    (40) expression1 -> . expression2
    (41) expression1 -> . expression2 LogicalImplication expression1
    (42) expression1 -> . expression2 LogicalEquivalence expression1
    (43) expression2 -> . expression3
    (44) expression2 -> . expression3 Question expression Colon expression2
    (45) expression3 -> . expression4
    (46) expression3 -> . expression3 LogicalOr expression4
    (47) expression3 -> . expression3 LogicalAnd expression4
    (48) expression3 -> . expression3 Bar expression4
    (49) expression3 -> . expression3 Carat expression4
    (50) expression3 -> . expression3 BinaryXnor expression4
    (51) expression3 -> . expression3 Amp expression4
    (52) expression3 -> . expression3 Equality expression4
    (53) expression3 -> . expression3 Inequality expression4
    (54) expression3 -> . expression3 CaseEquality expression4
    (55) expression3 -> . expression3 CaseInequality expression4
    (56) expression3 -> . expression3 WildcardEquality expression4
    (57) expression3 -> . expression3 WildcardInequality expression4
    (58) expression4 -> . expression5
    (59) expression4 -> . expression4 LessThan expression5
    (60) expression4 -> . expression4 LessThanEqual expression5
    (61) expression4 -> . expression4 GreaterThan expression5
    (62) expression4 -> . expression4 GreaterThanEqual expression5
    (63) expression5 -> . expression6
    (64) expression5 -> . expression5 LogicalShiftRight expression6
    (65) expression5 -> . expression5 LogicalShiftLeft expression6
    (66) expression5 -> . expression5 ArithmeticShiftRight expression6
    (67) expression5 -> . expression5 ArithmeticShiftLeft expression6
    (68) expression6 -> . expression7
    (69) expression6 -> . expression6 Plus expression7
    (70) expression6 -> . expression6 Minus expression7
    (71) expression7 -> . expression8
    (72) expression7 -> . expression7 Star expression8
    (73) expression7 -> . expression7 Divide expression8
    (74) expression7 -> . expression7 Mod expression8
    (75) expression7 -> . expression7 Power expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    expression                     shift and go to state 51
    expression1                    shift and go to state 24
    expression2                    shift and go to state 25
    expression3                    shift and go to state 26
    expression4                    shift and go to state 27
    BinaryXnor                     shift and go to state 30
    expression5                    shift and go to state 32
    expression6                    shift and go to state 33
    expression7                    shift and go to state 34
    expression8                    shift and go to state 37
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 20

    (128) caliper_declaration -> KW_spec identifier ParenL expr_list . ParenR Semi caliper_statement_list KW_endspec

    ParenR          shift and go to state 52


state 21

    (4) expr_list -> empty .

    ParenR          reduce using rule 4 (expr_list -> empty .)


state 22

    (5) expr_list -> expr_list_p .

    ParenR          reduce using rule 5 (expr_list -> expr_list_p .)


state 23

    (2) expr_list_p -> expression .
    (3) expr_list_p -> expression . Comma expr_list_p

    ParenR          reduce using rule 2 (expr_list_p -> expression .)
    Semi            reduce using rule 2 (expr_list_p -> expression .)
    Comma           shift and go to state 53


state 24

    (39) expression -> expression1 .

    Comma           reduce using rule 39 (expression -> expression1 .)
    ParenR          reduce using rule 39 (expression -> expression1 .)
    Semi            reduce using rule 39 (expression -> expression1 .)
    Colon           reduce using rule 39 (expression -> expression1 .)
    BracketR        reduce using rule 39 (expression -> expression1 .)
    Plus            reduce using rule 39 (expression -> expression1 .)
    Minus           reduce using rule 39 (expression -> expression1 .)


state 25

    (40) expression1 -> expression2 .
    (41) expression1 -> expression2 . LogicalImplication expression1
    (42) expression1 -> expression2 . LogicalEquivalence expression1
    (33) LogicalImplication -> . Minus GreaterThan
    (34) LogicalEquivalence -> . LessThan Minus GreaterThan

  ! shift/reduce conflict for Minus resolved as shift
    Comma           reduce using rule 40 (expression1 -> expression2 .)
    ParenR          reduce using rule 40 (expression1 -> expression2 .)
    Semi            reduce using rule 40 (expression1 -> expression2 .)
    Colon           reduce using rule 40 (expression1 -> expression2 .)
    BracketR        reduce using rule 40 (expression1 -> expression2 .)
    Plus            reduce using rule 40 (expression1 -> expression2 .)
    Minus           shift and go to state 56
    LessThan        shift and go to state 57

  ! Minus           [ reduce using rule 40 (expression1 -> expression2 .) ]

    LogicalImplication             shift and go to state 54
    LogicalEquivalence             shift and go to state 55

state 26

    (43) expression2 -> expression3 .
    (44) expression2 -> expression3 . Question expression Colon expression2
    (46) expression3 -> expression3 . LogicalOr expression4
    (47) expression3 -> expression3 . LogicalAnd expression4
    (48) expression3 -> expression3 . Bar expression4
    (49) expression3 -> expression3 . Carat expression4
    (50) expression3 -> expression3 . BinaryXnor expression4
    (51) expression3 -> expression3 . Amp expression4
    (52) expression3 -> expression3 . Equality expression4
    (53) expression3 -> expression3 . Inequality expression4
    (54) expression3 -> expression3 . CaseEquality expression4
    (55) expression3 -> expression3 . CaseInequality expression4
    (56) expression3 -> expression3 . WildcardEquality expression4
    (57) expression3 -> expression3 . WildcardInequality expression4
    (26) LogicalOr -> . Bar Bar
    (25) LogicalAnd -> . Amp Amp
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (17) Equality -> . Equals Equals
    (18) Inequality -> . Not Equals
    (19) CaseEquality -> . Equals Equals Equals
    (20) CaseInequality -> . Not Equals Equals
    (21) WildcardEquality -> . Equals Equals Question
    (22) WildcardInequality -> . Not Equals Question

    Minus           reduce using rule 43 (expression2 -> expression3 .)
    LessThan        reduce using rule 43 (expression2 -> expression3 .)
    Comma           reduce using rule 43 (expression2 -> expression3 .)
    ParenR          reduce using rule 43 (expression2 -> expression3 .)
    Semi            reduce using rule 43 (expression2 -> expression3 .)
    Colon           reduce using rule 43 (expression2 -> expression3 .)
    BracketR        reduce using rule 43 (expression2 -> expression3 .)
    Plus            reduce using rule 43 (expression2 -> expression3 .)
    Question        shift and go to state 58
    Bar             shift and go to state 61
    Carat           shift and go to state 62
    Amp             shift and go to state 64
    Tilde           shift and go to state 71
    Equals          shift and go to state 72
    Not             shift and go to state 73

    LogicalOr                      shift and go to state 59
    LogicalAnd                     shift and go to state 60
    BinaryXnor                     shift and go to state 63
    Equality                       shift and go to state 65
    Inequality                     shift and go to state 66
    CaseEquality                   shift and go to state 67
    CaseInequality                 shift and go to state 68
    WildcardEquality               shift and go to state 69
    WildcardInequality             shift and go to state 70

state 27

    (45) expression3 -> expression4 .
    (59) expression4 -> expression4 . LessThan expression5
    (60) expression4 -> expression4 . LessThanEqual expression5
    (61) expression4 -> expression4 . GreaterThan expression5
    (62) expression4 -> expression4 . GreaterThanEqual expression5
    (23) LessThanEqual -> . LessThan Equals
    (24) GreaterThanEqual -> . GreaterThan Equals

  ! shift/reduce conflict for LessThan resolved as shift
    Question        reduce using rule 45 (expression3 -> expression4 .)
    Bar             reduce using rule 45 (expression3 -> expression4 .)
    Carat           reduce using rule 45 (expression3 -> expression4 .)
    Amp             reduce using rule 45 (expression3 -> expression4 .)
    Tilde           reduce using rule 45 (expression3 -> expression4 .)
    Equals          reduce using rule 45 (expression3 -> expression4 .)
    Not             reduce using rule 45 (expression3 -> expression4 .)
    Minus           reduce using rule 45 (expression3 -> expression4 .)
    Comma           reduce using rule 45 (expression3 -> expression4 .)
    ParenR          reduce using rule 45 (expression3 -> expression4 .)
    Semi            reduce using rule 45 (expression3 -> expression4 .)
    Colon           reduce using rule 45 (expression3 -> expression4 .)
    BracketR        reduce using rule 45 (expression3 -> expression4 .)
    Plus            reduce using rule 45 (expression3 -> expression4 .)
    LessThan        shift and go to state 74
    GreaterThan     shift and go to state 76

  ! LessThan        [ reduce using rule 45 (expression3 -> expression4 .) ]

    LessThanEqual                  shift and go to state 75
    GreaterThanEqual               shift and go to state 77

state 28

    (81) expression8 -> Bar . primary
    (32) BinaryNor -> Bar . Tilde
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Tilde           shift and go to state 79
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    primary                        shift and go to state 78
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 29

    (83) expression8 -> Carat . primary
    (28) BinaryXnor -> Carat . Tilde
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Tilde           shift and go to state 81
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    primary                        shift and go to state 80
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 30

    (84) expression8 -> BinaryXnor . primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    primary                        shift and go to state 82
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 31

    (79) expression8 -> Amp . primary
    (30) BinaryNand -> Amp . Tilde
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Tilde           shift and go to state 84
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    primary                        shift and go to state 83
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 32

    (58) expression4 -> expression5 .
    (64) expression5 -> expression5 . LogicalShiftRight expression6
    (65) expression5 -> expression5 . LogicalShiftLeft expression6
    (66) expression5 -> expression5 . ArithmeticShiftRight expression6
    (67) expression5 -> expression5 . ArithmeticShiftLeft expression6
    (36) LogicalShiftRight -> . GreaterThan GreaterThan
    (35) LogicalShiftLeft -> . LessThan LessThan
    (38) ArithmeticShiftRight -> . GreaterThan GreaterThan GreaterThan
    (37) ArithmeticShiftLeft -> . LessThan LessThan LessThan

  ! shift/reduce conflict for GreaterThan resolved as shift
  ! shift/reduce conflict for LessThan resolved as shift
    Question        reduce using rule 58 (expression4 -> expression5 .)
    Bar             reduce using rule 58 (expression4 -> expression5 .)
    Carat           reduce using rule 58 (expression4 -> expression5 .)
    Amp             reduce using rule 58 (expression4 -> expression5 .)
    Tilde           reduce using rule 58 (expression4 -> expression5 .)
    Equals          reduce using rule 58 (expression4 -> expression5 .)
    Not             reduce using rule 58 (expression4 -> expression5 .)
    Minus           reduce using rule 58 (expression4 -> expression5 .)
    Comma           reduce using rule 58 (expression4 -> expression5 .)
    ParenR          reduce using rule 58 (expression4 -> expression5 .)
    Semi            reduce using rule 58 (expression4 -> expression5 .)
    Colon           reduce using rule 58 (expression4 -> expression5 .)
    BracketR        reduce using rule 58 (expression4 -> expression5 .)
    Plus            reduce using rule 58 (expression4 -> expression5 .)
    GreaterThan     shift and go to state 89
    LessThan        shift and go to state 90

  ! LessThan        [ reduce using rule 58 (expression4 -> expression5 .) ]
  ! GreaterThan     [ reduce using rule 58 (expression4 -> expression5 .) ]

    LogicalShiftRight              shift and go to state 85
    LogicalShiftLeft               shift and go to state 86
    ArithmeticShiftRight           shift and go to state 87
    ArithmeticShiftLeft            shift and go to state 88

state 33

    (63) expression5 -> expression6 .
    (69) expression6 -> expression6 . Plus expression7
    (70) expression6 -> expression6 . Minus expression7

  ! shift/reduce conflict for Plus resolved as shift
  ! shift/reduce conflict for Minus resolved as shift
    GreaterThan     reduce using rule 63 (expression5 -> expression6 .)
    LessThan        reduce using rule 63 (expression5 -> expression6 .)
    Question        reduce using rule 63 (expression5 -> expression6 .)
    Bar             reduce using rule 63 (expression5 -> expression6 .)
    Carat           reduce using rule 63 (expression5 -> expression6 .)
    Amp             reduce using rule 63 (expression5 -> expression6 .)
    Tilde           reduce using rule 63 (expression5 -> expression6 .)
    Equals          reduce using rule 63 (expression5 -> expression6 .)
    Not             reduce using rule 63 (expression5 -> expression6 .)
    Comma           reduce using rule 63 (expression5 -> expression6 .)
    ParenR          reduce using rule 63 (expression5 -> expression6 .)
    Semi            reduce using rule 63 (expression5 -> expression6 .)
    Colon           reduce using rule 63 (expression5 -> expression6 .)
    BracketR        reduce using rule 63 (expression5 -> expression6 .)
    Plus            shift and go to state 91
    Minus           shift and go to state 92

  ! Minus           [ reduce using rule 63 (expression5 -> expression6 .) ]
  ! Plus            [ reduce using rule 63 (expression5 -> expression6 .) ]


state 34

    (68) expression6 -> expression7 .
    (72) expression7 -> expression7 . Star expression8
    (73) expression7 -> expression7 . Divide expression8
    (74) expression7 -> expression7 . Mod expression8
    (75) expression7 -> expression7 . Power expression8
    (16) Power -> . Star Star

    Plus            reduce using rule 68 (expression6 -> expression7 .)
    Minus           reduce using rule 68 (expression6 -> expression7 .)
    GreaterThan     reduce using rule 68 (expression6 -> expression7 .)
    LessThan        reduce using rule 68 (expression6 -> expression7 .)
    Question        reduce using rule 68 (expression6 -> expression7 .)
    Bar             reduce using rule 68 (expression6 -> expression7 .)
    Carat           reduce using rule 68 (expression6 -> expression7 .)
    Amp             reduce using rule 68 (expression6 -> expression7 .)
    Tilde           reduce using rule 68 (expression6 -> expression7 .)
    Equals          reduce using rule 68 (expression6 -> expression7 .)
    Not             reduce using rule 68 (expression6 -> expression7 .)
    Comma           reduce using rule 68 (expression6 -> expression7 .)
    ParenR          reduce using rule 68 (expression6 -> expression7 .)
    Semi            reduce using rule 68 (expression6 -> expression7 .)
    Colon           reduce using rule 68 (expression6 -> expression7 .)
    BracketR        reduce using rule 68 (expression6 -> expression7 .)
    Star            shift and go to state 93
    Divide          shift and go to state 94
    Mod             shift and go to state 95

    Power                          shift and go to state 96

state 35

    (77) expression8 -> Plus . primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    primary                        shift and go to state 97
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 36

    (78) expression8 -> Minus . primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    primary                        shift and go to state 98
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 37

    (71) expression7 -> expression8 .

    Star            reduce using rule 71 (expression7 -> expression8 .)
    Divide          reduce using rule 71 (expression7 -> expression8 .)
    Mod             reduce using rule 71 (expression7 -> expression8 .)
    Plus            reduce using rule 71 (expression7 -> expression8 .)
    Minus           reduce using rule 71 (expression7 -> expression8 .)
    GreaterThan     reduce using rule 71 (expression7 -> expression8 .)
    LessThan        reduce using rule 71 (expression7 -> expression8 .)
    Question        reduce using rule 71 (expression7 -> expression8 .)
    Bar             reduce using rule 71 (expression7 -> expression8 .)
    Carat           reduce using rule 71 (expression7 -> expression8 .)
    Amp             reduce using rule 71 (expression7 -> expression8 .)
    Tilde           reduce using rule 71 (expression7 -> expression8 .)
    Equals          reduce using rule 71 (expression7 -> expression8 .)
    Not             reduce using rule 71 (expression7 -> expression8 .)
    Comma           reduce using rule 71 (expression7 -> expression8 .)
    ParenR          reduce using rule 71 (expression7 -> expression8 .)
    Semi            reduce using rule 71 (expression7 -> expression8 .)
    Colon           reduce using rule 71 (expression7 -> expression8 .)
    BracketR        reduce using rule 71 (expression7 -> expression8 .)


state 38

    (76) expression8 -> primary .

    Star            reduce using rule 76 (expression8 -> primary .)
    Divide          reduce using rule 76 (expression8 -> primary .)
    Mod             reduce using rule 76 (expression8 -> primary .)
    Plus            reduce using rule 76 (expression8 -> primary .)
    Minus           reduce using rule 76 (expression8 -> primary .)
    GreaterThan     reduce using rule 76 (expression8 -> primary .)
    LessThan        reduce using rule 76 (expression8 -> primary .)
    Question        reduce using rule 76 (expression8 -> primary .)
    Bar             reduce using rule 76 (expression8 -> primary .)
    Carat           reduce using rule 76 (expression8 -> primary .)
    Amp             reduce using rule 76 (expression8 -> primary .)
    Tilde           reduce using rule 76 (expression8 -> primary .)
    Equals          reduce using rule 76 (expression8 -> primary .)
    Not             reduce using rule 76 (expression8 -> primary .)
    Comma           reduce using rule 76 (expression8 -> primary .)
    ParenR          reduce using rule 76 (expression8 -> primary .)
    Semi            reduce using rule 76 (expression8 -> primary .)
    Colon           reduce using rule 76 (expression8 -> primary .)
    BracketR        reduce using rule 76 (expression8 -> primary .)


state 39

    (80) expression8 -> BinaryNand . primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    primary                        shift and go to state 99
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 40

    (82) expression8 -> BinaryNor . primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    primary                        shift and go to state 100
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 41

    (85) expression8 -> Not . primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    primary                        shift and go to state 101
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 42

    (86) expression8 -> Tilde . primary
    (29) BinaryNand -> Tilde . Amp
    (31) BinaryNor -> Tilde . Bar
    (27) BinaryXnor -> Tilde . Carat
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Amp             shift and go to state 103
    Bar             shift and go to state 104
    Carat           shift and go to state 105
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    primary                        shift and go to state 102
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 43

    (98) primary -> number .

    Star            reduce using rule 98 (primary -> number .)
    Divide          reduce using rule 98 (primary -> number .)
    Mod             reduce using rule 98 (primary -> number .)
    Plus            reduce using rule 98 (primary -> number .)
    Minus           reduce using rule 98 (primary -> number .)
    GreaterThan     reduce using rule 98 (primary -> number .)
    LessThan        reduce using rule 98 (primary -> number .)
    Question        reduce using rule 98 (primary -> number .)
    Bar             reduce using rule 98 (primary -> number .)
    Carat           reduce using rule 98 (primary -> number .)
    Amp             reduce using rule 98 (primary -> number .)
    Tilde           reduce using rule 98 (primary -> number .)
    Equals          reduce using rule 98 (primary -> number .)
    Not             reduce using rule 98 (primary -> number .)
    Comma           reduce using rule 98 (primary -> number .)
    ParenR          reduce using rule 98 (primary -> number .)
    Semi            reduce using rule 98 (primary -> number .)
    Colon           reduce using rule 98 (primary -> number .)
    BracketR        reduce using rule 98 (primary -> number .)


state 44

    (99) primary -> primary1 .
    (94) primary1 -> primary1 . Dot identifier
    (95) primary1 -> primary1 . BracketL expression BracketR
    (96) primary1 -> primary1 . BracketL part_select_range BracketR

    Star            reduce using rule 99 (primary -> primary1 .)
    Divide          reduce using rule 99 (primary -> primary1 .)
    Mod             reduce using rule 99 (primary -> primary1 .)
    Plus            reduce using rule 99 (primary -> primary1 .)
    Minus           reduce using rule 99 (primary -> primary1 .)
    GreaterThan     reduce using rule 99 (primary -> primary1 .)
    LessThan        reduce using rule 99 (primary -> primary1 .)
    Question        reduce using rule 99 (primary -> primary1 .)
    Bar             reduce using rule 99 (primary -> primary1 .)
    Carat           reduce using rule 99 (primary -> primary1 .)
    Amp             reduce using rule 99 (primary -> primary1 .)
    Tilde           reduce using rule 99 (primary -> primary1 .)
    Equals          reduce using rule 99 (primary -> primary1 .)
    Not             reduce using rule 99 (primary -> primary1 .)
    Comma           reduce using rule 99 (primary -> primary1 .)
    ParenR          reduce using rule 99 (primary -> primary1 .)
    Semi            reduce using rule 99 (primary -> primary1 .)
    Colon           reduce using rule 99 (primary -> primary1 .)
    BracketR        reduce using rule 99 (primary -> primary1 .)
    Dot             shift and go to state 106
    BracketL        shift and go to state 107


state 45

    (100) primary -> function_call .

    Star            reduce using rule 100 (primary -> function_call .)
    Divide          reduce using rule 100 (primary -> function_call .)
    Mod             reduce using rule 100 (primary -> function_call .)
    Plus            reduce using rule 100 (primary -> function_call .)
    Minus           reduce using rule 100 (primary -> function_call .)
    GreaterThan     reduce using rule 100 (primary -> function_call .)
    LessThan        reduce using rule 100 (primary -> function_call .)
    Question        reduce using rule 100 (primary -> function_call .)
    Bar             reduce using rule 100 (primary -> function_call .)
    Carat           reduce using rule 100 (primary -> function_call .)
    Amp             reduce using rule 100 (primary -> function_call .)
    Tilde           reduce using rule 100 (primary -> function_call .)
    Equals          reduce using rule 100 (primary -> function_call .)
    Not             reduce using rule 100 (primary -> function_call .)
    Comma           reduce using rule 100 (primary -> function_call .)
    ParenR          reduce using rule 100 (primary -> function_call .)
    Semi            reduce using rule 100 (primary -> function_call .)
    Colon           reduce using rule 100 (primary -> function_call .)
    BracketR        reduce using rule 100 (primary -> function_call .)


state 46

    (90) number -> Num .

    Star            reduce using rule 90 (number -> Num .)
    Divide          reduce using rule 90 (number -> Num .)
    Mod             reduce using rule 90 (number -> Num .)
    Plus            reduce using rule 90 (number -> Num .)
    Minus           reduce using rule 90 (number -> Num .)
    GreaterThan     reduce using rule 90 (number -> Num .)
    LessThan        reduce using rule 90 (number -> Num .)
    Question        reduce using rule 90 (number -> Num .)
    Bar             reduce using rule 90 (number -> Num .)
    Carat           reduce using rule 90 (number -> Num .)
    Amp             reduce using rule 90 (number -> Num .)
    Tilde           reduce using rule 90 (number -> Num .)
    Equals          reduce using rule 90 (number -> Num .)
    Not             reduce using rule 90 (number -> Num .)
    Comma           reduce using rule 90 (number -> Num .)
    ParenR          reduce using rule 90 (number -> Num .)
    Semi            reduce using rule 90 (number -> Num .)
    Colon           reduce using rule 90 (number -> Num .)
    BracketR        reduce using rule 90 (number -> Num .)


state 47

    (93) primary1 -> KW_this .

    Dot             reduce using rule 93 (primary1 -> KW_this .)
    BracketL        reduce using rule 93 (primary1 -> KW_this .)
    Star            reduce using rule 93 (primary1 -> KW_this .)
    Divide          reduce using rule 93 (primary1 -> KW_this .)
    Mod             reduce using rule 93 (primary1 -> KW_this .)
    Plus            reduce using rule 93 (primary1 -> KW_this .)
    Minus           reduce using rule 93 (primary1 -> KW_this .)
    GreaterThan     reduce using rule 93 (primary1 -> KW_this .)
    LessThan        reduce using rule 93 (primary1 -> KW_this .)
    Question        reduce using rule 93 (primary1 -> KW_this .)
    Bar             reduce using rule 93 (primary1 -> KW_this .)
    Carat           reduce using rule 93 (primary1 -> KW_this .)
    Amp             reduce using rule 93 (primary1 -> KW_this .)
    Tilde           reduce using rule 93 (primary1 -> KW_this .)
    Equals          reduce using rule 93 (primary1 -> KW_this .)
    Not             reduce using rule 93 (primary1 -> KW_this .)
    Comma           reduce using rule 93 (primary1 -> KW_this .)
    ParenR          reduce using rule 93 (primary1 -> KW_this .)
    Semi            reduce using rule 93 (primary1 -> KW_this .)
    Colon           reduce using rule 93 (primary1 -> KW_this .)
    BracketR        reduce using rule 93 (primary1 -> KW_this .)


state 48

    (129) caliper_declaration -> KW_struct identifier ParenL expr_list . ParenR Semi caliper_statement_list KW_endstruct

    ParenR          shift and go to state 108


state 49

    (130) caliper_declaration -> KW_module identifier ParenL expr_list . ParenR Semi caliper_mod_stmt_list KW_endmodule

    ParenR          shift and go to state 109


state 50

    (97) function_call -> identifier ParenL . expr_list ParenR
    (4) expr_list -> . empty
    (5) expr_list -> . expr_list_p
    (1) empty -> .
    (2) expr_list_p -> . expression
    (3) expr_list_p -> . expression Comma expr_list_p
    (39) expression -> . expression1
    (40) expression1 -> . expression2
    (41) expression1 -> . expression2 LogicalImplication expression1
    (42) expression1 -> . expression2 LogicalEquivalence expression1
    (43) expression2 -> . expression3
    (44) expression2 -> . expression3 Question expression Colon expression2
    (45) expression3 -> . expression4
    (46) expression3 -> . expression3 LogicalOr expression4
    (47) expression3 -> . expression3 LogicalAnd expression4
    (48) expression3 -> . expression3 Bar expression4
    (49) expression3 -> . expression3 Carat expression4
    (50) expression3 -> . expression3 BinaryXnor expression4
    (51) expression3 -> . expression3 Amp expression4
    (52) expression3 -> . expression3 Equality expression4
    (53) expression3 -> . expression3 Inequality expression4
    (54) expression3 -> . expression3 CaseEquality expression4
    (55) expression3 -> . expression3 CaseInequality expression4
    (56) expression3 -> . expression3 WildcardEquality expression4
    (57) expression3 -> . expression3 WildcardInequality expression4
    (58) expression4 -> . expression5
    (59) expression4 -> . expression4 LessThan expression5
    (60) expression4 -> . expression4 LessThanEqual expression5
    (61) expression4 -> . expression4 GreaterThan expression5
    (62) expression4 -> . expression4 GreaterThanEqual expression5
    (63) expression5 -> . expression6
    (64) expression5 -> . expression5 LogicalShiftRight expression6
    (65) expression5 -> . expression5 LogicalShiftLeft expression6
    (66) expression5 -> . expression5 ArithmeticShiftRight expression6
    (67) expression5 -> . expression5 ArithmeticShiftLeft expression6
    (68) expression6 -> . expression7
    (69) expression6 -> . expression6 Plus expression7
    (70) expression6 -> . expression6 Minus expression7
    (71) expression7 -> . expression8
    (72) expression7 -> . expression7 Star expression8
    (73) expression7 -> . expression7 Divide expression8
    (74) expression7 -> . expression7 Mod expression8
    (75) expression7 -> . expression7 Power expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    ParenR          reduce using rule 1 (empty -> .)
    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    identifier                     shift and go to state 18
    expr_list                      shift and go to state 110
    empty                          shift and go to state 21
    expr_list_p                    shift and go to state 22
    expression                     shift and go to state 23
    expression1                    shift and go to state 24
    expression2                    shift and go to state 25
    expression3                    shift and go to state 26
    expression4                    shift and go to state 27
    BinaryXnor                     shift and go to state 30
    expression5                    shift and go to state 32
    expression6                    shift and go to state 33
    expression7                    shift and go to state 34
    expression8                    shift and go to state 37
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45

state 51

    (101) primary -> ParenL expression . ParenR

    ParenR          shift and go to state 111


state 52

    (128) caliper_declaration -> KW_spec identifier ParenL expr_list ParenR . Semi caliper_statement_list KW_endspec

    Semi            shift and go to state 112


state 53

    (3) expr_list_p -> expression Comma . expr_list_p
    (2) expr_list_p -> . expression
    (3) expr_list_p -> . expression Comma expr_list_p
    (39) expression -> . expression1
    (40) expression1 -> . expression2
    (41) expression1 -> . expression2 LogicalImplication expression1
    (42) expression1 -> . expression2 LogicalEquivalence expression1
    (43) expression2 -> . expression3
    (44) expression2 -> . expression3 Question expression Colon expression2
    (45) expression3 -> . expression4
    (46) expression3 -> . expression3 LogicalOr expression4
    (47) expression3 -> . expression3 LogicalAnd expression4
    (48) expression3 -> . expression3 Bar expression4
    (49) expression3 -> . expression3 Carat expression4
    (50) expression3 -> . expression3 BinaryXnor expression4
    (51) expression3 -> . expression3 Amp expression4
    (52) expression3 -> . expression3 Equality expression4
    (53) expression3 -> . expression3 Inequality expression4
    (54) expression3 -> . expression3 CaseEquality expression4
    (55) expression3 -> . expression3 CaseInequality expression4
    (56) expression3 -> . expression3 WildcardEquality expression4
    (57) expression3 -> . expression3 WildcardInequality expression4
    (58) expression4 -> . expression5
    (59) expression4 -> . expression4 LessThan expression5
    (60) expression4 -> . expression4 LessThanEqual expression5
    (61) expression4 -> . expression4 GreaterThan expression5
    (62) expression4 -> . expression4 GreaterThanEqual expression5
    (63) expression5 -> . expression6
    (64) expression5 -> . expression5 LogicalShiftRight expression6
    (65) expression5 -> . expression5 LogicalShiftLeft expression6
    (66) expression5 -> . expression5 ArithmeticShiftRight expression6
    (67) expression5 -> . expression5 ArithmeticShiftLeft expression6
    (68) expression6 -> . expression7
    (69) expression6 -> . expression6 Plus expression7
    (70) expression6 -> . expression6 Minus expression7
    (71) expression7 -> . expression8
    (72) expression7 -> . expression7 Star expression8
    (73) expression7 -> . expression7 Divide expression8
    (74) expression7 -> . expression7 Mod expression8
    (75) expression7 -> . expression7 Power expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    expression                     shift and go to state 23
    expr_list_p                    shift and go to state 113
    expression1                    shift and go to state 24
    expression2                    shift and go to state 25
    expression3                    shift and go to state 26
    expression4                    shift and go to state 27
    BinaryXnor                     shift and go to state 30
    expression5                    shift and go to state 32
    expression6                    shift and go to state 33
    expression7                    shift and go to state 34
    expression8                    shift and go to state 37
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 54

    (41) expression1 -> expression2 LogicalImplication . expression1
    (40) expression1 -> . expression2
    (41) expression1 -> . expression2 LogicalImplication expression1
    (42) expression1 -> . expression2 LogicalEquivalence expression1
    (43) expression2 -> . expression3
    (44) expression2 -> . expression3 Question expression Colon expression2
    (45) expression3 -> . expression4
    (46) expression3 -> . expression3 LogicalOr expression4
    (47) expression3 -> . expression3 LogicalAnd expression4
    (48) expression3 -> . expression3 Bar expression4
    (49) expression3 -> . expression3 Carat expression4
    (50) expression3 -> . expression3 BinaryXnor expression4
    (51) expression3 -> . expression3 Amp expression4
    (52) expression3 -> . expression3 Equality expression4
    (53) expression3 -> . expression3 Inequality expression4
    (54) expression3 -> . expression3 CaseEquality expression4
    (55) expression3 -> . expression3 CaseInequality expression4
    (56) expression3 -> . expression3 WildcardEquality expression4
    (57) expression3 -> . expression3 WildcardInequality expression4
    (58) expression4 -> . expression5
    (59) expression4 -> . expression4 LessThan expression5
    (60) expression4 -> . expression4 LessThanEqual expression5
    (61) expression4 -> . expression4 GreaterThan expression5
    (62) expression4 -> . expression4 GreaterThanEqual expression5
    (63) expression5 -> . expression6
    (64) expression5 -> . expression5 LogicalShiftRight expression6
    (65) expression5 -> . expression5 LogicalShiftLeft expression6
    (66) expression5 -> . expression5 ArithmeticShiftRight expression6
    (67) expression5 -> . expression5 ArithmeticShiftLeft expression6
    (68) expression6 -> . expression7
    (69) expression6 -> . expression6 Plus expression7
    (70) expression6 -> . expression6 Minus expression7
    (71) expression7 -> . expression8
    (72) expression7 -> . expression7 Star expression8
    (73) expression7 -> . expression7 Divide expression8
    (74) expression7 -> . expression7 Mod expression8
    (75) expression7 -> . expression7 Power expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    expression2                    shift and go to state 25
    expression1                    shift and go to state 114
    expression3                    shift and go to state 26
    expression4                    shift and go to state 27
    BinaryXnor                     shift and go to state 30
    expression5                    shift and go to state 32
    expression6                    shift and go to state 33
    expression7                    shift and go to state 34
    expression8                    shift and go to state 37
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 55

    (42) expression1 -> expression2 LogicalEquivalence . expression1
    (40) expression1 -> . expression2
    (41) expression1 -> . expression2 LogicalImplication expression1
    (42) expression1 -> . expression2 LogicalEquivalence expression1
    (43) expression2 -> . expression3
    (44) expression2 -> . expression3 Question expression Colon expression2
    (45) expression3 -> . expression4
    (46) expression3 -> . expression3 LogicalOr expression4
    (47) expression3 -> . expression3 LogicalAnd expression4
    (48) expression3 -> . expression3 Bar expression4
    (49) expression3 -> . expression3 Carat expression4
    (50) expression3 -> . expression3 BinaryXnor expression4
    (51) expression3 -> . expression3 Amp expression4
    (52) expression3 -> . expression3 Equality expression4
    (53) expression3 -> . expression3 Inequality expression4
    (54) expression3 -> . expression3 CaseEquality expression4
    (55) expression3 -> . expression3 CaseInequality expression4
    (56) expression3 -> . expression3 WildcardEquality expression4
    (57) expression3 -> . expression3 WildcardInequality expression4
    (58) expression4 -> . expression5
    (59) expression4 -> . expression4 LessThan expression5
    (60) expression4 -> . expression4 LessThanEqual expression5
    (61) expression4 -> . expression4 GreaterThan expression5
    (62) expression4 -> . expression4 GreaterThanEqual expression5
    (63) expression5 -> . expression6
    (64) expression5 -> . expression5 LogicalShiftRight expression6
    (65) expression5 -> . expression5 LogicalShiftLeft expression6
    (66) expression5 -> . expression5 ArithmeticShiftRight expression6
    (67) expression5 -> . expression5 ArithmeticShiftLeft expression6
    (68) expression6 -> . expression7
    (69) expression6 -> . expression6 Plus expression7
    (70) expression6 -> . expression6 Minus expression7
    (71) expression7 -> . expression8
    (72) expression7 -> . expression7 Star expression8
    (73) expression7 -> . expression7 Divide expression8
    (74) expression7 -> . expression7 Mod expression8
    (75) expression7 -> . expression7 Power expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    expression2                    shift and go to state 25
    expression1                    shift and go to state 115
    expression3                    shift and go to state 26
    expression4                    shift and go to state 27
    BinaryXnor                     shift and go to state 30
    expression5                    shift and go to state 32
    expression6                    shift and go to state 33
    expression7                    shift and go to state 34
    expression8                    shift and go to state 37
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 56

    (33) LogicalImplication -> Minus . GreaterThan

    GreaterThan     shift and go to state 116


state 57

    (34) LogicalEquivalence -> LessThan . Minus GreaterThan

    Minus           shift and go to state 117


state 58

    (44) expression2 -> expression3 Question . expression Colon expression2
    (39) expression -> . expression1
    (40) expression1 -> . expression2
    (41) expression1 -> . expression2 LogicalImplication expression1
    (42) expression1 -> . expression2 LogicalEquivalence expression1
    (43) expression2 -> . expression3
    (44) expression2 -> . expression3 Question expression Colon expression2
    (45) expression3 -> . expression4
    (46) expression3 -> . expression3 LogicalOr expression4
    (47) expression3 -> . expression3 LogicalAnd expression4
    (48) expression3 -> . expression3 Bar expression4
    (49) expression3 -> . expression3 Carat expression4
    (50) expression3 -> . expression3 BinaryXnor expression4
    (51) expression3 -> . expression3 Amp expression4
    (52) expression3 -> . expression3 Equality expression4
    (53) expression3 -> . expression3 Inequality expression4
    (54) expression3 -> . expression3 CaseEquality expression4
    (55) expression3 -> . expression3 CaseInequality expression4
    (56) expression3 -> . expression3 WildcardEquality expression4
    (57) expression3 -> . expression3 WildcardInequality expression4
    (58) expression4 -> . expression5
    (59) expression4 -> . expression4 LessThan expression5
    (60) expression4 -> . expression4 LessThanEqual expression5
    (61) expression4 -> . expression4 GreaterThan expression5
    (62) expression4 -> . expression4 GreaterThanEqual expression5
    (63) expression5 -> . expression6
    (64) expression5 -> . expression5 LogicalShiftRight expression6
    (65) expression5 -> . expression5 LogicalShiftLeft expression6
    (66) expression5 -> . expression5 ArithmeticShiftRight expression6
    (67) expression5 -> . expression5 ArithmeticShiftLeft expression6
    (68) expression6 -> . expression7
    (69) expression6 -> . expression6 Plus expression7
    (70) expression6 -> . expression6 Minus expression7
    (71) expression7 -> . expression8
    (72) expression7 -> . expression7 Star expression8
    (73) expression7 -> . expression7 Divide expression8
    (74) expression7 -> . expression7 Mod expression8
    (75) expression7 -> . expression7 Power expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    expression3                    shift and go to state 26
    expression                     shift and go to state 118
    expression2                    shift and go to state 25
    expression1                    shift and go to state 24
    expression4                    shift and go to state 27
    BinaryXnor                     shift and go to state 30
    expression5                    shift and go to state 32
    expression6                    shift and go to state 33
    expression7                    shift and go to state 34
    expression8                    shift and go to state 37
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 59

    (46) expression3 -> expression3 LogicalOr . expression4
    (58) expression4 -> . expression5
    (59) expression4 -> . expression4 LessThan expression5
    (60) expression4 -> . expression4 LessThanEqual expression5
    (61) expression4 -> . expression4 GreaterThan expression5
    (62) expression4 -> . expression4 GreaterThanEqual expression5
    (63) expression5 -> . expression6
    (64) expression5 -> . expression5 LogicalShiftRight expression6
    (65) expression5 -> . expression5 LogicalShiftLeft expression6
    (66) expression5 -> . expression5 ArithmeticShiftRight expression6
    (67) expression5 -> . expression5 ArithmeticShiftLeft expression6
    (68) expression6 -> . expression7
    (69) expression6 -> . expression6 Plus expression7
    (70) expression6 -> . expression6 Minus expression7
    (71) expression7 -> . expression8
    (72) expression7 -> . expression7 Star expression8
    (73) expression7 -> . expression7 Divide expression8
    (74) expression7 -> . expression7 Mod expression8
    (75) expression7 -> . expression7 Power expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    expression4                    shift and go to state 119
    expression5                    shift and go to state 32
    expression6                    shift and go to state 33
    expression7                    shift and go to state 34
    expression8                    shift and go to state 37
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    BinaryXnor                     shift and go to state 30
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 60

    (47) expression3 -> expression3 LogicalAnd . expression4
    (58) expression4 -> . expression5
    (59) expression4 -> . expression4 LessThan expression5
    (60) expression4 -> . expression4 LessThanEqual expression5
    (61) expression4 -> . expression4 GreaterThan expression5
    (62) expression4 -> . expression4 GreaterThanEqual expression5
    (63) expression5 -> . expression6
    (64) expression5 -> . expression5 LogicalShiftRight expression6
    (65) expression5 -> . expression5 LogicalShiftLeft expression6
    (66) expression5 -> . expression5 ArithmeticShiftRight expression6
    (67) expression5 -> . expression5 ArithmeticShiftLeft expression6
    (68) expression6 -> . expression7
    (69) expression6 -> . expression6 Plus expression7
    (70) expression6 -> . expression6 Minus expression7
    (71) expression7 -> . expression8
    (72) expression7 -> . expression7 Star expression8
    (73) expression7 -> . expression7 Divide expression8
    (74) expression7 -> . expression7 Mod expression8
    (75) expression7 -> . expression7 Power expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    expression4                    shift and go to state 120
    expression5                    shift and go to state 32
    expression6                    shift and go to state 33
    expression7                    shift and go to state 34
    expression8                    shift and go to state 37
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    BinaryXnor                     shift and go to state 30
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 61

    (48) expression3 -> expression3 Bar . expression4
    (26) LogicalOr -> Bar . Bar
    (58) expression4 -> . expression5
    (59) expression4 -> . expression4 LessThan expression5
    (60) expression4 -> . expression4 LessThanEqual expression5
    (61) expression4 -> . expression4 GreaterThan expression5
    (62) expression4 -> . expression4 GreaterThanEqual expression5
    (63) expression5 -> . expression6
    (64) expression5 -> . expression5 LogicalShiftRight expression6
    (65) expression5 -> . expression5 LogicalShiftLeft expression6
    (66) expression5 -> . expression5 ArithmeticShiftRight expression6
    (67) expression5 -> . expression5 ArithmeticShiftLeft expression6
    (68) expression6 -> . expression7
    (69) expression6 -> . expression6 Plus expression7
    (70) expression6 -> . expression6 Minus expression7
    (71) expression7 -> . expression8
    (72) expression7 -> . expression7 Star expression8
    (73) expression7 -> . expression7 Divide expression8
    (74) expression7 -> . expression7 Mod expression8
    (75) expression7 -> . expression7 Power expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Bar             shift and go to state 121
    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    expression4                    shift and go to state 122
    expression5                    shift and go to state 32
    expression6                    shift and go to state 33
    expression7                    shift and go to state 34
    expression8                    shift and go to state 37
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    BinaryXnor                     shift and go to state 30
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 62

    (49) expression3 -> expression3 Carat . expression4
    (28) BinaryXnor -> Carat . Tilde
    (58) expression4 -> . expression5
    (59) expression4 -> . expression4 LessThan expression5
    (60) expression4 -> . expression4 LessThanEqual expression5
    (61) expression4 -> . expression4 GreaterThan expression5
    (62) expression4 -> . expression4 GreaterThanEqual expression5
    (63) expression5 -> . expression6
    (64) expression5 -> . expression5 LogicalShiftRight expression6
    (65) expression5 -> . expression5 LogicalShiftLeft expression6
    (66) expression5 -> . expression5 ArithmeticShiftRight expression6
    (67) expression5 -> . expression5 ArithmeticShiftLeft expression6
    (68) expression6 -> . expression7
    (69) expression6 -> . expression6 Plus expression7
    (70) expression6 -> . expression6 Minus expression7
    (71) expression7 -> . expression8
    (72) expression7 -> . expression7 Star expression8
    (73) expression7 -> . expression7 Divide expression8
    (74) expression7 -> . expression7 Mod expression8
    (75) expression7 -> . expression7 Power expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Tilde           shift and go to state 124
    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    expression4                    shift and go to state 123
    expression5                    shift and go to state 32
    expression6                    shift and go to state 33
    expression7                    shift and go to state 34
    expression8                    shift and go to state 37
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    BinaryXnor                     shift and go to state 30
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 63

    (50) expression3 -> expression3 BinaryXnor . expression4
    (58) expression4 -> . expression5
    (59) expression4 -> . expression4 LessThan expression5
    (60) expression4 -> . expression4 LessThanEqual expression5
    (61) expression4 -> . expression4 GreaterThan expression5
    (62) expression4 -> . expression4 GreaterThanEqual expression5
    (63) expression5 -> . expression6
    (64) expression5 -> . expression5 LogicalShiftRight expression6
    (65) expression5 -> . expression5 LogicalShiftLeft expression6
    (66) expression5 -> . expression5 ArithmeticShiftRight expression6
    (67) expression5 -> . expression5 ArithmeticShiftLeft expression6
    (68) expression6 -> . expression7
    (69) expression6 -> . expression6 Plus expression7
    (70) expression6 -> . expression6 Minus expression7
    (71) expression7 -> . expression8
    (72) expression7 -> . expression7 Star expression8
    (73) expression7 -> . expression7 Divide expression8
    (74) expression7 -> . expression7 Mod expression8
    (75) expression7 -> . expression7 Power expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    BinaryXnor                     shift and go to state 30
    expression4                    shift and go to state 125
    expression5                    shift and go to state 32
    expression6                    shift and go to state 33
    expression7                    shift and go to state 34
    expression8                    shift and go to state 37
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 64

    (51) expression3 -> expression3 Amp . expression4
    (25) LogicalAnd -> Amp . Amp
    (58) expression4 -> . expression5
    (59) expression4 -> . expression4 LessThan expression5
    (60) expression4 -> . expression4 LessThanEqual expression5
    (61) expression4 -> . expression4 GreaterThan expression5
    (62) expression4 -> . expression4 GreaterThanEqual expression5
    (63) expression5 -> . expression6
    (64) expression5 -> . expression5 LogicalShiftRight expression6
    (65) expression5 -> . expression5 LogicalShiftLeft expression6
    (66) expression5 -> . expression5 ArithmeticShiftRight expression6
    (67) expression5 -> . expression5 ArithmeticShiftLeft expression6
    (68) expression6 -> . expression7
    (69) expression6 -> . expression6 Plus expression7
    (70) expression6 -> . expression6 Minus expression7
    (71) expression7 -> . expression8
    (72) expression7 -> . expression7 Star expression8
    (73) expression7 -> . expression7 Divide expression8
    (74) expression7 -> . expression7 Mod expression8
    (75) expression7 -> . expression7 Power expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Amp             shift and go to state 126
    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    expression4                    shift and go to state 127
    expression5                    shift and go to state 32
    expression6                    shift and go to state 33
    expression7                    shift and go to state 34
    expression8                    shift and go to state 37
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    BinaryXnor                     shift and go to state 30
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 65

    (52) expression3 -> expression3 Equality . expression4
    (58) expression4 -> . expression5
    (59) expression4 -> . expression4 LessThan expression5
    (60) expression4 -> . expression4 LessThanEqual expression5
    (61) expression4 -> . expression4 GreaterThan expression5
    (62) expression4 -> . expression4 GreaterThanEqual expression5
    (63) expression5 -> . expression6
    (64) expression5 -> . expression5 LogicalShiftRight expression6
    (65) expression5 -> . expression5 LogicalShiftLeft expression6
    (66) expression5 -> . expression5 ArithmeticShiftRight expression6
    (67) expression5 -> . expression5 ArithmeticShiftLeft expression6
    (68) expression6 -> . expression7
    (69) expression6 -> . expression6 Plus expression7
    (70) expression6 -> . expression6 Minus expression7
    (71) expression7 -> . expression8
    (72) expression7 -> . expression7 Star expression8
    (73) expression7 -> . expression7 Divide expression8
    (74) expression7 -> . expression7 Mod expression8
    (75) expression7 -> . expression7 Power expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    expression4                    shift and go to state 128
    expression5                    shift and go to state 32
    expression6                    shift and go to state 33
    expression7                    shift and go to state 34
    expression8                    shift and go to state 37
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    BinaryXnor                     shift and go to state 30
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 66

    (53) expression3 -> expression3 Inequality . expression4
    (58) expression4 -> . expression5
    (59) expression4 -> . expression4 LessThan expression5
    (60) expression4 -> . expression4 LessThanEqual expression5
    (61) expression4 -> . expression4 GreaterThan expression5
    (62) expression4 -> . expression4 GreaterThanEqual expression5
    (63) expression5 -> . expression6
    (64) expression5 -> . expression5 LogicalShiftRight expression6
    (65) expression5 -> . expression5 LogicalShiftLeft expression6
    (66) expression5 -> . expression5 ArithmeticShiftRight expression6
    (67) expression5 -> . expression5 ArithmeticShiftLeft expression6
    (68) expression6 -> . expression7
    (69) expression6 -> . expression6 Plus expression7
    (70) expression6 -> . expression6 Minus expression7
    (71) expression7 -> . expression8
    (72) expression7 -> . expression7 Star expression8
    (73) expression7 -> . expression7 Divide expression8
    (74) expression7 -> . expression7 Mod expression8
    (75) expression7 -> . expression7 Power expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    expression4                    shift and go to state 129
    expression5                    shift and go to state 32
    expression6                    shift and go to state 33
    expression7                    shift and go to state 34
    expression8                    shift and go to state 37
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    BinaryXnor                     shift and go to state 30
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 67

    (54) expression3 -> expression3 CaseEquality . expression4
    (58) expression4 -> . expression5
    (59) expression4 -> . expression4 LessThan expression5
    (60) expression4 -> . expression4 LessThanEqual expression5
    (61) expression4 -> . expression4 GreaterThan expression5
    (62) expression4 -> . expression4 GreaterThanEqual expression5
    (63) expression5 -> . expression6
    (64) expression5 -> . expression5 LogicalShiftRight expression6
    (65) expression5 -> . expression5 LogicalShiftLeft expression6
    (66) expression5 -> . expression5 ArithmeticShiftRight expression6
    (67) expression5 -> . expression5 ArithmeticShiftLeft expression6
    (68) expression6 -> . expression7
    (69) expression6 -> . expression6 Plus expression7
    (70) expression6 -> . expression6 Minus expression7
    (71) expression7 -> . expression8
    (72) expression7 -> . expression7 Star expression8
    (73) expression7 -> . expression7 Divide expression8
    (74) expression7 -> . expression7 Mod expression8
    (75) expression7 -> . expression7 Power expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    expression4                    shift and go to state 130
    expression5                    shift and go to state 32
    expression6                    shift and go to state 33
    expression7                    shift and go to state 34
    expression8                    shift and go to state 37
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    BinaryXnor                     shift and go to state 30
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 68

    (55) expression3 -> expression3 CaseInequality . expression4
    (58) expression4 -> . expression5
    (59) expression4 -> . expression4 LessThan expression5
    (60) expression4 -> . expression4 LessThanEqual expression5
    (61) expression4 -> . expression4 GreaterThan expression5
    (62) expression4 -> . expression4 GreaterThanEqual expression5
    (63) expression5 -> . expression6
    (64) expression5 -> . expression5 LogicalShiftRight expression6
    (65) expression5 -> . expression5 LogicalShiftLeft expression6
    (66) expression5 -> . expression5 ArithmeticShiftRight expression6
    (67) expression5 -> . expression5 ArithmeticShiftLeft expression6
    (68) expression6 -> . expression7
    (69) expression6 -> . expression6 Plus expression7
    (70) expression6 -> . expression6 Minus expression7
    (71) expression7 -> . expression8
    (72) expression7 -> . expression7 Star expression8
    (73) expression7 -> . expression7 Divide expression8
    (74) expression7 -> . expression7 Mod expression8
    (75) expression7 -> . expression7 Power expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    expression4                    shift and go to state 131
    expression5                    shift and go to state 32
    expression6                    shift and go to state 33
    expression7                    shift and go to state 34
    expression8                    shift and go to state 37
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    BinaryXnor                     shift and go to state 30
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 69

    (56) expression3 -> expression3 WildcardEquality . expression4
    (58) expression4 -> . expression5
    (59) expression4 -> . expression4 LessThan expression5
    (60) expression4 -> . expression4 LessThanEqual expression5
    (61) expression4 -> . expression4 GreaterThan expression5
    (62) expression4 -> . expression4 GreaterThanEqual expression5
    (63) expression5 -> . expression6
    (64) expression5 -> . expression5 LogicalShiftRight expression6
    (65) expression5 -> . expression5 LogicalShiftLeft expression6
    (66) expression5 -> . expression5 ArithmeticShiftRight expression6
    (67) expression5 -> . expression5 ArithmeticShiftLeft expression6
    (68) expression6 -> . expression7
    (69) expression6 -> . expression6 Plus expression7
    (70) expression6 -> . expression6 Minus expression7
    (71) expression7 -> . expression8
    (72) expression7 -> . expression7 Star expression8
    (73) expression7 -> . expression7 Divide expression8
    (74) expression7 -> . expression7 Mod expression8
    (75) expression7 -> . expression7 Power expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    expression4                    shift and go to state 132
    expression5                    shift and go to state 32
    expression6                    shift and go to state 33
    expression7                    shift and go to state 34
    expression8                    shift and go to state 37
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    BinaryXnor                     shift and go to state 30
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 70

    (57) expression3 -> expression3 WildcardInequality . expression4
    (58) expression4 -> . expression5
    (59) expression4 -> . expression4 LessThan expression5
    (60) expression4 -> . expression4 LessThanEqual expression5
    (61) expression4 -> . expression4 GreaterThan expression5
    (62) expression4 -> . expression4 GreaterThanEqual expression5
    (63) expression5 -> . expression6
    (64) expression5 -> . expression5 LogicalShiftRight expression6
    (65) expression5 -> . expression5 LogicalShiftLeft expression6
    (66) expression5 -> . expression5 ArithmeticShiftRight expression6
    (67) expression5 -> . expression5 ArithmeticShiftLeft expression6
    (68) expression6 -> . expression7
    (69) expression6 -> . expression6 Plus expression7
    (70) expression6 -> . expression6 Minus expression7
    (71) expression7 -> . expression8
    (72) expression7 -> . expression7 Star expression8
    (73) expression7 -> . expression7 Divide expression8
    (74) expression7 -> . expression7 Mod expression8
    (75) expression7 -> . expression7 Power expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    expression4                    shift and go to state 133
    expression5                    shift and go to state 32
    expression6                    shift and go to state 33
    expression7                    shift and go to state 34
    expression8                    shift and go to state 37
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    BinaryXnor                     shift and go to state 30
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 71

    (27) BinaryXnor -> Tilde . Carat

    Carat           shift and go to state 105


state 72

    (17) Equality -> Equals . Equals
    (19) CaseEquality -> Equals . Equals Equals
    (21) WildcardEquality -> Equals . Equals Question

    Equals          shift and go to state 134


state 73

    (18) Inequality -> Not . Equals
    (20) CaseInequality -> Not . Equals Equals
    (22) WildcardInequality -> Not . Equals Question

    Equals          shift and go to state 135


state 74

    (59) expression4 -> expression4 LessThan . expression5
    (23) LessThanEqual -> LessThan . Equals
    (63) expression5 -> . expression6
    (64) expression5 -> . expression5 LogicalShiftRight expression6
    (65) expression5 -> . expression5 LogicalShiftLeft expression6
    (66) expression5 -> . expression5 ArithmeticShiftRight expression6
    (67) expression5 -> . expression5 ArithmeticShiftLeft expression6
    (68) expression6 -> . expression7
    (69) expression6 -> . expression6 Plus expression7
    (70) expression6 -> . expression6 Minus expression7
    (71) expression7 -> . expression8
    (72) expression7 -> . expression7 Star expression8
    (73) expression7 -> . expression7 Divide expression8
    (74) expression7 -> . expression7 Mod expression8
    (75) expression7 -> . expression7 Power expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Equals          shift and go to state 137
    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    expression5                    shift and go to state 136
    expression6                    shift and go to state 33
    expression7                    shift and go to state 34
    expression8                    shift and go to state 37
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    BinaryXnor                     shift and go to state 30
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 75

    (60) expression4 -> expression4 LessThanEqual . expression5
    (63) expression5 -> . expression6
    (64) expression5 -> . expression5 LogicalShiftRight expression6
    (65) expression5 -> . expression5 LogicalShiftLeft expression6
    (66) expression5 -> . expression5 ArithmeticShiftRight expression6
    (67) expression5 -> . expression5 ArithmeticShiftLeft expression6
    (68) expression6 -> . expression7
    (69) expression6 -> . expression6 Plus expression7
    (70) expression6 -> . expression6 Minus expression7
    (71) expression7 -> . expression8
    (72) expression7 -> . expression7 Star expression8
    (73) expression7 -> . expression7 Divide expression8
    (74) expression7 -> . expression7 Mod expression8
    (75) expression7 -> . expression7 Power expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    expression5                    shift and go to state 138
    expression6                    shift and go to state 33
    expression7                    shift and go to state 34
    expression8                    shift and go to state 37
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    BinaryXnor                     shift and go to state 30
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 76

    (61) expression4 -> expression4 GreaterThan . expression5
    (24) GreaterThanEqual -> GreaterThan . Equals
    (63) expression5 -> . expression6
    (64) expression5 -> . expression5 LogicalShiftRight expression6
    (65) expression5 -> . expression5 LogicalShiftLeft expression6
    (66) expression5 -> . expression5 ArithmeticShiftRight expression6
    (67) expression5 -> . expression5 ArithmeticShiftLeft expression6
    (68) expression6 -> . expression7
    (69) expression6 -> . expression6 Plus expression7
    (70) expression6 -> . expression6 Minus expression7
    (71) expression7 -> . expression8
    (72) expression7 -> . expression7 Star expression8
    (73) expression7 -> . expression7 Divide expression8
    (74) expression7 -> . expression7 Mod expression8
    (75) expression7 -> . expression7 Power expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Equals          shift and go to state 140
    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    expression5                    shift and go to state 139
    expression6                    shift and go to state 33
    expression7                    shift and go to state 34
    expression8                    shift and go to state 37
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    BinaryXnor                     shift and go to state 30
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 77

    (62) expression4 -> expression4 GreaterThanEqual . expression5
    (63) expression5 -> . expression6
    (64) expression5 -> . expression5 LogicalShiftRight expression6
    (65) expression5 -> . expression5 LogicalShiftLeft expression6
    (66) expression5 -> . expression5 ArithmeticShiftRight expression6
    (67) expression5 -> . expression5 ArithmeticShiftLeft expression6
    (68) expression6 -> . expression7
    (69) expression6 -> . expression6 Plus expression7
    (70) expression6 -> . expression6 Minus expression7
    (71) expression7 -> . expression8
    (72) expression7 -> . expression7 Star expression8
    (73) expression7 -> . expression7 Divide expression8
    (74) expression7 -> . expression7 Mod expression8
    (75) expression7 -> . expression7 Power expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    expression5                    shift and go to state 141
    expression6                    shift and go to state 33
    expression7                    shift and go to state 34
    expression8                    shift and go to state 37
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    BinaryXnor                     shift and go to state 30
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 78

    (81) expression8 -> Bar primary .

    Star            reduce using rule 81 (expression8 -> Bar primary .)
    Divide          reduce using rule 81 (expression8 -> Bar primary .)
    Mod             reduce using rule 81 (expression8 -> Bar primary .)
    Plus            reduce using rule 81 (expression8 -> Bar primary .)
    Minus           reduce using rule 81 (expression8 -> Bar primary .)
    GreaterThan     reduce using rule 81 (expression8 -> Bar primary .)
    LessThan        reduce using rule 81 (expression8 -> Bar primary .)
    Question        reduce using rule 81 (expression8 -> Bar primary .)
    Bar             reduce using rule 81 (expression8 -> Bar primary .)
    Carat           reduce using rule 81 (expression8 -> Bar primary .)
    Amp             reduce using rule 81 (expression8 -> Bar primary .)
    Tilde           reduce using rule 81 (expression8 -> Bar primary .)
    Equals          reduce using rule 81 (expression8 -> Bar primary .)
    Not             reduce using rule 81 (expression8 -> Bar primary .)
    Comma           reduce using rule 81 (expression8 -> Bar primary .)
    ParenR          reduce using rule 81 (expression8 -> Bar primary .)
    Semi            reduce using rule 81 (expression8 -> Bar primary .)
    Colon           reduce using rule 81 (expression8 -> Bar primary .)
    BracketR        reduce using rule 81 (expression8 -> Bar primary .)


state 79

    (32) BinaryNor -> Bar Tilde .

    ParenL          reduce using rule 32 (BinaryNor -> Bar Tilde .)
    Num             reduce using rule 32 (BinaryNor -> Bar Tilde .)
    KW_this         reduce using rule 32 (BinaryNor -> Bar Tilde .)
    Ident           reduce using rule 32 (BinaryNor -> Bar Tilde .)


state 80

    (83) expression8 -> Carat primary .

    Star            reduce using rule 83 (expression8 -> Carat primary .)
    Divide          reduce using rule 83 (expression8 -> Carat primary .)
    Mod             reduce using rule 83 (expression8 -> Carat primary .)
    Plus            reduce using rule 83 (expression8 -> Carat primary .)
    Minus           reduce using rule 83 (expression8 -> Carat primary .)
    GreaterThan     reduce using rule 83 (expression8 -> Carat primary .)
    LessThan        reduce using rule 83 (expression8 -> Carat primary .)
    Question        reduce using rule 83 (expression8 -> Carat primary .)
    Bar             reduce using rule 83 (expression8 -> Carat primary .)
    Carat           reduce using rule 83 (expression8 -> Carat primary .)
    Amp             reduce using rule 83 (expression8 -> Carat primary .)
    Tilde           reduce using rule 83 (expression8 -> Carat primary .)
    Equals          reduce using rule 83 (expression8 -> Carat primary .)
    Not             reduce using rule 83 (expression8 -> Carat primary .)
    Comma           reduce using rule 83 (expression8 -> Carat primary .)
    ParenR          reduce using rule 83 (expression8 -> Carat primary .)
    Semi            reduce using rule 83 (expression8 -> Carat primary .)
    Colon           reduce using rule 83 (expression8 -> Carat primary .)
    BracketR        reduce using rule 83 (expression8 -> Carat primary .)


state 81

    (28) BinaryXnor -> Carat Tilde .

    ParenL          reduce using rule 28 (BinaryXnor -> Carat Tilde .)
    Num             reduce using rule 28 (BinaryXnor -> Carat Tilde .)
    KW_this         reduce using rule 28 (BinaryXnor -> Carat Tilde .)
    Ident           reduce using rule 28 (BinaryXnor -> Carat Tilde .)


state 82

    (84) expression8 -> BinaryXnor primary .

    Star            reduce using rule 84 (expression8 -> BinaryXnor primary .)
    Divide          reduce using rule 84 (expression8 -> BinaryXnor primary .)
    Mod             reduce using rule 84 (expression8 -> BinaryXnor primary .)
    Plus            reduce using rule 84 (expression8 -> BinaryXnor primary .)
    Minus           reduce using rule 84 (expression8 -> BinaryXnor primary .)
    GreaterThan     reduce using rule 84 (expression8 -> BinaryXnor primary .)
    LessThan        reduce using rule 84 (expression8 -> BinaryXnor primary .)
    Question        reduce using rule 84 (expression8 -> BinaryXnor primary .)
    Bar             reduce using rule 84 (expression8 -> BinaryXnor primary .)
    Carat           reduce using rule 84 (expression8 -> BinaryXnor primary .)
    Amp             reduce using rule 84 (expression8 -> BinaryXnor primary .)
    Tilde           reduce using rule 84 (expression8 -> BinaryXnor primary .)
    Equals          reduce using rule 84 (expression8 -> BinaryXnor primary .)
    Not             reduce using rule 84 (expression8 -> BinaryXnor primary .)
    Comma           reduce using rule 84 (expression8 -> BinaryXnor primary .)
    ParenR          reduce using rule 84 (expression8 -> BinaryXnor primary .)
    Semi            reduce using rule 84 (expression8 -> BinaryXnor primary .)
    Colon           reduce using rule 84 (expression8 -> BinaryXnor primary .)
    BracketR        reduce using rule 84 (expression8 -> BinaryXnor primary .)


state 83

    (79) expression8 -> Amp primary .

    Star            reduce using rule 79 (expression8 -> Amp primary .)
    Divide          reduce using rule 79 (expression8 -> Amp primary .)
    Mod             reduce using rule 79 (expression8 -> Amp primary .)
    Plus            reduce using rule 79 (expression8 -> Amp primary .)
    Minus           reduce using rule 79 (expression8 -> Amp primary .)
    GreaterThan     reduce using rule 79 (expression8 -> Amp primary .)
    LessThan        reduce using rule 79 (expression8 -> Amp primary .)
    Question        reduce using rule 79 (expression8 -> Amp primary .)
    Bar             reduce using rule 79 (expression8 -> Amp primary .)
    Carat           reduce using rule 79 (expression8 -> Amp primary .)
    Amp             reduce using rule 79 (expression8 -> Amp primary .)
    Tilde           reduce using rule 79 (expression8 -> Amp primary .)
    Equals          reduce using rule 79 (expression8 -> Amp primary .)
    Not             reduce using rule 79 (expression8 -> Amp primary .)
    Comma           reduce using rule 79 (expression8 -> Amp primary .)
    ParenR          reduce using rule 79 (expression8 -> Amp primary .)
    Semi            reduce using rule 79 (expression8 -> Amp primary .)
    Colon           reduce using rule 79 (expression8 -> Amp primary .)
    BracketR        reduce using rule 79 (expression8 -> Amp primary .)


state 84

    (30) BinaryNand -> Amp Tilde .

    ParenL          reduce using rule 30 (BinaryNand -> Amp Tilde .)
    Num             reduce using rule 30 (BinaryNand -> Amp Tilde .)
    KW_this         reduce using rule 30 (BinaryNand -> Amp Tilde .)
    Ident           reduce using rule 30 (BinaryNand -> Amp Tilde .)


state 85

    (64) expression5 -> expression5 LogicalShiftRight . expression6
    (68) expression6 -> . expression7
    (69) expression6 -> . expression6 Plus expression7
    (70) expression6 -> . expression6 Minus expression7
    (71) expression7 -> . expression8
    (72) expression7 -> . expression7 Star expression8
    (73) expression7 -> . expression7 Divide expression8
    (74) expression7 -> . expression7 Mod expression8
    (75) expression7 -> . expression7 Power expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    expression6                    shift and go to state 142
    expression7                    shift and go to state 34
    expression8                    shift and go to state 37
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    BinaryXnor                     shift and go to state 30
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 86

    (65) expression5 -> expression5 LogicalShiftLeft . expression6
    (68) expression6 -> . expression7
    (69) expression6 -> . expression6 Plus expression7
    (70) expression6 -> . expression6 Minus expression7
    (71) expression7 -> . expression8
    (72) expression7 -> . expression7 Star expression8
    (73) expression7 -> . expression7 Divide expression8
    (74) expression7 -> . expression7 Mod expression8
    (75) expression7 -> . expression7 Power expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    expression6                    shift and go to state 143
    expression7                    shift and go to state 34
    expression8                    shift and go to state 37
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    BinaryXnor                     shift and go to state 30
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 87

    (66) expression5 -> expression5 ArithmeticShiftRight . expression6
    (68) expression6 -> . expression7
    (69) expression6 -> . expression6 Plus expression7
    (70) expression6 -> . expression6 Minus expression7
    (71) expression7 -> . expression8
    (72) expression7 -> . expression7 Star expression8
    (73) expression7 -> . expression7 Divide expression8
    (74) expression7 -> . expression7 Mod expression8
    (75) expression7 -> . expression7 Power expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    expression6                    shift and go to state 144
    expression7                    shift and go to state 34
    expression8                    shift and go to state 37
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    BinaryXnor                     shift and go to state 30
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 88

    (67) expression5 -> expression5 ArithmeticShiftLeft . expression6
    (68) expression6 -> . expression7
    (69) expression6 -> . expression6 Plus expression7
    (70) expression6 -> . expression6 Minus expression7
    (71) expression7 -> . expression8
    (72) expression7 -> . expression7 Star expression8
    (73) expression7 -> . expression7 Divide expression8
    (74) expression7 -> . expression7 Mod expression8
    (75) expression7 -> . expression7 Power expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    expression6                    shift and go to state 145
    expression7                    shift and go to state 34
    expression8                    shift and go to state 37
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    BinaryXnor                     shift and go to state 30
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 89

    (36) LogicalShiftRight -> GreaterThan . GreaterThan
    (38) ArithmeticShiftRight -> GreaterThan . GreaterThan GreaterThan

    GreaterThan     shift and go to state 146


state 90

    (35) LogicalShiftLeft -> LessThan . LessThan
    (37) ArithmeticShiftLeft -> LessThan . LessThan LessThan

    LessThan        shift and go to state 147


state 91

    (69) expression6 -> expression6 Plus . expression7
    (71) expression7 -> . expression8
    (72) expression7 -> . expression7 Star expression8
    (73) expression7 -> . expression7 Divide expression8
    (74) expression7 -> . expression7 Mod expression8
    (75) expression7 -> . expression7 Power expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    expression7                    shift and go to state 148
    expression8                    shift and go to state 37
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    BinaryXnor                     shift and go to state 30
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 92

    (70) expression6 -> expression6 Minus . expression7
    (71) expression7 -> . expression8
    (72) expression7 -> . expression7 Star expression8
    (73) expression7 -> . expression7 Divide expression8
    (74) expression7 -> . expression7 Mod expression8
    (75) expression7 -> . expression7 Power expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    expression7                    shift and go to state 149
    expression8                    shift and go to state 37
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    BinaryXnor                     shift and go to state 30
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 93

    (72) expression7 -> expression7 Star . expression8
    (16) Power -> Star . Star
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Star            shift and go to state 150
    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    expression8                    shift and go to state 151
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    BinaryXnor                     shift and go to state 30
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 94

    (73) expression7 -> expression7 Divide . expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    expression8                    shift and go to state 152
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    BinaryXnor                     shift and go to state 30
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 95

    (74) expression7 -> expression7 Mod . expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    expression8                    shift and go to state 153
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    BinaryXnor                     shift and go to state 30
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 96

    (75) expression7 -> expression7 Power . expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    expression8                    shift and go to state 154
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    BinaryXnor                     shift and go to state 30
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 97

    (77) expression8 -> Plus primary .

    Star            reduce using rule 77 (expression8 -> Plus primary .)
    Divide          reduce using rule 77 (expression8 -> Plus primary .)
    Mod             reduce using rule 77 (expression8 -> Plus primary .)
    Plus            reduce using rule 77 (expression8 -> Plus primary .)
    Minus           reduce using rule 77 (expression8 -> Plus primary .)
    GreaterThan     reduce using rule 77 (expression8 -> Plus primary .)
    LessThan        reduce using rule 77 (expression8 -> Plus primary .)
    Question        reduce using rule 77 (expression8 -> Plus primary .)
    Bar             reduce using rule 77 (expression8 -> Plus primary .)
    Carat           reduce using rule 77 (expression8 -> Plus primary .)
    Amp             reduce using rule 77 (expression8 -> Plus primary .)
    Tilde           reduce using rule 77 (expression8 -> Plus primary .)
    Equals          reduce using rule 77 (expression8 -> Plus primary .)
    Not             reduce using rule 77 (expression8 -> Plus primary .)
    Comma           reduce using rule 77 (expression8 -> Plus primary .)
    ParenR          reduce using rule 77 (expression8 -> Plus primary .)
    Semi            reduce using rule 77 (expression8 -> Plus primary .)
    Colon           reduce using rule 77 (expression8 -> Plus primary .)
    BracketR        reduce using rule 77 (expression8 -> Plus primary .)


state 98

    (78) expression8 -> Minus primary .

    Star            reduce using rule 78 (expression8 -> Minus primary .)
    Divide          reduce using rule 78 (expression8 -> Minus primary .)
    Mod             reduce using rule 78 (expression8 -> Minus primary .)
    Plus            reduce using rule 78 (expression8 -> Minus primary .)
    Minus           reduce using rule 78 (expression8 -> Minus primary .)
    GreaterThan     reduce using rule 78 (expression8 -> Minus primary .)
    LessThan        reduce using rule 78 (expression8 -> Minus primary .)
    Question        reduce using rule 78 (expression8 -> Minus primary .)
    Bar             reduce using rule 78 (expression8 -> Minus primary .)
    Carat           reduce using rule 78 (expression8 -> Minus primary .)
    Amp             reduce using rule 78 (expression8 -> Minus primary .)
    Tilde           reduce using rule 78 (expression8 -> Minus primary .)
    Equals          reduce using rule 78 (expression8 -> Minus primary .)
    Not             reduce using rule 78 (expression8 -> Minus primary .)
    Comma           reduce using rule 78 (expression8 -> Minus primary .)
    ParenR          reduce using rule 78 (expression8 -> Minus primary .)
    Semi            reduce using rule 78 (expression8 -> Minus primary .)
    Colon           reduce using rule 78 (expression8 -> Minus primary .)
    BracketR        reduce using rule 78 (expression8 -> Minus primary .)


state 99

    (80) expression8 -> BinaryNand primary .

    Star            reduce using rule 80 (expression8 -> BinaryNand primary .)
    Divide          reduce using rule 80 (expression8 -> BinaryNand primary .)
    Mod             reduce using rule 80 (expression8 -> BinaryNand primary .)
    Plus            reduce using rule 80 (expression8 -> BinaryNand primary .)
    Minus           reduce using rule 80 (expression8 -> BinaryNand primary .)
    GreaterThan     reduce using rule 80 (expression8 -> BinaryNand primary .)
    LessThan        reduce using rule 80 (expression8 -> BinaryNand primary .)
    Question        reduce using rule 80 (expression8 -> BinaryNand primary .)
    Bar             reduce using rule 80 (expression8 -> BinaryNand primary .)
    Carat           reduce using rule 80 (expression8 -> BinaryNand primary .)
    Amp             reduce using rule 80 (expression8 -> BinaryNand primary .)
    Tilde           reduce using rule 80 (expression8 -> BinaryNand primary .)
    Equals          reduce using rule 80 (expression8 -> BinaryNand primary .)
    Not             reduce using rule 80 (expression8 -> BinaryNand primary .)
    Comma           reduce using rule 80 (expression8 -> BinaryNand primary .)
    ParenR          reduce using rule 80 (expression8 -> BinaryNand primary .)
    Semi            reduce using rule 80 (expression8 -> BinaryNand primary .)
    Colon           reduce using rule 80 (expression8 -> BinaryNand primary .)
    BracketR        reduce using rule 80 (expression8 -> BinaryNand primary .)


state 100

    (82) expression8 -> BinaryNor primary .

    Star            reduce using rule 82 (expression8 -> BinaryNor primary .)
    Divide          reduce using rule 82 (expression8 -> BinaryNor primary .)
    Mod             reduce using rule 82 (expression8 -> BinaryNor primary .)
    Plus            reduce using rule 82 (expression8 -> BinaryNor primary .)
    Minus           reduce using rule 82 (expression8 -> BinaryNor primary .)
    GreaterThan     reduce using rule 82 (expression8 -> BinaryNor primary .)
    LessThan        reduce using rule 82 (expression8 -> BinaryNor primary .)
    Question        reduce using rule 82 (expression8 -> BinaryNor primary .)
    Bar             reduce using rule 82 (expression8 -> BinaryNor primary .)
    Carat           reduce using rule 82 (expression8 -> BinaryNor primary .)
    Amp             reduce using rule 82 (expression8 -> BinaryNor primary .)
    Tilde           reduce using rule 82 (expression8 -> BinaryNor primary .)
    Equals          reduce using rule 82 (expression8 -> BinaryNor primary .)
    Not             reduce using rule 82 (expression8 -> BinaryNor primary .)
    Comma           reduce using rule 82 (expression8 -> BinaryNor primary .)
    ParenR          reduce using rule 82 (expression8 -> BinaryNor primary .)
    Semi            reduce using rule 82 (expression8 -> BinaryNor primary .)
    Colon           reduce using rule 82 (expression8 -> BinaryNor primary .)
    BracketR        reduce using rule 82 (expression8 -> BinaryNor primary .)


state 101

    (85) expression8 -> Not primary .

    Star            reduce using rule 85 (expression8 -> Not primary .)
    Divide          reduce using rule 85 (expression8 -> Not primary .)
    Mod             reduce using rule 85 (expression8 -> Not primary .)
    Plus            reduce using rule 85 (expression8 -> Not primary .)
    Minus           reduce using rule 85 (expression8 -> Not primary .)
    GreaterThan     reduce using rule 85 (expression8 -> Not primary .)
    LessThan        reduce using rule 85 (expression8 -> Not primary .)
    Question        reduce using rule 85 (expression8 -> Not primary .)
    Bar             reduce using rule 85 (expression8 -> Not primary .)
    Carat           reduce using rule 85 (expression8 -> Not primary .)
    Amp             reduce using rule 85 (expression8 -> Not primary .)
    Tilde           reduce using rule 85 (expression8 -> Not primary .)
    Equals          reduce using rule 85 (expression8 -> Not primary .)
    Not             reduce using rule 85 (expression8 -> Not primary .)
    Comma           reduce using rule 85 (expression8 -> Not primary .)
    ParenR          reduce using rule 85 (expression8 -> Not primary .)
    Semi            reduce using rule 85 (expression8 -> Not primary .)
    Colon           reduce using rule 85 (expression8 -> Not primary .)
    BracketR        reduce using rule 85 (expression8 -> Not primary .)


state 102

    (86) expression8 -> Tilde primary .

    Star            reduce using rule 86 (expression8 -> Tilde primary .)
    Divide          reduce using rule 86 (expression8 -> Tilde primary .)
    Mod             reduce using rule 86 (expression8 -> Tilde primary .)
    Plus            reduce using rule 86 (expression8 -> Tilde primary .)
    Minus           reduce using rule 86 (expression8 -> Tilde primary .)
    GreaterThan     reduce using rule 86 (expression8 -> Tilde primary .)
    LessThan        reduce using rule 86 (expression8 -> Tilde primary .)
    Question        reduce using rule 86 (expression8 -> Tilde primary .)
    Bar             reduce using rule 86 (expression8 -> Tilde primary .)
    Carat           reduce using rule 86 (expression8 -> Tilde primary .)
    Amp             reduce using rule 86 (expression8 -> Tilde primary .)
    Tilde           reduce using rule 86 (expression8 -> Tilde primary .)
    Equals          reduce using rule 86 (expression8 -> Tilde primary .)
    Not             reduce using rule 86 (expression8 -> Tilde primary .)
    Comma           reduce using rule 86 (expression8 -> Tilde primary .)
    ParenR          reduce using rule 86 (expression8 -> Tilde primary .)
    Semi            reduce using rule 86 (expression8 -> Tilde primary .)
    Colon           reduce using rule 86 (expression8 -> Tilde primary .)
    BracketR        reduce using rule 86 (expression8 -> Tilde primary .)


state 103

    (29) BinaryNand -> Tilde Amp .

    ParenL          reduce using rule 29 (BinaryNand -> Tilde Amp .)
    Num             reduce using rule 29 (BinaryNand -> Tilde Amp .)
    KW_this         reduce using rule 29 (BinaryNand -> Tilde Amp .)
    Ident           reduce using rule 29 (BinaryNand -> Tilde Amp .)


state 104

    (31) BinaryNor -> Tilde Bar .

    ParenL          reduce using rule 31 (BinaryNor -> Tilde Bar .)
    Num             reduce using rule 31 (BinaryNor -> Tilde Bar .)
    KW_this         reduce using rule 31 (BinaryNor -> Tilde Bar .)
    Ident           reduce using rule 31 (BinaryNor -> Tilde Bar .)


state 105

    (27) BinaryXnor -> Tilde Carat .

    ParenL          reduce using rule 27 (BinaryXnor -> Tilde Carat .)
    Num             reduce using rule 27 (BinaryXnor -> Tilde Carat .)
    KW_this         reduce using rule 27 (BinaryXnor -> Tilde Carat .)
    Ident           reduce using rule 27 (BinaryXnor -> Tilde Carat .)
    Plus            reduce using rule 27 (BinaryXnor -> Tilde Carat .)
    Minus           reduce using rule 27 (BinaryXnor -> Tilde Carat .)
    Amp             reduce using rule 27 (BinaryXnor -> Tilde Carat .)
    Bar             reduce using rule 27 (BinaryXnor -> Tilde Carat .)
    Carat           reduce using rule 27 (BinaryXnor -> Tilde Carat .)
    Not             reduce using rule 27 (BinaryXnor -> Tilde Carat .)
    Tilde           reduce using rule 27 (BinaryXnor -> Tilde Carat .)


state 106

    (94) primary1 -> primary1 Dot . identifier
    (91) identifier -> . Ident

    Ident           shift and go to state 10

    identifier                     shift and go to state 155

state 107

    (95) primary1 -> primary1 BracketL . expression BracketR
    (96) primary1 -> primary1 BracketL . part_select_range BracketR
    (39) expression -> . expression1
    (87) part_select_range -> . expression Colon expression
    (88) part_select_range -> . expression PlusColon expression
    (89) part_select_range -> . expression MinusColon expression
    (40) expression1 -> . expression2
    (41) expression1 -> . expression2 LogicalImplication expression1
    (42) expression1 -> . expression2 LogicalEquivalence expression1
    (43) expression2 -> . expression3
    (44) expression2 -> . expression3 Question expression Colon expression2
    (45) expression3 -> . expression4
    (46) expression3 -> . expression3 LogicalOr expression4
    (47) expression3 -> . expression3 LogicalAnd expression4
    (48) expression3 -> . expression3 Bar expression4
    (49) expression3 -> . expression3 Carat expression4
    (50) expression3 -> . expression3 BinaryXnor expression4
    (51) expression3 -> . expression3 Amp expression4
    (52) expression3 -> . expression3 Equality expression4
    (53) expression3 -> . expression3 Inequality expression4
    (54) expression3 -> . expression3 CaseEquality expression4
    (55) expression3 -> . expression3 CaseInequality expression4
    (56) expression3 -> . expression3 WildcardEquality expression4
    (57) expression3 -> . expression3 WildcardInequality expression4
    (58) expression4 -> . expression5
    (59) expression4 -> . expression4 LessThan expression5
    (60) expression4 -> . expression4 LessThanEqual expression5
    (61) expression4 -> . expression4 GreaterThan expression5
    (62) expression4 -> . expression4 GreaterThanEqual expression5
    (63) expression5 -> . expression6
    (64) expression5 -> . expression5 LogicalShiftRight expression6
    (65) expression5 -> . expression5 LogicalShiftLeft expression6
    (66) expression5 -> . expression5 ArithmeticShiftRight expression6
    (67) expression5 -> . expression5 ArithmeticShiftLeft expression6
    (68) expression6 -> . expression7
    (69) expression6 -> . expression6 Plus expression7
    (70) expression6 -> . expression6 Minus expression7
    (71) expression7 -> . expression8
    (72) expression7 -> . expression7 Star expression8
    (73) expression7 -> . expression7 Divide expression8
    (74) expression7 -> . expression7 Mod expression8
    (75) expression7 -> . expression7 Power expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    primary1                       shift and go to state 44
    expression                     shift and go to state 156
    part_select_range              shift and go to state 157
    expression1                    shift and go to state 24
    expression2                    shift and go to state 25
    expression3                    shift and go to state 26
    expression4                    shift and go to state 27
    BinaryXnor                     shift and go to state 30
    expression5                    shift and go to state 32
    expression6                    shift and go to state 33
    expression7                    shift and go to state 34
    expression8                    shift and go to state 37
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    number                         shift and go to state 43
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 108

    (129) caliper_declaration -> KW_struct identifier ParenL expr_list ParenR . Semi caliper_statement_list KW_endstruct

    Semi            shift and go to state 158


state 109

    (130) caliper_declaration -> KW_module identifier ParenL expr_list ParenR . Semi caliper_mod_stmt_list KW_endmodule

    Semi            shift and go to state 159


state 110

    (97) function_call -> identifier ParenL expr_list . ParenR

    ParenR          shift and go to state 160


state 111

    (101) primary -> ParenL expression ParenR .

    Star            reduce using rule 101 (primary -> ParenL expression ParenR .)
    Divide          reduce using rule 101 (primary -> ParenL expression ParenR .)
    Mod             reduce using rule 101 (primary -> ParenL expression ParenR .)
    Plus            reduce using rule 101 (primary -> ParenL expression ParenR .)
    Minus           reduce using rule 101 (primary -> ParenL expression ParenR .)
    GreaterThan     reduce using rule 101 (primary -> ParenL expression ParenR .)
    LessThan        reduce using rule 101 (primary -> ParenL expression ParenR .)
    Question        reduce using rule 101 (primary -> ParenL expression ParenR .)
    Bar             reduce using rule 101 (primary -> ParenL expression ParenR .)
    Carat           reduce using rule 101 (primary -> ParenL expression ParenR .)
    Amp             reduce using rule 101 (primary -> ParenL expression ParenR .)
    Tilde           reduce using rule 101 (primary -> ParenL expression ParenR .)
    Equals          reduce using rule 101 (primary -> ParenL expression ParenR .)
    Not             reduce using rule 101 (primary -> ParenL expression ParenR .)
    Comma           reduce using rule 101 (primary -> ParenL expression ParenR .)
    ParenR          reduce using rule 101 (primary -> ParenL expression ParenR .)
    Semi            reduce using rule 101 (primary -> ParenL expression ParenR .)
    Colon           reduce using rule 101 (primary -> ParenL expression ParenR .)
    BracketR        reduce using rule 101 (primary -> ParenL expression ParenR .)


state 112

    (128) caliper_declaration -> KW_spec identifier ParenL expr_list ParenR Semi . caliper_statement_list KW_endspec
    (10) caliper_statement_list -> . empty
    (11) caliper_statement_list -> . caliper_statement_list_p
    (1) empty -> .
    (8) caliper_statement_list_p -> . caliper_statement
    (9) caliper_statement_list_p -> . caliper_statement caliper_statement_list_p
    (112) caliper_statement -> . KW_def expr_list_p Semi
    (113) caliper_statement -> . KW_invariant identifier Colon expression Semi
    (114) caliper_statement -> . datatype primary1_list_p Semi
    (115) caliper_statement -> . KW_begin caliper_statement_list KW_end
    (116) caliper_statement -> . KW_if ParenL expression ParenR caliper_statement
    (117) caliper_statement -> . KW_foreach ParenL caliper_loop_list_p ParenR caliper_statement
    (107) datatype -> . basetype
    (108) datatype -> . datatype dimension
    (102) basetype -> . KW_logic
    (103) basetype -> . identifier ParenL expr_list ParenR
    (104) basetype -> . identifier
    (91) identifier -> . Ident

    KW_endspec      reduce using rule 1 (empty -> .)
    KW_def          shift and go to state 166
    KW_invariant    shift and go to state 167
    KW_begin        shift and go to state 169
    KW_if           shift and go to state 170
    KW_foreach      shift and go to state 171
    KW_logic        shift and go to state 173
    Ident           shift and go to state 10

    identifier                     shift and go to state 161
    caliper_statement_list         shift and go to state 162
    empty                          shift and go to state 163
    caliper_statement_list_p       shift and go to state 164
    caliper_statement              shift and go to state 165
    datatype                       shift and go to state 168
    basetype                       shift and go to state 172

state 113

    (3) expr_list_p -> expression Comma expr_list_p .

    ParenR          reduce using rule 3 (expr_list_p -> expression Comma expr_list_p .)
    Semi            reduce using rule 3 (expr_list_p -> expression Comma expr_list_p .)


state 114

    (41) expression1 -> expression2 LogicalImplication expression1 .

    Comma           reduce using rule 41 (expression1 -> expression2 LogicalImplication expression1 .)
    ParenR          reduce using rule 41 (expression1 -> expression2 LogicalImplication expression1 .)
    Semi            reduce using rule 41 (expression1 -> expression2 LogicalImplication expression1 .)
    Colon           reduce using rule 41 (expression1 -> expression2 LogicalImplication expression1 .)
    BracketR        reduce using rule 41 (expression1 -> expression2 LogicalImplication expression1 .)
    Plus            reduce using rule 41 (expression1 -> expression2 LogicalImplication expression1 .)
    Minus           reduce using rule 41 (expression1 -> expression2 LogicalImplication expression1 .)


state 115

    (42) expression1 -> expression2 LogicalEquivalence expression1 .

    Comma           reduce using rule 42 (expression1 -> expression2 LogicalEquivalence expression1 .)
    ParenR          reduce using rule 42 (expression1 -> expression2 LogicalEquivalence expression1 .)
    Semi            reduce using rule 42 (expression1 -> expression2 LogicalEquivalence expression1 .)
    Colon           reduce using rule 42 (expression1 -> expression2 LogicalEquivalence expression1 .)
    BracketR        reduce using rule 42 (expression1 -> expression2 LogicalEquivalence expression1 .)
    Plus            reduce using rule 42 (expression1 -> expression2 LogicalEquivalence expression1 .)
    Minus           reduce using rule 42 (expression1 -> expression2 LogicalEquivalence expression1 .)


state 116

    (33) LogicalImplication -> Minus GreaterThan .

    Plus            reduce using rule 33 (LogicalImplication -> Minus GreaterThan .)
    Minus           reduce using rule 33 (LogicalImplication -> Minus GreaterThan .)
    Amp             reduce using rule 33 (LogicalImplication -> Minus GreaterThan .)
    Bar             reduce using rule 33 (LogicalImplication -> Minus GreaterThan .)
    Carat           reduce using rule 33 (LogicalImplication -> Minus GreaterThan .)
    Not             reduce using rule 33 (LogicalImplication -> Minus GreaterThan .)
    Tilde           reduce using rule 33 (LogicalImplication -> Minus GreaterThan .)
    ParenL          reduce using rule 33 (LogicalImplication -> Minus GreaterThan .)
    Num             reduce using rule 33 (LogicalImplication -> Minus GreaterThan .)
    KW_this         reduce using rule 33 (LogicalImplication -> Minus GreaterThan .)
    Ident           reduce using rule 33 (LogicalImplication -> Minus GreaterThan .)


state 117

    (34) LogicalEquivalence -> LessThan Minus . GreaterThan

    GreaterThan     shift and go to state 174


state 118

    (44) expression2 -> expression3 Question expression . Colon expression2

    Colon           shift and go to state 175


state 119

    (46) expression3 -> expression3 LogicalOr expression4 .
    (59) expression4 -> expression4 . LessThan expression5
    (60) expression4 -> expression4 . LessThanEqual expression5
    (61) expression4 -> expression4 . GreaterThan expression5
    (62) expression4 -> expression4 . GreaterThanEqual expression5
    (23) LessThanEqual -> . LessThan Equals
    (24) GreaterThanEqual -> . GreaterThan Equals

  ! shift/reduce conflict for LessThan resolved as shift
    Question        reduce using rule 46 (expression3 -> expression3 LogicalOr expression4 .)
    Bar             reduce using rule 46 (expression3 -> expression3 LogicalOr expression4 .)
    Carat           reduce using rule 46 (expression3 -> expression3 LogicalOr expression4 .)
    Amp             reduce using rule 46 (expression3 -> expression3 LogicalOr expression4 .)
    Tilde           reduce using rule 46 (expression3 -> expression3 LogicalOr expression4 .)
    Equals          reduce using rule 46 (expression3 -> expression3 LogicalOr expression4 .)
    Not             reduce using rule 46 (expression3 -> expression3 LogicalOr expression4 .)
    Minus           reduce using rule 46 (expression3 -> expression3 LogicalOr expression4 .)
    Comma           reduce using rule 46 (expression3 -> expression3 LogicalOr expression4 .)
    ParenR          reduce using rule 46 (expression3 -> expression3 LogicalOr expression4 .)
    Semi            reduce using rule 46 (expression3 -> expression3 LogicalOr expression4 .)
    Colon           reduce using rule 46 (expression3 -> expression3 LogicalOr expression4 .)
    BracketR        reduce using rule 46 (expression3 -> expression3 LogicalOr expression4 .)
    Plus            reduce using rule 46 (expression3 -> expression3 LogicalOr expression4 .)
    LessThan        shift and go to state 74
    GreaterThan     shift and go to state 76

  ! LessThan        [ reduce using rule 46 (expression3 -> expression3 LogicalOr expression4 .) ]

    LessThanEqual                  shift and go to state 75
    GreaterThanEqual               shift and go to state 77

state 120

    (47) expression3 -> expression3 LogicalAnd expression4 .
    (59) expression4 -> expression4 . LessThan expression5
    (60) expression4 -> expression4 . LessThanEqual expression5
    (61) expression4 -> expression4 . GreaterThan expression5
    (62) expression4 -> expression4 . GreaterThanEqual expression5
    (23) LessThanEqual -> . LessThan Equals
    (24) GreaterThanEqual -> . GreaterThan Equals

  ! shift/reduce conflict for LessThan resolved as shift
    Question        reduce using rule 47 (expression3 -> expression3 LogicalAnd expression4 .)
    Bar             reduce using rule 47 (expression3 -> expression3 LogicalAnd expression4 .)
    Carat           reduce using rule 47 (expression3 -> expression3 LogicalAnd expression4 .)
    Amp             reduce using rule 47 (expression3 -> expression3 LogicalAnd expression4 .)
    Tilde           reduce using rule 47 (expression3 -> expression3 LogicalAnd expression4 .)
    Equals          reduce using rule 47 (expression3 -> expression3 LogicalAnd expression4 .)
    Not             reduce using rule 47 (expression3 -> expression3 LogicalAnd expression4 .)
    Minus           reduce using rule 47 (expression3 -> expression3 LogicalAnd expression4 .)
    Comma           reduce using rule 47 (expression3 -> expression3 LogicalAnd expression4 .)
    ParenR          reduce using rule 47 (expression3 -> expression3 LogicalAnd expression4 .)
    Semi            reduce using rule 47 (expression3 -> expression3 LogicalAnd expression4 .)
    Colon           reduce using rule 47 (expression3 -> expression3 LogicalAnd expression4 .)
    BracketR        reduce using rule 47 (expression3 -> expression3 LogicalAnd expression4 .)
    Plus            reduce using rule 47 (expression3 -> expression3 LogicalAnd expression4 .)
    LessThan        shift and go to state 74
    GreaterThan     shift and go to state 76

  ! LessThan        [ reduce using rule 47 (expression3 -> expression3 LogicalAnd expression4 .) ]

    LessThanEqual                  shift and go to state 75
    GreaterThanEqual               shift and go to state 77

state 121

    (26) LogicalOr -> Bar Bar .
    (81) expression8 -> Bar . primary
    (32) BinaryNor -> Bar . Tilde
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

  ! shift/reduce conflict for Tilde resolved as shift
  ! shift/reduce conflict for ParenL resolved as shift
  ! shift/reduce conflict for Num resolved as shift
  ! shift/reduce conflict for KW_this resolved as shift
  ! shift/reduce conflict for Ident resolved as shift
    Plus            reduce using rule 26 (LogicalOr -> Bar Bar .)
    Minus           reduce using rule 26 (LogicalOr -> Bar Bar .)
    Amp             reduce using rule 26 (LogicalOr -> Bar Bar .)
    Bar             reduce using rule 26 (LogicalOr -> Bar Bar .)
    Carat           reduce using rule 26 (LogicalOr -> Bar Bar .)
    Not             reduce using rule 26 (LogicalOr -> Bar Bar .)
    Tilde           shift and go to state 79
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

  ! Tilde           [ reduce using rule 26 (LogicalOr -> Bar Bar .) ]
  ! ParenL          [ reduce using rule 26 (LogicalOr -> Bar Bar .) ]
  ! Num             [ reduce using rule 26 (LogicalOr -> Bar Bar .) ]
  ! KW_this         [ reduce using rule 26 (LogicalOr -> Bar Bar .) ]
  ! Ident           [ reduce using rule 26 (LogicalOr -> Bar Bar .) ]

    primary                        shift and go to state 78
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 122

    (48) expression3 -> expression3 Bar expression4 .
    (59) expression4 -> expression4 . LessThan expression5
    (60) expression4 -> expression4 . LessThanEqual expression5
    (61) expression4 -> expression4 . GreaterThan expression5
    (62) expression4 -> expression4 . GreaterThanEqual expression5
    (23) LessThanEqual -> . LessThan Equals
    (24) GreaterThanEqual -> . GreaterThan Equals

  ! shift/reduce conflict for LessThan resolved as shift
    Question        reduce using rule 48 (expression3 -> expression3 Bar expression4 .)
    Bar             reduce using rule 48 (expression3 -> expression3 Bar expression4 .)
    Carat           reduce using rule 48 (expression3 -> expression3 Bar expression4 .)
    Amp             reduce using rule 48 (expression3 -> expression3 Bar expression4 .)
    Tilde           reduce using rule 48 (expression3 -> expression3 Bar expression4 .)
    Equals          reduce using rule 48 (expression3 -> expression3 Bar expression4 .)
    Not             reduce using rule 48 (expression3 -> expression3 Bar expression4 .)
    Minus           reduce using rule 48 (expression3 -> expression3 Bar expression4 .)
    Comma           reduce using rule 48 (expression3 -> expression3 Bar expression4 .)
    ParenR          reduce using rule 48 (expression3 -> expression3 Bar expression4 .)
    Semi            reduce using rule 48 (expression3 -> expression3 Bar expression4 .)
    Colon           reduce using rule 48 (expression3 -> expression3 Bar expression4 .)
    BracketR        reduce using rule 48 (expression3 -> expression3 Bar expression4 .)
    Plus            reduce using rule 48 (expression3 -> expression3 Bar expression4 .)
    LessThan        shift and go to state 74
    GreaterThan     shift and go to state 76

  ! LessThan        [ reduce using rule 48 (expression3 -> expression3 Bar expression4 .) ]

    LessThanEqual                  shift and go to state 75
    GreaterThanEqual               shift and go to state 77

state 123

    (49) expression3 -> expression3 Carat expression4 .
    (59) expression4 -> expression4 . LessThan expression5
    (60) expression4 -> expression4 . LessThanEqual expression5
    (61) expression4 -> expression4 . GreaterThan expression5
    (62) expression4 -> expression4 . GreaterThanEqual expression5
    (23) LessThanEqual -> . LessThan Equals
    (24) GreaterThanEqual -> . GreaterThan Equals

  ! shift/reduce conflict for LessThan resolved as shift
    Question        reduce using rule 49 (expression3 -> expression3 Carat expression4 .)
    Bar             reduce using rule 49 (expression3 -> expression3 Carat expression4 .)
    Carat           reduce using rule 49 (expression3 -> expression3 Carat expression4 .)
    Amp             reduce using rule 49 (expression3 -> expression3 Carat expression4 .)
    Tilde           reduce using rule 49 (expression3 -> expression3 Carat expression4 .)
    Equals          reduce using rule 49 (expression3 -> expression3 Carat expression4 .)
    Not             reduce using rule 49 (expression3 -> expression3 Carat expression4 .)
    Minus           reduce using rule 49 (expression3 -> expression3 Carat expression4 .)
    Comma           reduce using rule 49 (expression3 -> expression3 Carat expression4 .)
    ParenR          reduce using rule 49 (expression3 -> expression3 Carat expression4 .)
    Semi            reduce using rule 49 (expression3 -> expression3 Carat expression4 .)
    Colon           reduce using rule 49 (expression3 -> expression3 Carat expression4 .)
    BracketR        reduce using rule 49 (expression3 -> expression3 Carat expression4 .)
    Plus            reduce using rule 49 (expression3 -> expression3 Carat expression4 .)
    LessThan        shift and go to state 74
    GreaterThan     shift and go to state 76

  ! LessThan        [ reduce using rule 49 (expression3 -> expression3 Carat expression4 .) ]

    LessThanEqual                  shift and go to state 75
    GreaterThanEqual               shift and go to state 77

state 124

    (28) BinaryXnor -> Carat Tilde .
    (86) expression8 -> Tilde . primary
    (29) BinaryNand -> Tilde . Amp
    (31) BinaryNor -> Tilde . Bar
    (27) BinaryXnor -> Tilde . Carat
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

  ! shift/reduce conflict for Amp resolved as shift
  ! shift/reduce conflict for Bar resolved as shift
  ! shift/reduce conflict for Carat resolved as shift
  ! shift/reduce conflict for ParenL resolved as shift
  ! shift/reduce conflict for Num resolved as shift
  ! shift/reduce conflict for KW_this resolved as shift
  ! shift/reduce conflict for Ident resolved as shift
    Plus            reduce using rule 28 (BinaryXnor -> Carat Tilde .)
    Minus           reduce using rule 28 (BinaryXnor -> Carat Tilde .)
    Not             reduce using rule 28 (BinaryXnor -> Carat Tilde .)
    Tilde           reduce using rule 28 (BinaryXnor -> Carat Tilde .)
    Amp             shift and go to state 103
    Bar             shift and go to state 104
    Carat           shift and go to state 105
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

  ! Amp             [ reduce using rule 28 (BinaryXnor -> Carat Tilde .) ]
  ! Bar             [ reduce using rule 28 (BinaryXnor -> Carat Tilde .) ]
  ! Carat           [ reduce using rule 28 (BinaryXnor -> Carat Tilde .) ]
  ! ParenL          [ reduce using rule 28 (BinaryXnor -> Carat Tilde .) ]
  ! Num             [ reduce using rule 28 (BinaryXnor -> Carat Tilde .) ]
  ! KW_this         [ reduce using rule 28 (BinaryXnor -> Carat Tilde .) ]
  ! Ident           [ reduce using rule 28 (BinaryXnor -> Carat Tilde .) ]

    primary                        shift and go to state 102
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 125

    (50) expression3 -> expression3 BinaryXnor expression4 .
    (59) expression4 -> expression4 . LessThan expression5
    (60) expression4 -> expression4 . LessThanEqual expression5
    (61) expression4 -> expression4 . GreaterThan expression5
    (62) expression4 -> expression4 . GreaterThanEqual expression5
    (23) LessThanEqual -> . LessThan Equals
    (24) GreaterThanEqual -> . GreaterThan Equals

  ! shift/reduce conflict for LessThan resolved as shift
    Question        reduce using rule 50 (expression3 -> expression3 BinaryXnor expression4 .)
    Bar             reduce using rule 50 (expression3 -> expression3 BinaryXnor expression4 .)
    Carat           reduce using rule 50 (expression3 -> expression3 BinaryXnor expression4 .)
    Amp             reduce using rule 50 (expression3 -> expression3 BinaryXnor expression4 .)
    Tilde           reduce using rule 50 (expression3 -> expression3 BinaryXnor expression4 .)
    Equals          reduce using rule 50 (expression3 -> expression3 BinaryXnor expression4 .)
    Not             reduce using rule 50 (expression3 -> expression3 BinaryXnor expression4 .)
    Minus           reduce using rule 50 (expression3 -> expression3 BinaryXnor expression4 .)
    Comma           reduce using rule 50 (expression3 -> expression3 BinaryXnor expression4 .)
    ParenR          reduce using rule 50 (expression3 -> expression3 BinaryXnor expression4 .)
    Semi            reduce using rule 50 (expression3 -> expression3 BinaryXnor expression4 .)
    Colon           reduce using rule 50 (expression3 -> expression3 BinaryXnor expression4 .)
    BracketR        reduce using rule 50 (expression3 -> expression3 BinaryXnor expression4 .)
    Plus            reduce using rule 50 (expression3 -> expression3 BinaryXnor expression4 .)
    LessThan        shift and go to state 74
    GreaterThan     shift and go to state 76

  ! LessThan        [ reduce using rule 50 (expression3 -> expression3 BinaryXnor expression4 .) ]

    LessThanEqual                  shift and go to state 75
    GreaterThanEqual               shift and go to state 77

state 126

    (25) LogicalAnd -> Amp Amp .
    (79) expression8 -> Amp . primary
    (30) BinaryNand -> Amp . Tilde
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

  ! shift/reduce conflict for Tilde resolved as shift
  ! shift/reduce conflict for ParenL resolved as shift
  ! shift/reduce conflict for Num resolved as shift
  ! shift/reduce conflict for KW_this resolved as shift
  ! shift/reduce conflict for Ident resolved as shift
    Plus            reduce using rule 25 (LogicalAnd -> Amp Amp .)
    Minus           reduce using rule 25 (LogicalAnd -> Amp Amp .)
    Amp             reduce using rule 25 (LogicalAnd -> Amp Amp .)
    Bar             reduce using rule 25 (LogicalAnd -> Amp Amp .)
    Carat           reduce using rule 25 (LogicalAnd -> Amp Amp .)
    Not             reduce using rule 25 (LogicalAnd -> Amp Amp .)
    Tilde           shift and go to state 84
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

  ! Tilde           [ reduce using rule 25 (LogicalAnd -> Amp Amp .) ]
  ! ParenL          [ reduce using rule 25 (LogicalAnd -> Amp Amp .) ]
  ! Num             [ reduce using rule 25 (LogicalAnd -> Amp Amp .) ]
  ! KW_this         [ reduce using rule 25 (LogicalAnd -> Amp Amp .) ]
  ! Ident           [ reduce using rule 25 (LogicalAnd -> Amp Amp .) ]

    primary                        shift and go to state 83
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 127

    (51) expression3 -> expression3 Amp expression4 .
    (59) expression4 -> expression4 . LessThan expression5
    (60) expression4 -> expression4 . LessThanEqual expression5
    (61) expression4 -> expression4 . GreaterThan expression5
    (62) expression4 -> expression4 . GreaterThanEqual expression5
    (23) LessThanEqual -> . LessThan Equals
    (24) GreaterThanEqual -> . GreaterThan Equals

  ! shift/reduce conflict for LessThan resolved as shift
    Question        reduce using rule 51 (expression3 -> expression3 Amp expression4 .)
    Bar             reduce using rule 51 (expression3 -> expression3 Amp expression4 .)
    Carat           reduce using rule 51 (expression3 -> expression3 Amp expression4 .)
    Amp             reduce using rule 51 (expression3 -> expression3 Amp expression4 .)
    Tilde           reduce using rule 51 (expression3 -> expression3 Amp expression4 .)
    Equals          reduce using rule 51 (expression3 -> expression3 Amp expression4 .)
    Not             reduce using rule 51 (expression3 -> expression3 Amp expression4 .)
    Minus           reduce using rule 51 (expression3 -> expression3 Amp expression4 .)
    Comma           reduce using rule 51 (expression3 -> expression3 Amp expression4 .)
    ParenR          reduce using rule 51 (expression3 -> expression3 Amp expression4 .)
    Semi            reduce using rule 51 (expression3 -> expression3 Amp expression4 .)
    Colon           reduce using rule 51 (expression3 -> expression3 Amp expression4 .)
    BracketR        reduce using rule 51 (expression3 -> expression3 Amp expression4 .)
    Plus            reduce using rule 51 (expression3 -> expression3 Amp expression4 .)
    LessThan        shift and go to state 74
    GreaterThan     shift and go to state 76

  ! LessThan        [ reduce using rule 51 (expression3 -> expression3 Amp expression4 .) ]

    LessThanEqual                  shift and go to state 75
    GreaterThanEqual               shift and go to state 77

state 128

    (52) expression3 -> expression3 Equality expression4 .
    (59) expression4 -> expression4 . LessThan expression5
    (60) expression4 -> expression4 . LessThanEqual expression5
    (61) expression4 -> expression4 . GreaterThan expression5
    (62) expression4 -> expression4 . GreaterThanEqual expression5
    (23) LessThanEqual -> . LessThan Equals
    (24) GreaterThanEqual -> . GreaterThan Equals

  ! shift/reduce conflict for LessThan resolved as shift
    Question        reduce using rule 52 (expression3 -> expression3 Equality expression4 .)
    Bar             reduce using rule 52 (expression3 -> expression3 Equality expression4 .)
    Carat           reduce using rule 52 (expression3 -> expression3 Equality expression4 .)
    Amp             reduce using rule 52 (expression3 -> expression3 Equality expression4 .)
    Tilde           reduce using rule 52 (expression3 -> expression3 Equality expression4 .)
    Equals          reduce using rule 52 (expression3 -> expression3 Equality expression4 .)
    Not             reduce using rule 52 (expression3 -> expression3 Equality expression4 .)
    Minus           reduce using rule 52 (expression3 -> expression3 Equality expression4 .)
    Comma           reduce using rule 52 (expression3 -> expression3 Equality expression4 .)
    ParenR          reduce using rule 52 (expression3 -> expression3 Equality expression4 .)
    Semi            reduce using rule 52 (expression3 -> expression3 Equality expression4 .)
    Colon           reduce using rule 52 (expression3 -> expression3 Equality expression4 .)
    BracketR        reduce using rule 52 (expression3 -> expression3 Equality expression4 .)
    Plus            reduce using rule 52 (expression3 -> expression3 Equality expression4 .)
    LessThan        shift and go to state 74
    GreaterThan     shift and go to state 76

  ! LessThan        [ reduce using rule 52 (expression3 -> expression3 Equality expression4 .) ]

    LessThanEqual                  shift and go to state 75
    GreaterThanEqual               shift and go to state 77

state 129

    (53) expression3 -> expression3 Inequality expression4 .
    (59) expression4 -> expression4 . LessThan expression5
    (60) expression4 -> expression4 . LessThanEqual expression5
    (61) expression4 -> expression4 . GreaterThan expression5
    (62) expression4 -> expression4 . GreaterThanEqual expression5
    (23) LessThanEqual -> . LessThan Equals
    (24) GreaterThanEqual -> . GreaterThan Equals

  ! shift/reduce conflict for LessThan resolved as shift
    Question        reduce using rule 53 (expression3 -> expression3 Inequality expression4 .)
    Bar             reduce using rule 53 (expression3 -> expression3 Inequality expression4 .)
    Carat           reduce using rule 53 (expression3 -> expression3 Inequality expression4 .)
    Amp             reduce using rule 53 (expression3 -> expression3 Inequality expression4 .)
    Tilde           reduce using rule 53 (expression3 -> expression3 Inequality expression4 .)
    Equals          reduce using rule 53 (expression3 -> expression3 Inequality expression4 .)
    Not             reduce using rule 53 (expression3 -> expression3 Inequality expression4 .)
    Minus           reduce using rule 53 (expression3 -> expression3 Inequality expression4 .)
    Comma           reduce using rule 53 (expression3 -> expression3 Inequality expression4 .)
    ParenR          reduce using rule 53 (expression3 -> expression3 Inequality expression4 .)
    Semi            reduce using rule 53 (expression3 -> expression3 Inequality expression4 .)
    Colon           reduce using rule 53 (expression3 -> expression3 Inequality expression4 .)
    BracketR        reduce using rule 53 (expression3 -> expression3 Inequality expression4 .)
    Plus            reduce using rule 53 (expression3 -> expression3 Inequality expression4 .)
    LessThan        shift and go to state 74
    GreaterThan     shift and go to state 76

  ! LessThan        [ reduce using rule 53 (expression3 -> expression3 Inequality expression4 .) ]

    LessThanEqual                  shift and go to state 75
    GreaterThanEqual               shift and go to state 77

state 130

    (54) expression3 -> expression3 CaseEquality expression4 .
    (59) expression4 -> expression4 . LessThan expression5
    (60) expression4 -> expression4 . LessThanEqual expression5
    (61) expression4 -> expression4 . GreaterThan expression5
    (62) expression4 -> expression4 . GreaterThanEqual expression5
    (23) LessThanEqual -> . LessThan Equals
    (24) GreaterThanEqual -> . GreaterThan Equals

  ! shift/reduce conflict for LessThan resolved as shift
    Question        reduce using rule 54 (expression3 -> expression3 CaseEquality expression4 .)
    Bar             reduce using rule 54 (expression3 -> expression3 CaseEquality expression4 .)
    Carat           reduce using rule 54 (expression3 -> expression3 CaseEquality expression4 .)
    Amp             reduce using rule 54 (expression3 -> expression3 CaseEquality expression4 .)
    Tilde           reduce using rule 54 (expression3 -> expression3 CaseEquality expression4 .)
    Equals          reduce using rule 54 (expression3 -> expression3 CaseEquality expression4 .)
    Not             reduce using rule 54 (expression3 -> expression3 CaseEquality expression4 .)
    Minus           reduce using rule 54 (expression3 -> expression3 CaseEquality expression4 .)
    Comma           reduce using rule 54 (expression3 -> expression3 CaseEquality expression4 .)
    ParenR          reduce using rule 54 (expression3 -> expression3 CaseEquality expression4 .)
    Semi            reduce using rule 54 (expression3 -> expression3 CaseEquality expression4 .)
    Colon           reduce using rule 54 (expression3 -> expression3 CaseEquality expression4 .)
    BracketR        reduce using rule 54 (expression3 -> expression3 CaseEquality expression4 .)
    Plus            reduce using rule 54 (expression3 -> expression3 CaseEquality expression4 .)
    LessThan        shift and go to state 74
    GreaterThan     shift and go to state 76

  ! LessThan        [ reduce using rule 54 (expression3 -> expression3 CaseEquality expression4 .) ]

    LessThanEqual                  shift and go to state 75
    GreaterThanEqual               shift and go to state 77

state 131

    (55) expression3 -> expression3 CaseInequality expression4 .
    (59) expression4 -> expression4 . LessThan expression5
    (60) expression4 -> expression4 . LessThanEqual expression5
    (61) expression4 -> expression4 . GreaterThan expression5
    (62) expression4 -> expression4 . GreaterThanEqual expression5
    (23) LessThanEqual -> . LessThan Equals
    (24) GreaterThanEqual -> . GreaterThan Equals

  ! shift/reduce conflict for LessThan resolved as shift
    Question        reduce using rule 55 (expression3 -> expression3 CaseInequality expression4 .)
    Bar             reduce using rule 55 (expression3 -> expression3 CaseInequality expression4 .)
    Carat           reduce using rule 55 (expression3 -> expression3 CaseInequality expression4 .)
    Amp             reduce using rule 55 (expression3 -> expression3 CaseInequality expression4 .)
    Tilde           reduce using rule 55 (expression3 -> expression3 CaseInequality expression4 .)
    Equals          reduce using rule 55 (expression3 -> expression3 CaseInequality expression4 .)
    Not             reduce using rule 55 (expression3 -> expression3 CaseInequality expression4 .)
    Minus           reduce using rule 55 (expression3 -> expression3 CaseInequality expression4 .)
    Comma           reduce using rule 55 (expression3 -> expression3 CaseInequality expression4 .)
    ParenR          reduce using rule 55 (expression3 -> expression3 CaseInequality expression4 .)
    Semi            reduce using rule 55 (expression3 -> expression3 CaseInequality expression4 .)
    Colon           reduce using rule 55 (expression3 -> expression3 CaseInequality expression4 .)
    BracketR        reduce using rule 55 (expression3 -> expression3 CaseInequality expression4 .)
    Plus            reduce using rule 55 (expression3 -> expression3 CaseInequality expression4 .)
    LessThan        shift and go to state 74
    GreaterThan     shift and go to state 76

  ! LessThan        [ reduce using rule 55 (expression3 -> expression3 CaseInequality expression4 .) ]

    LessThanEqual                  shift and go to state 75
    GreaterThanEqual               shift and go to state 77

state 132

    (56) expression3 -> expression3 WildcardEquality expression4 .
    (59) expression4 -> expression4 . LessThan expression5
    (60) expression4 -> expression4 . LessThanEqual expression5
    (61) expression4 -> expression4 . GreaterThan expression5
    (62) expression4 -> expression4 . GreaterThanEqual expression5
    (23) LessThanEqual -> . LessThan Equals
    (24) GreaterThanEqual -> . GreaterThan Equals

  ! shift/reduce conflict for LessThan resolved as shift
    Question        reduce using rule 56 (expression3 -> expression3 WildcardEquality expression4 .)
    Bar             reduce using rule 56 (expression3 -> expression3 WildcardEquality expression4 .)
    Carat           reduce using rule 56 (expression3 -> expression3 WildcardEquality expression4 .)
    Amp             reduce using rule 56 (expression3 -> expression3 WildcardEquality expression4 .)
    Tilde           reduce using rule 56 (expression3 -> expression3 WildcardEquality expression4 .)
    Equals          reduce using rule 56 (expression3 -> expression3 WildcardEquality expression4 .)
    Not             reduce using rule 56 (expression3 -> expression3 WildcardEquality expression4 .)
    Minus           reduce using rule 56 (expression3 -> expression3 WildcardEquality expression4 .)
    Comma           reduce using rule 56 (expression3 -> expression3 WildcardEquality expression4 .)
    ParenR          reduce using rule 56 (expression3 -> expression3 WildcardEquality expression4 .)
    Semi            reduce using rule 56 (expression3 -> expression3 WildcardEquality expression4 .)
    Colon           reduce using rule 56 (expression3 -> expression3 WildcardEquality expression4 .)
    BracketR        reduce using rule 56 (expression3 -> expression3 WildcardEquality expression4 .)
    Plus            reduce using rule 56 (expression3 -> expression3 WildcardEquality expression4 .)
    LessThan        shift and go to state 74
    GreaterThan     shift and go to state 76

  ! LessThan        [ reduce using rule 56 (expression3 -> expression3 WildcardEquality expression4 .) ]

    LessThanEqual                  shift and go to state 75
    GreaterThanEqual               shift and go to state 77

state 133

    (57) expression3 -> expression3 WildcardInequality expression4 .
    (59) expression4 -> expression4 . LessThan expression5
    (60) expression4 -> expression4 . LessThanEqual expression5
    (61) expression4 -> expression4 . GreaterThan expression5
    (62) expression4 -> expression4 . GreaterThanEqual expression5
    (23) LessThanEqual -> . LessThan Equals
    (24) GreaterThanEqual -> . GreaterThan Equals

  ! shift/reduce conflict for LessThan resolved as shift
    Question        reduce using rule 57 (expression3 -> expression3 WildcardInequality expression4 .)
    Bar             reduce using rule 57 (expression3 -> expression3 WildcardInequality expression4 .)
    Carat           reduce using rule 57 (expression3 -> expression3 WildcardInequality expression4 .)
    Amp             reduce using rule 57 (expression3 -> expression3 WildcardInequality expression4 .)
    Tilde           reduce using rule 57 (expression3 -> expression3 WildcardInequality expression4 .)
    Equals          reduce using rule 57 (expression3 -> expression3 WildcardInequality expression4 .)
    Not             reduce using rule 57 (expression3 -> expression3 WildcardInequality expression4 .)
    Minus           reduce using rule 57 (expression3 -> expression3 WildcardInequality expression4 .)
    Comma           reduce using rule 57 (expression3 -> expression3 WildcardInequality expression4 .)
    ParenR          reduce using rule 57 (expression3 -> expression3 WildcardInequality expression4 .)
    Semi            reduce using rule 57 (expression3 -> expression3 WildcardInequality expression4 .)
    Colon           reduce using rule 57 (expression3 -> expression3 WildcardInequality expression4 .)
    BracketR        reduce using rule 57 (expression3 -> expression3 WildcardInequality expression4 .)
    Plus            reduce using rule 57 (expression3 -> expression3 WildcardInequality expression4 .)
    LessThan        shift and go to state 74
    GreaterThan     shift and go to state 76

  ! LessThan        [ reduce using rule 57 (expression3 -> expression3 WildcardInequality expression4 .) ]

    LessThanEqual                  shift and go to state 75
    GreaterThanEqual               shift and go to state 77

state 134

    (17) Equality -> Equals Equals .
    (19) CaseEquality -> Equals Equals . Equals
    (21) WildcardEquality -> Equals Equals . Question

    Plus            reduce using rule 17 (Equality -> Equals Equals .)
    Minus           reduce using rule 17 (Equality -> Equals Equals .)
    Amp             reduce using rule 17 (Equality -> Equals Equals .)
    Bar             reduce using rule 17 (Equality -> Equals Equals .)
    Carat           reduce using rule 17 (Equality -> Equals Equals .)
    Not             reduce using rule 17 (Equality -> Equals Equals .)
    Tilde           reduce using rule 17 (Equality -> Equals Equals .)
    ParenL          reduce using rule 17 (Equality -> Equals Equals .)
    Num             reduce using rule 17 (Equality -> Equals Equals .)
    KW_this         reduce using rule 17 (Equality -> Equals Equals .)
    Ident           reduce using rule 17 (Equality -> Equals Equals .)
    Equals          shift and go to state 176
    Question        shift and go to state 177


state 135

    (18) Inequality -> Not Equals .
    (20) CaseInequality -> Not Equals . Equals
    (22) WildcardInequality -> Not Equals . Question

    Plus            reduce using rule 18 (Inequality -> Not Equals .)
    Minus           reduce using rule 18 (Inequality -> Not Equals .)
    Amp             reduce using rule 18 (Inequality -> Not Equals .)
    Bar             reduce using rule 18 (Inequality -> Not Equals .)
    Carat           reduce using rule 18 (Inequality -> Not Equals .)
    Not             reduce using rule 18 (Inequality -> Not Equals .)
    Tilde           reduce using rule 18 (Inequality -> Not Equals .)
    ParenL          reduce using rule 18 (Inequality -> Not Equals .)
    Num             reduce using rule 18 (Inequality -> Not Equals .)
    KW_this         reduce using rule 18 (Inequality -> Not Equals .)
    Ident           reduce using rule 18 (Inequality -> Not Equals .)
    Equals          shift and go to state 178
    Question        shift and go to state 179


state 136

    (59) expression4 -> expression4 LessThan expression5 .
    (64) expression5 -> expression5 . LogicalShiftRight expression6
    (65) expression5 -> expression5 . LogicalShiftLeft expression6
    (66) expression5 -> expression5 . ArithmeticShiftRight expression6
    (67) expression5 -> expression5 . ArithmeticShiftLeft expression6
    (36) LogicalShiftRight -> . GreaterThan GreaterThan
    (35) LogicalShiftLeft -> . LessThan LessThan
    (38) ArithmeticShiftRight -> . GreaterThan GreaterThan GreaterThan
    (37) ArithmeticShiftLeft -> . LessThan LessThan LessThan

  ! shift/reduce conflict for GreaterThan resolved as shift
  ! shift/reduce conflict for LessThan resolved as shift
    Question        reduce using rule 59 (expression4 -> expression4 LessThan expression5 .)
    Bar             reduce using rule 59 (expression4 -> expression4 LessThan expression5 .)
    Carat           reduce using rule 59 (expression4 -> expression4 LessThan expression5 .)
    Amp             reduce using rule 59 (expression4 -> expression4 LessThan expression5 .)
    Tilde           reduce using rule 59 (expression4 -> expression4 LessThan expression5 .)
    Equals          reduce using rule 59 (expression4 -> expression4 LessThan expression5 .)
    Not             reduce using rule 59 (expression4 -> expression4 LessThan expression5 .)
    Minus           reduce using rule 59 (expression4 -> expression4 LessThan expression5 .)
    Comma           reduce using rule 59 (expression4 -> expression4 LessThan expression5 .)
    ParenR          reduce using rule 59 (expression4 -> expression4 LessThan expression5 .)
    Semi            reduce using rule 59 (expression4 -> expression4 LessThan expression5 .)
    Colon           reduce using rule 59 (expression4 -> expression4 LessThan expression5 .)
    BracketR        reduce using rule 59 (expression4 -> expression4 LessThan expression5 .)
    Plus            reduce using rule 59 (expression4 -> expression4 LessThan expression5 .)
    GreaterThan     shift and go to state 89
    LessThan        shift and go to state 90

  ! LessThan        [ reduce using rule 59 (expression4 -> expression4 LessThan expression5 .) ]
  ! GreaterThan     [ reduce using rule 59 (expression4 -> expression4 LessThan expression5 .) ]

    LogicalShiftRight              shift and go to state 85
    LogicalShiftLeft               shift and go to state 86
    ArithmeticShiftRight           shift and go to state 87
    ArithmeticShiftLeft            shift and go to state 88

state 137

    (23) LessThanEqual -> LessThan Equals .

    Plus            reduce using rule 23 (LessThanEqual -> LessThan Equals .)
    Minus           reduce using rule 23 (LessThanEqual -> LessThan Equals .)
    Amp             reduce using rule 23 (LessThanEqual -> LessThan Equals .)
    Bar             reduce using rule 23 (LessThanEqual -> LessThan Equals .)
    Carat           reduce using rule 23 (LessThanEqual -> LessThan Equals .)
    Not             reduce using rule 23 (LessThanEqual -> LessThan Equals .)
    Tilde           reduce using rule 23 (LessThanEqual -> LessThan Equals .)
    ParenL          reduce using rule 23 (LessThanEqual -> LessThan Equals .)
    Num             reduce using rule 23 (LessThanEqual -> LessThan Equals .)
    KW_this         reduce using rule 23 (LessThanEqual -> LessThan Equals .)
    Ident           reduce using rule 23 (LessThanEqual -> LessThan Equals .)


state 138

    (60) expression4 -> expression4 LessThanEqual expression5 .
    (64) expression5 -> expression5 . LogicalShiftRight expression6
    (65) expression5 -> expression5 . LogicalShiftLeft expression6
    (66) expression5 -> expression5 . ArithmeticShiftRight expression6
    (67) expression5 -> expression5 . ArithmeticShiftLeft expression6
    (36) LogicalShiftRight -> . GreaterThan GreaterThan
    (35) LogicalShiftLeft -> . LessThan LessThan
    (38) ArithmeticShiftRight -> . GreaterThan GreaterThan GreaterThan
    (37) ArithmeticShiftLeft -> . LessThan LessThan LessThan

  ! shift/reduce conflict for GreaterThan resolved as shift
  ! shift/reduce conflict for LessThan resolved as shift
    Question        reduce using rule 60 (expression4 -> expression4 LessThanEqual expression5 .)
    Bar             reduce using rule 60 (expression4 -> expression4 LessThanEqual expression5 .)
    Carat           reduce using rule 60 (expression4 -> expression4 LessThanEqual expression5 .)
    Amp             reduce using rule 60 (expression4 -> expression4 LessThanEqual expression5 .)
    Tilde           reduce using rule 60 (expression4 -> expression4 LessThanEqual expression5 .)
    Equals          reduce using rule 60 (expression4 -> expression4 LessThanEqual expression5 .)
    Not             reduce using rule 60 (expression4 -> expression4 LessThanEqual expression5 .)
    Minus           reduce using rule 60 (expression4 -> expression4 LessThanEqual expression5 .)
    Comma           reduce using rule 60 (expression4 -> expression4 LessThanEqual expression5 .)
    ParenR          reduce using rule 60 (expression4 -> expression4 LessThanEqual expression5 .)
    Semi            reduce using rule 60 (expression4 -> expression4 LessThanEqual expression5 .)
    Colon           reduce using rule 60 (expression4 -> expression4 LessThanEqual expression5 .)
    BracketR        reduce using rule 60 (expression4 -> expression4 LessThanEqual expression5 .)
    Plus            reduce using rule 60 (expression4 -> expression4 LessThanEqual expression5 .)
    GreaterThan     shift and go to state 89
    LessThan        shift and go to state 90

  ! LessThan        [ reduce using rule 60 (expression4 -> expression4 LessThanEqual expression5 .) ]
  ! GreaterThan     [ reduce using rule 60 (expression4 -> expression4 LessThanEqual expression5 .) ]

    LogicalShiftRight              shift and go to state 85
    LogicalShiftLeft               shift and go to state 86
    ArithmeticShiftRight           shift and go to state 87
    ArithmeticShiftLeft            shift and go to state 88

state 139

    (61) expression4 -> expression4 GreaterThan expression5 .
    (64) expression5 -> expression5 . LogicalShiftRight expression6
    (65) expression5 -> expression5 . LogicalShiftLeft expression6
    (66) expression5 -> expression5 . ArithmeticShiftRight expression6
    (67) expression5 -> expression5 . ArithmeticShiftLeft expression6
    (36) LogicalShiftRight -> . GreaterThan GreaterThan
    (35) LogicalShiftLeft -> . LessThan LessThan
    (38) ArithmeticShiftRight -> . GreaterThan GreaterThan GreaterThan
    (37) ArithmeticShiftLeft -> . LessThan LessThan LessThan

  ! shift/reduce conflict for GreaterThan resolved as shift
  ! shift/reduce conflict for LessThan resolved as shift
    Question        reduce using rule 61 (expression4 -> expression4 GreaterThan expression5 .)
    Bar             reduce using rule 61 (expression4 -> expression4 GreaterThan expression5 .)
    Carat           reduce using rule 61 (expression4 -> expression4 GreaterThan expression5 .)
    Amp             reduce using rule 61 (expression4 -> expression4 GreaterThan expression5 .)
    Tilde           reduce using rule 61 (expression4 -> expression4 GreaterThan expression5 .)
    Equals          reduce using rule 61 (expression4 -> expression4 GreaterThan expression5 .)
    Not             reduce using rule 61 (expression4 -> expression4 GreaterThan expression5 .)
    Minus           reduce using rule 61 (expression4 -> expression4 GreaterThan expression5 .)
    Comma           reduce using rule 61 (expression4 -> expression4 GreaterThan expression5 .)
    ParenR          reduce using rule 61 (expression4 -> expression4 GreaterThan expression5 .)
    Semi            reduce using rule 61 (expression4 -> expression4 GreaterThan expression5 .)
    Colon           reduce using rule 61 (expression4 -> expression4 GreaterThan expression5 .)
    BracketR        reduce using rule 61 (expression4 -> expression4 GreaterThan expression5 .)
    Plus            reduce using rule 61 (expression4 -> expression4 GreaterThan expression5 .)
    GreaterThan     shift and go to state 89
    LessThan        shift and go to state 90

  ! LessThan        [ reduce using rule 61 (expression4 -> expression4 GreaterThan expression5 .) ]
  ! GreaterThan     [ reduce using rule 61 (expression4 -> expression4 GreaterThan expression5 .) ]

    LogicalShiftRight              shift and go to state 85
    LogicalShiftLeft               shift and go to state 86
    ArithmeticShiftRight           shift and go to state 87
    ArithmeticShiftLeft            shift and go to state 88

state 140

    (24) GreaterThanEqual -> GreaterThan Equals .

    Plus            reduce using rule 24 (GreaterThanEqual -> GreaterThan Equals .)
    Minus           reduce using rule 24 (GreaterThanEqual -> GreaterThan Equals .)
    Amp             reduce using rule 24 (GreaterThanEqual -> GreaterThan Equals .)
    Bar             reduce using rule 24 (GreaterThanEqual -> GreaterThan Equals .)
    Carat           reduce using rule 24 (GreaterThanEqual -> GreaterThan Equals .)
    Not             reduce using rule 24 (GreaterThanEqual -> GreaterThan Equals .)
    Tilde           reduce using rule 24 (GreaterThanEqual -> GreaterThan Equals .)
    ParenL          reduce using rule 24 (GreaterThanEqual -> GreaterThan Equals .)
    Num             reduce using rule 24 (GreaterThanEqual -> GreaterThan Equals .)
    KW_this         reduce using rule 24 (GreaterThanEqual -> GreaterThan Equals .)
    Ident           reduce using rule 24 (GreaterThanEqual -> GreaterThan Equals .)


state 141

    (62) expression4 -> expression4 GreaterThanEqual expression5 .
    (64) expression5 -> expression5 . LogicalShiftRight expression6
    (65) expression5 -> expression5 . LogicalShiftLeft expression6
    (66) expression5 -> expression5 . ArithmeticShiftRight expression6
    (67) expression5 -> expression5 . ArithmeticShiftLeft expression6
    (36) LogicalShiftRight -> . GreaterThan GreaterThan
    (35) LogicalShiftLeft -> . LessThan LessThan
    (38) ArithmeticShiftRight -> . GreaterThan GreaterThan GreaterThan
    (37) ArithmeticShiftLeft -> . LessThan LessThan LessThan

  ! shift/reduce conflict for GreaterThan resolved as shift
  ! shift/reduce conflict for LessThan resolved as shift
    Question        reduce using rule 62 (expression4 -> expression4 GreaterThanEqual expression5 .)
    Bar             reduce using rule 62 (expression4 -> expression4 GreaterThanEqual expression5 .)
    Carat           reduce using rule 62 (expression4 -> expression4 GreaterThanEqual expression5 .)
    Amp             reduce using rule 62 (expression4 -> expression4 GreaterThanEqual expression5 .)
    Tilde           reduce using rule 62 (expression4 -> expression4 GreaterThanEqual expression5 .)
    Equals          reduce using rule 62 (expression4 -> expression4 GreaterThanEqual expression5 .)
    Not             reduce using rule 62 (expression4 -> expression4 GreaterThanEqual expression5 .)
    Minus           reduce using rule 62 (expression4 -> expression4 GreaterThanEqual expression5 .)
    Comma           reduce using rule 62 (expression4 -> expression4 GreaterThanEqual expression5 .)
    ParenR          reduce using rule 62 (expression4 -> expression4 GreaterThanEqual expression5 .)
    Semi            reduce using rule 62 (expression4 -> expression4 GreaterThanEqual expression5 .)
    Colon           reduce using rule 62 (expression4 -> expression4 GreaterThanEqual expression5 .)
    BracketR        reduce using rule 62 (expression4 -> expression4 GreaterThanEqual expression5 .)
    Plus            reduce using rule 62 (expression4 -> expression4 GreaterThanEqual expression5 .)
    GreaterThan     shift and go to state 89
    LessThan        shift and go to state 90

  ! LessThan        [ reduce using rule 62 (expression4 -> expression4 GreaterThanEqual expression5 .) ]
  ! GreaterThan     [ reduce using rule 62 (expression4 -> expression4 GreaterThanEqual expression5 .) ]

    LogicalShiftRight              shift and go to state 85
    LogicalShiftLeft               shift and go to state 86
    ArithmeticShiftRight           shift and go to state 87
    ArithmeticShiftLeft            shift and go to state 88

state 142

    (64) expression5 -> expression5 LogicalShiftRight expression6 .
    (69) expression6 -> expression6 . Plus expression7
    (70) expression6 -> expression6 . Minus expression7

  ! shift/reduce conflict for Plus resolved as shift
  ! shift/reduce conflict for Minus resolved as shift
    GreaterThan     reduce using rule 64 (expression5 -> expression5 LogicalShiftRight expression6 .)
    LessThan        reduce using rule 64 (expression5 -> expression5 LogicalShiftRight expression6 .)
    Question        reduce using rule 64 (expression5 -> expression5 LogicalShiftRight expression6 .)
    Bar             reduce using rule 64 (expression5 -> expression5 LogicalShiftRight expression6 .)
    Carat           reduce using rule 64 (expression5 -> expression5 LogicalShiftRight expression6 .)
    Amp             reduce using rule 64 (expression5 -> expression5 LogicalShiftRight expression6 .)
    Tilde           reduce using rule 64 (expression5 -> expression5 LogicalShiftRight expression6 .)
    Equals          reduce using rule 64 (expression5 -> expression5 LogicalShiftRight expression6 .)
    Not             reduce using rule 64 (expression5 -> expression5 LogicalShiftRight expression6 .)
    Comma           reduce using rule 64 (expression5 -> expression5 LogicalShiftRight expression6 .)
    ParenR          reduce using rule 64 (expression5 -> expression5 LogicalShiftRight expression6 .)
    Semi            reduce using rule 64 (expression5 -> expression5 LogicalShiftRight expression6 .)
    Colon           reduce using rule 64 (expression5 -> expression5 LogicalShiftRight expression6 .)
    BracketR        reduce using rule 64 (expression5 -> expression5 LogicalShiftRight expression6 .)
    Plus            shift and go to state 91
    Minus           shift and go to state 92

  ! Minus           [ reduce using rule 64 (expression5 -> expression5 LogicalShiftRight expression6 .) ]
  ! Plus            [ reduce using rule 64 (expression5 -> expression5 LogicalShiftRight expression6 .) ]


state 143

    (65) expression5 -> expression5 LogicalShiftLeft expression6 .
    (69) expression6 -> expression6 . Plus expression7
    (70) expression6 -> expression6 . Minus expression7

  ! shift/reduce conflict for Plus resolved as shift
  ! shift/reduce conflict for Minus resolved as shift
    GreaterThan     reduce using rule 65 (expression5 -> expression5 LogicalShiftLeft expression6 .)
    LessThan        reduce using rule 65 (expression5 -> expression5 LogicalShiftLeft expression6 .)
    Question        reduce using rule 65 (expression5 -> expression5 LogicalShiftLeft expression6 .)
    Bar             reduce using rule 65 (expression5 -> expression5 LogicalShiftLeft expression6 .)
    Carat           reduce using rule 65 (expression5 -> expression5 LogicalShiftLeft expression6 .)
    Amp             reduce using rule 65 (expression5 -> expression5 LogicalShiftLeft expression6 .)
    Tilde           reduce using rule 65 (expression5 -> expression5 LogicalShiftLeft expression6 .)
    Equals          reduce using rule 65 (expression5 -> expression5 LogicalShiftLeft expression6 .)
    Not             reduce using rule 65 (expression5 -> expression5 LogicalShiftLeft expression6 .)
    Comma           reduce using rule 65 (expression5 -> expression5 LogicalShiftLeft expression6 .)
    ParenR          reduce using rule 65 (expression5 -> expression5 LogicalShiftLeft expression6 .)
    Semi            reduce using rule 65 (expression5 -> expression5 LogicalShiftLeft expression6 .)
    Colon           reduce using rule 65 (expression5 -> expression5 LogicalShiftLeft expression6 .)
    BracketR        reduce using rule 65 (expression5 -> expression5 LogicalShiftLeft expression6 .)
    Plus            shift and go to state 91
    Minus           shift and go to state 92

  ! Minus           [ reduce using rule 65 (expression5 -> expression5 LogicalShiftLeft expression6 .) ]
  ! Plus            [ reduce using rule 65 (expression5 -> expression5 LogicalShiftLeft expression6 .) ]


state 144

    (66) expression5 -> expression5 ArithmeticShiftRight expression6 .
    (69) expression6 -> expression6 . Plus expression7
    (70) expression6 -> expression6 . Minus expression7

  ! shift/reduce conflict for Plus resolved as shift
  ! shift/reduce conflict for Minus resolved as shift
    GreaterThan     reduce using rule 66 (expression5 -> expression5 ArithmeticShiftRight expression6 .)
    LessThan        reduce using rule 66 (expression5 -> expression5 ArithmeticShiftRight expression6 .)
    Question        reduce using rule 66 (expression5 -> expression5 ArithmeticShiftRight expression6 .)
    Bar             reduce using rule 66 (expression5 -> expression5 ArithmeticShiftRight expression6 .)
    Carat           reduce using rule 66 (expression5 -> expression5 ArithmeticShiftRight expression6 .)
    Amp             reduce using rule 66 (expression5 -> expression5 ArithmeticShiftRight expression6 .)
    Tilde           reduce using rule 66 (expression5 -> expression5 ArithmeticShiftRight expression6 .)
    Equals          reduce using rule 66 (expression5 -> expression5 ArithmeticShiftRight expression6 .)
    Not             reduce using rule 66 (expression5 -> expression5 ArithmeticShiftRight expression6 .)
    Comma           reduce using rule 66 (expression5 -> expression5 ArithmeticShiftRight expression6 .)
    ParenR          reduce using rule 66 (expression5 -> expression5 ArithmeticShiftRight expression6 .)
    Semi            reduce using rule 66 (expression5 -> expression5 ArithmeticShiftRight expression6 .)
    Colon           reduce using rule 66 (expression5 -> expression5 ArithmeticShiftRight expression6 .)
    BracketR        reduce using rule 66 (expression5 -> expression5 ArithmeticShiftRight expression6 .)
    Plus            shift and go to state 91
    Minus           shift and go to state 92

  ! Minus           [ reduce using rule 66 (expression5 -> expression5 ArithmeticShiftRight expression6 .) ]
  ! Plus            [ reduce using rule 66 (expression5 -> expression5 ArithmeticShiftRight expression6 .) ]


state 145

    (67) expression5 -> expression5 ArithmeticShiftLeft expression6 .
    (69) expression6 -> expression6 . Plus expression7
    (70) expression6 -> expression6 . Minus expression7

  ! shift/reduce conflict for Plus resolved as shift
  ! shift/reduce conflict for Minus resolved as shift
    GreaterThan     reduce using rule 67 (expression5 -> expression5 ArithmeticShiftLeft expression6 .)
    LessThan        reduce using rule 67 (expression5 -> expression5 ArithmeticShiftLeft expression6 .)
    Question        reduce using rule 67 (expression5 -> expression5 ArithmeticShiftLeft expression6 .)
    Bar             reduce using rule 67 (expression5 -> expression5 ArithmeticShiftLeft expression6 .)
    Carat           reduce using rule 67 (expression5 -> expression5 ArithmeticShiftLeft expression6 .)
    Amp             reduce using rule 67 (expression5 -> expression5 ArithmeticShiftLeft expression6 .)
    Tilde           reduce using rule 67 (expression5 -> expression5 ArithmeticShiftLeft expression6 .)
    Equals          reduce using rule 67 (expression5 -> expression5 ArithmeticShiftLeft expression6 .)
    Not             reduce using rule 67 (expression5 -> expression5 ArithmeticShiftLeft expression6 .)
    Comma           reduce using rule 67 (expression5 -> expression5 ArithmeticShiftLeft expression6 .)
    ParenR          reduce using rule 67 (expression5 -> expression5 ArithmeticShiftLeft expression6 .)
    Semi            reduce using rule 67 (expression5 -> expression5 ArithmeticShiftLeft expression6 .)
    Colon           reduce using rule 67 (expression5 -> expression5 ArithmeticShiftLeft expression6 .)
    BracketR        reduce using rule 67 (expression5 -> expression5 ArithmeticShiftLeft expression6 .)
    Plus            shift and go to state 91
    Minus           shift and go to state 92

  ! Minus           [ reduce using rule 67 (expression5 -> expression5 ArithmeticShiftLeft expression6 .) ]
  ! Plus            [ reduce using rule 67 (expression5 -> expression5 ArithmeticShiftLeft expression6 .) ]


state 146

    (36) LogicalShiftRight -> GreaterThan GreaterThan .
    (38) ArithmeticShiftRight -> GreaterThan GreaterThan . GreaterThan

    Plus            reduce using rule 36 (LogicalShiftRight -> GreaterThan GreaterThan .)
    Minus           reduce using rule 36 (LogicalShiftRight -> GreaterThan GreaterThan .)
    Amp             reduce using rule 36 (LogicalShiftRight -> GreaterThan GreaterThan .)
    Bar             reduce using rule 36 (LogicalShiftRight -> GreaterThan GreaterThan .)
    Carat           reduce using rule 36 (LogicalShiftRight -> GreaterThan GreaterThan .)
    Not             reduce using rule 36 (LogicalShiftRight -> GreaterThan GreaterThan .)
    Tilde           reduce using rule 36 (LogicalShiftRight -> GreaterThan GreaterThan .)
    ParenL          reduce using rule 36 (LogicalShiftRight -> GreaterThan GreaterThan .)
    Num             reduce using rule 36 (LogicalShiftRight -> GreaterThan GreaterThan .)
    KW_this         reduce using rule 36 (LogicalShiftRight -> GreaterThan GreaterThan .)
    Ident           reduce using rule 36 (LogicalShiftRight -> GreaterThan GreaterThan .)
    GreaterThan     shift and go to state 180


state 147

    (35) LogicalShiftLeft -> LessThan LessThan .
    (37) ArithmeticShiftLeft -> LessThan LessThan . LessThan

    Plus            reduce using rule 35 (LogicalShiftLeft -> LessThan LessThan .)
    Minus           reduce using rule 35 (LogicalShiftLeft -> LessThan LessThan .)
    Amp             reduce using rule 35 (LogicalShiftLeft -> LessThan LessThan .)
    Bar             reduce using rule 35 (LogicalShiftLeft -> LessThan LessThan .)
    Carat           reduce using rule 35 (LogicalShiftLeft -> LessThan LessThan .)
    Not             reduce using rule 35 (LogicalShiftLeft -> LessThan LessThan .)
    Tilde           reduce using rule 35 (LogicalShiftLeft -> LessThan LessThan .)
    ParenL          reduce using rule 35 (LogicalShiftLeft -> LessThan LessThan .)
    Num             reduce using rule 35 (LogicalShiftLeft -> LessThan LessThan .)
    KW_this         reduce using rule 35 (LogicalShiftLeft -> LessThan LessThan .)
    Ident           reduce using rule 35 (LogicalShiftLeft -> LessThan LessThan .)
    LessThan        shift and go to state 181


state 148

    (69) expression6 -> expression6 Plus expression7 .
    (72) expression7 -> expression7 . Star expression8
    (73) expression7 -> expression7 . Divide expression8
    (74) expression7 -> expression7 . Mod expression8
    (75) expression7 -> expression7 . Power expression8
    (16) Power -> . Star Star

    Plus            reduce using rule 69 (expression6 -> expression6 Plus expression7 .)
    Minus           reduce using rule 69 (expression6 -> expression6 Plus expression7 .)
    GreaterThan     reduce using rule 69 (expression6 -> expression6 Plus expression7 .)
    LessThan        reduce using rule 69 (expression6 -> expression6 Plus expression7 .)
    Question        reduce using rule 69 (expression6 -> expression6 Plus expression7 .)
    Bar             reduce using rule 69 (expression6 -> expression6 Plus expression7 .)
    Carat           reduce using rule 69 (expression6 -> expression6 Plus expression7 .)
    Amp             reduce using rule 69 (expression6 -> expression6 Plus expression7 .)
    Tilde           reduce using rule 69 (expression6 -> expression6 Plus expression7 .)
    Equals          reduce using rule 69 (expression6 -> expression6 Plus expression7 .)
    Not             reduce using rule 69 (expression6 -> expression6 Plus expression7 .)
    Comma           reduce using rule 69 (expression6 -> expression6 Plus expression7 .)
    ParenR          reduce using rule 69 (expression6 -> expression6 Plus expression7 .)
    Semi            reduce using rule 69 (expression6 -> expression6 Plus expression7 .)
    Colon           reduce using rule 69 (expression6 -> expression6 Plus expression7 .)
    BracketR        reduce using rule 69 (expression6 -> expression6 Plus expression7 .)
    Star            shift and go to state 93
    Divide          shift and go to state 94
    Mod             shift and go to state 95

    Power                          shift and go to state 96

state 149

    (70) expression6 -> expression6 Minus expression7 .
    (72) expression7 -> expression7 . Star expression8
    (73) expression7 -> expression7 . Divide expression8
    (74) expression7 -> expression7 . Mod expression8
    (75) expression7 -> expression7 . Power expression8
    (16) Power -> . Star Star

    Plus            reduce using rule 70 (expression6 -> expression6 Minus expression7 .)
    Minus           reduce using rule 70 (expression6 -> expression6 Minus expression7 .)
    GreaterThan     reduce using rule 70 (expression6 -> expression6 Minus expression7 .)
    LessThan        reduce using rule 70 (expression6 -> expression6 Minus expression7 .)
    Question        reduce using rule 70 (expression6 -> expression6 Minus expression7 .)
    Bar             reduce using rule 70 (expression6 -> expression6 Minus expression7 .)
    Carat           reduce using rule 70 (expression6 -> expression6 Minus expression7 .)
    Amp             reduce using rule 70 (expression6 -> expression6 Minus expression7 .)
    Tilde           reduce using rule 70 (expression6 -> expression6 Minus expression7 .)
    Equals          reduce using rule 70 (expression6 -> expression6 Minus expression7 .)
    Not             reduce using rule 70 (expression6 -> expression6 Minus expression7 .)
    Comma           reduce using rule 70 (expression6 -> expression6 Minus expression7 .)
    ParenR          reduce using rule 70 (expression6 -> expression6 Minus expression7 .)
    Semi            reduce using rule 70 (expression6 -> expression6 Minus expression7 .)
    Colon           reduce using rule 70 (expression6 -> expression6 Minus expression7 .)
    BracketR        reduce using rule 70 (expression6 -> expression6 Minus expression7 .)
    Star            shift and go to state 93
    Divide          shift and go to state 94
    Mod             shift and go to state 95

    Power                          shift and go to state 96

state 150

    (16) Power -> Star Star .

    Plus            reduce using rule 16 (Power -> Star Star .)
    Minus           reduce using rule 16 (Power -> Star Star .)
    Amp             reduce using rule 16 (Power -> Star Star .)
    Bar             reduce using rule 16 (Power -> Star Star .)
    Carat           reduce using rule 16 (Power -> Star Star .)
    Not             reduce using rule 16 (Power -> Star Star .)
    Tilde           reduce using rule 16 (Power -> Star Star .)
    ParenL          reduce using rule 16 (Power -> Star Star .)
    Num             reduce using rule 16 (Power -> Star Star .)
    KW_this         reduce using rule 16 (Power -> Star Star .)
    Ident           reduce using rule 16 (Power -> Star Star .)


state 151

    (72) expression7 -> expression7 Star expression8 .

    Star            reduce using rule 72 (expression7 -> expression7 Star expression8 .)
    Divide          reduce using rule 72 (expression7 -> expression7 Star expression8 .)
    Mod             reduce using rule 72 (expression7 -> expression7 Star expression8 .)
    Plus            reduce using rule 72 (expression7 -> expression7 Star expression8 .)
    Minus           reduce using rule 72 (expression7 -> expression7 Star expression8 .)
    GreaterThan     reduce using rule 72 (expression7 -> expression7 Star expression8 .)
    LessThan        reduce using rule 72 (expression7 -> expression7 Star expression8 .)
    Question        reduce using rule 72 (expression7 -> expression7 Star expression8 .)
    Bar             reduce using rule 72 (expression7 -> expression7 Star expression8 .)
    Carat           reduce using rule 72 (expression7 -> expression7 Star expression8 .)
    Amp             reduce using rule 72 (expression7 -> expression7 Star expression8 .)
    Tilde           reduce using rule 72 (expression7 -> expression7 Star expression8 .)
    Equals          reduce using rule 72 (expression7 -> expression7 Star expression8 .)
    Not             reduce using rule 72 (expression7 -> expression7 Star expression8 .)
    Comma           reduce using rule 72 (expression7 -> expression7 Star expression8 .)
    ParenR          reduce using rule 72 (expression7 -> expression7 Star expression8 .)
    Semi            reduce using rule 72 (expression7 -> expression7 Star expression8 .)
    Colon           reduce using rule 72 (expression7 -> expression7 Star expression8 .)
    BracketR        reduce using rule 72 (expression7 -> expression7 Star expression8 .)


state 152

    (73) expression7 -> expression7 Divide expression8 .

    Star            reduce using rule 73 (expression7 -> expression7 Divide expression8 .)
    Divide          reduce using rule 73 (expression7 -> expression7 Divide expression8 .)
    Mod             reduce using rule 73 (expression7 -> expression7 Divide expression8 .)
    Plus            reduce using rule 73 (expression7 -> expression7 Divide expression8 .)
    Minus           reduce using rule 73 (expression7 -> expression7 Divide expression8 .)
    GreaterThan     reduce using rule 73 (expression7 -> expression7 Divide expression8 .)
    LessThan        reduce using rule 73 (expression7 -> expression7 Divide expression8 .)
    Question        reduce using rule 73 (expression7 -> expression7 Divide expression8 .)
    Bar             reduce using rule 73 (expression7 -> expression7 Divide expression8 .)
    Carat           reduce using rule 73 (expression7 -> expression7 Divide expression8 .)
    Amp             reduce using rule 73 (expression7 -> expression7 Divide expression8 .)
    Tilde           reduce using rule 73 (expression7 -> expression7 Divide expression8 .)
    Equals          reduce using rule 73 (expression7 -> expression7 Divide expression8 .)
    Not             reduce using rule 73 (expression7 -> expression7 Divide expression8 .)
    Comma           reduce using rule 73 (expression7 -> expression7 Divide expression8 .)
    ParenR          reduce using rule 73 (expression7 -> expression7 Divide expression8 .)
    Semi            reduce using rule 73 (expression7 -> expression7 Divide expression8 .)
    Colon           reduce using rule 73 (expression7 -> expression7 Divide expression8 .)
    BracketR        reduce using rule 73 (expression7 -> expression7 Divide expression8 .)


state 153

    (74) expression7 -> expression7 Mod expression8 .

    Star            reduce using rule 74 (expression7 -> expression7 Mod expression8 .)
    Divide          reduce using rule 74 (expression7 -> expression7 Mod expression8 .)
    Mod             reduce using rule 74 (expression7 -> expression7 Mod expression8 .)
    Plus            reduce using rule 74 (expression7 -> expression7 Mod expression8 .)
    Minus           reduce using rule 74 (expression7 -> expression7 Mod expression8 .)
    GreaterThan     reduce using rule 74 (expression7 -> expression7 Mod expression8 .)
    LessThan        reduce using rule 74 (expression7 -> expression7 Mod expression8 .)
    Question        reduce using rule 74 (expression7 -> expression7 Mod expression8 .)
    Bar             reduce using rule 74 (expression7 -> expression7 Mod expression8 .)
    Carat           reduce using rule 74 (expression7 -> expression7 Mod expression8 .)
    Amp             reduce using rule 74 (expression7 -> expression7 Mod expression8 .)
    Tilde           reduce using rule 74 (expression7 -> expression7 Mod expression8 .)
    Equals          reduce using rule 74 (expression7 -> expression7 Mod expression8 .)
    Not             reduce using rule 74 (expression7 -> expression7 Mod expression8 .)
    Comma           reduce using rule 74 (expression7 -> expression7 Mod expression8 .)
    ParenR          reduce using rule 74 (expression7 -> expression7 Mod expression8 .)
    Semi            reduce using rule 74 (expression7 -> expression7 Mod expression8 .)
    Colon           reduce using rule 74 (expression7 -> expression7 Mod expression8 .)
    BracketR        reduce using rule 74 (expression7 -> expression7 Mod expression8 .)


state 154

    (75) expression7 -> expression7 Power expression8 .

    Star            reduce using rule 75 (expression7 -> expression7 Power expression8 .)
    Divide          reduce using rule 75 (expression7 -> expression7 Power expression8 .)
    Mod             reduce using rule 75 (expression7 -> expression7 Power expression8 .)
    Plus            reduce using rule 75 (expression7 -> expression7 Power expression8 .)
    Minus           reduce using rule 75 (expression7 -> expression7 Power expression8 .)
    GreaterThan     reduce using rule 75 (expression7 -> expression7 Power expression8 .)
    LessThan        reduce using rule 75 (expression7 -> expression7 Power expression8 .)
    Question        reduce using rule 75 (expression7 -> expression7 Power expression8 .)
    Bar             reduce using rule 75 (expression7 -> expression7 Power expression8 .)
    Carat           reduce using rule 75 (expression7 -> expression7 Power expression8 .)
    Amp             reduce using rule 75 (expression7 -> expression7 Power expression8 .)
    Tilde           reduce using rule 75 (expression7 -> expression7 Power expression8 .)
    Equals          reduce using rule 75 (expression7 -> expression7 Power expression8 .)
    Not             reduce using rule 75 (expression7 -> expression7 Power expression8 .)
    Comma           reduce using rule 75 (expression7 -> expression7 Power expression8 .)
    ParenR          reduce using rule 75 (expression7 -> expression7 Power expression8 .)
    Semi            reduce using rule 75 (expression7 -> expression7 Power expression8 .)
    Colon           reduce using rule 75 (expression7 -> expression7 Power expression8 .)
    BracketR        reduce using rule 75 (expression7 -> expression7 Power expression8 .)


state 155

    (94) primary1 -> primary1 Dot identifier .

    Dot             reduce using rule 94 (primary1 -> primary1 Dot identifier .)
    BracketL        reduce using rule 94 (primary1 -> primary1 Dot identifier .)
    Star            reduce using rule 94 (primary1 -> primary1 Dot identifier .)
    Divide          reduce using rule 94 (primary1 -> primary1 Dot identifier .)
    Mod             reduce using rule 94 (primary1 -> primary1 Dot identifier .)
    Plus            reduce using rule 94 (primary1 -> primary1 Dot identifier .)
    Minus           reduce using rule 94 (primary1 -> primary1 Dot identifier .)
    GreaterThan     reduce using rule 94 (primary1 -> primary1 Dot identifier .)
    LessThan        reduce using rule 94 (primary1 -> primary1 Dot identifier .)
    Question        reduce using rule 94 (primary1 -> primary1 Dot identifier .)
    Bar             reduce using rule 94 (primary1 -> primary1 Dot identifier .)
    Carat           reduce using rule 94 (primary1 -> primary1 Dot identifier .)
    Amp             reduce using rule 94 (primary1 -> primary1 Dot identifier .)
    Tilde           reduce using rule 94 (primary1 -> primary1 Dot identifier .)
    Equals          reduce using rule 94 (primary1 -> primary1 Dot identifier .)
    Not             reduce using rule 94 (primary1 -> primary1 Dot identifier .)
    Comma           reduce using rule 94 (primary1 -> primary1 Dot identifier .)
    ParenR          reduce using rule 94 (primary1 -> primary1 Dot identifier .)
    Semi            reduce using rule 94 (primary1 -> primary1 Dot identifier .)
    Colon           reduce using rule 94 (primary1 -> primary1 Dot identifier .)
    BracketR        reduce using rule 94 (primary1 -> primary1 Dot identifier .)


state 156

    (95) primary1 -> primary1 BracketL expression . BracketR
    (87) part_select_range -> expression . Colon expression
    (88) part_select_range -> expression . PlusColon expression
    (89) part_select_range -> expression . MinusColon expression
    (14) PlusColon -> . Plus Colon
    (15) MinusColon -> . Minus Colon

    BracketR        shift and go to state 182
    Colon           shift and go to state 183
    Plus            shift and go to state 186
    Minus           shift and go to state 187

    PlusColon                      shift and go to state 184
    MinusColon                     shift and go to state 185

state 157

    (96) primary1 -> primary1 BracketL part_select_range . BracketR

    BracketR        shift and go to state 188


state 158

    (129) caliper_declaration -> KW_struct identifier ParenL expr_list ParenR Semi . caliper_statement_list KW_endstruct
    (10) caliper_statement_list -> . empty
    (11) caliper_statement_list -> . caliper_statement_list_p
    (1) empty -> .
    (8) caliper_statement_list_p -> . caliper_statement
    (9) caliper_statement_list_p -> . caliper_statement caliper_statement_list_p
    (112) caliper_statement -> . KW_def expr_list_p Semi
    (113) caliper_statement -> . KW_invariant identifier Colon expression Semi
    (114) caliper_statement -> . datatype primary1_list_p Semi
    (115) caliper_statement -> . KW_begin caliper_statement_list KW_end
    (116) caliper_statement -> . KW_if ParenL expression ParenR caliper_statement
    (117) caliper_statement -> . KW_foreach ParenL caliper_loop_list_p ParenR caliper_statement
    (107) datatype -> . basetype
    (108) datatype -> . datatype dimension
    (102) basetype -> . KW_logic
    (103) basetype -> . identifier ParenL expr_list ParenR
    (104) basetype -> . identifier
    (91) identifier -> . Ident

    KW_endstruct    reduce using rule 1 (empty -> .)
    KW_def          shift and go to state 166
    KW_invariant    shift and go to state 167
    KW_begin        shift and go to state 169
    KW_if           shift and go to state 170
    KW_foreach      shift and go to state 171
    KW_logic        shift and go to state 173
    Ident           shift and go to state 10

    identifier                     shift and go to state 161
    caliper_statement_list         shift and go to state 189
    empty                          shift and go to state 163
    caliper_statement_list_p       shift and go to state 164
    caliper_statement              shift and go to state 165
    datatype                       shift and go to state 168
    basetype                       shift and go to state 172

state 159

    (130) caliper_declaration -> KW_module identifier ParenL expr_list ParenR Semi . caliper_mod_stmt_list KW_endmodule
    (12) caliper_mod_stmt_list -> . caliper_mod_stmt
    (13) caliper_mod_stmt_list -> . caliper_mod_stmt caliper_mod_stmt_list
    (118) caliper_mod_stmt -> . KW_input caliper_statement
    (119) caliper_mod_stmt -> . KW_output caliper_statement
    (120) caliper_mod_stmt -> . KW_state caliper_statement
    (121) caliper_mod_stmt -> . KW_output KW_state caliper_statement
    (122) caliper_mod_stmt -> . KW_begin caliper_mod_stmt_list KW_end
    (123) caliper_mod_stmt -> . KW_if ParenL expression ParenR caliper_mod_stmt
    (124) caliper_mod_stmt -> . KW_def expr_list_p Semi
    (125) caliper_mod_stmt -> . KW_invariant identifier Colon expression Semi
    (126) caliper_mod_stmt -> . datatype primary1_list_p Semi
    (127) caliper_mod_stmt -> . KW_submodule identifier ParenL expr_list ParenR identifier Semi
    (107) datatype -> . basetype
    (108) datatype -> . datatype dimension
    (102) basetype -> . KW_logic
    (103) basetype -> . identifier ParenL expr_list ParenR
    (104) basetype -> . identifier
    (91) identifier -> . Ident

    KW_input        shift and go to state 192
    KW_output       shift and go to state 193
    KW_state        shift and go to state 194
    KW_begin        shift and go to state 195
    KW_if           shift and go to state 196
    KW_def          shift and go to state 197
    KW_invariant    shift and go to state 198
    KW_submodule    shift and go to state 200
    KW_logic        shift and go to state 173
    Ident           shift and go to state 10

    identifier                     shift and go to state 161
    caliper_mod_stmt_list          shift and go to state 190
    caliper_mod_stmt               shift and go to state 191
    datatype                       shift and go to state 199
    basetype                       shift and go to state 172

state 160

    (97) function_call -> identifier ParenL expr_list ParenR .

    Star            reduce using rule 97 (function_call -> identifier ParenL expr_list ParenR .)
    Divide          reduce using rule 97 (function_call -> identifier ParenL expr_list ParenR .)
    Mod             reduce using rule 97 (function_call -> identifier ParenL expr_list ParenR .)
    Plus            reduce using rule 97 (function_call -> identifier ParenL expr_list ParenR .)
    Minus           reduce using rule 97 (function_call -> identifier ParenL expr_list ParenR .)
    GreaterThan     reduce using rule 97 (function_call -> identifier ParenL expr_list ParenR .)
    LessThan        reduce using rule 97 (function_call -> identifier ParenL expr_list ParenR .)
    Question        reduce using rule 97 (function_call -> identifier ParenL expr_list ParenR .)
    Bar             reduce using rule 97 (function_call -> identifier ParenL expr_list ParenR .)
    Carat           reduce using rule 97 (function_call -> identifier ParenL expr_list ParenR .)
    Amp             reduce using rule 97 (function_call -> identifier ParenL expr_list ParenR .)
    Tilde           reduce using rule 97 (function_call -> identifier ParenL expr_list ParenR .)
    Equals          reduce using rule 97 (function_call -> identifier ParenL expr_list ParenR .)
    Not             reduce using rule 97 (function_call -> identifier ParenL expr_list ParenR .)
    Comma           reduce using rule 97 (function_call -> identifier ParenL expr_list ParenR .)
    ParenR          reduce using rule 97 (function_call -> identifier ParenL expr_list ParenR .)
    Semi            reduce using rule 97 (function_call -> identifier ParenL expr_list ParenR .)
    Colon           reduce using rule 97 (function_call -> identifier ParenL expr_list ParenR .)
    BracketR        reduce using rule 97 (function_call -> identifier ParenL expr_list ParenR .)


state 161

    (103) basetype -> identifier . ParenL expr_list ParenR
    (104) basetype -> identifier .

    ParenL          shift and go to state 201
    BracketL        reduce using rule 104 (basetype -> identifier .)
    KW_this         reduce using rule 104 (basetype -> identifier .)
    Ident           reduce using rule 104 (basetype -> identifier .)


state 162

    (128) caliper_declaration -> KW_spec identifier ParenL expr_list ParenR Semi caliper_statement_list . KW_endspec

    KW_endspec      shift and go to state 202


state 163

    (10) caliper_statement_list -> empty .

    KW_endspec      reduce using rule 10 (caliper_statement_list -> empty .)
    KW_endstruct    reduce using rule 10 (caliper_statement_list -> empty .)
    KW_end          reduce using rule 10 (caliper_statement_list -> empty .)


state 164

    (11) caliper_statement_list -> caliper_statement_list_p .

    KW_endspec      reduce using rule 11 (caliper_statement_list -> caliper_statement_list_p .)
    KW_endstruct    reduce using rule 11 (caliper_statement_list -> caliper_statement_list_p .)
    KW_end          reduce using rule 11 (caliper_statement_list -> caliper_statement_list_p .)


state 165

    (8) caliper_statement_list_p -> caliper_statement .
    (9) caliper_statement_list_p -> caliper_statement . caliper_statement_list_p
    (8) caliper_statement_list_p -> . caliper_statement
    (9) caliper_statement_list_p -> . caliper_statement caliper_statement_list_p
    (112) caliper_statement -> . KW_def expr_list_p Semi
    (113) caliper_statement -> . KW_invariant identifier Colon expression Semi
    (114) caliper_statement -> . datatype primary1_list_p Semi
    (115) caliper_statement -> . KW_begin caliper_statement_list KW_end
    (116) caliper_statement -> . KW_if ParenL expression ParenR caliper_statement
    (117) caliper_statement -> . KW_foreach ParenL caliper_loop_list_p ParenR caliper_statement
    (107) datatype -> . basetype
    (108) datatype -> . datatype dimension
    (102) basetype -> . KW_logic
    (103) basetype -> . identifier ParenL expr_list ParenR
    (104) basetype -> . identifier
    (91) identifier -> . Ident

    KW_endspec      reduce using rule 8 (caliper_statement_list_p -> caliper_statement .)
    KW_endstruct    reduce using rule 8 (caliper_statement_list_p -> caliper_statement .)
    KW_end          reduce using rule 8 (caliper_statement_list_p -> caliper_statement .)
    KW_def          shift and go to state 166
    KW_invariant    shift and go to state 167
    KW_begin        shift and go to state 169
    KW_if           shift and go to state 170
    KW_foreach      shift and go to state 171
    KW_logic        shift and go to state 173
    Ident           shift and go to state 10

    caliper_statement              shift and go to state 165
    caliper_statement_list_p       shift and go to state 203
    identifier                     shift and go to state 161
    datatype                       shift and go to state 168
    basetype                       shift and go to state 172

state 166

    (112) caliper_statement -> KW_def . expr_list_p Semi
    (2) expr_list_p -> . expression
    (3) expr_list_p -> . expression Comma expr_list_p
    (39) expression -> . expression1
    (40) expression1 -> . expression2
    (41) expression1 -> . expression2 LogicalImplication expression1
    (42) expression1 -> . expression2 LogicalEquivalence expression1
    (43) expression2 -> . expression3
    (44) expression2 -> . expression3 Question expression Colon expression2
    (45) expression3 -> . expression4
    (46) expression3 -> . expression3 LogicalOr expression4
    (47) expression3 -> . expression3 LogicalAnd expression4
    (48) expression3 -> . expression3 Bar expression4
    (49) expression3 -> . expression3 Carat expression4
    (50) expression3 -> . expression3 BinaryXnor expression4
    (51) expression3 -> . expression3 Amp expression4
    (52) expression3 -> . expression3 Equality expression4
    (53) expression3 -> . expression3 Inequality expression4
    (54) expression3 -> . expression3 CaseEquality expression4
    (55) expression3 -> . expression3 CaseInequality expression4
    (56) expression3 -> . expression3 WildcardEquality expression4
    (57) expression3 -> . expression3 WildcardInequality expression4
    (58) expression4 -> . expression5
    (59) expression4 -> . expression4 LessThan expression5
    (60) expression4 -> . expression4 LessThanEqual expression5
    (61) expression4 -> . expression4 GreaterThan expression5
    (62) expression4 -> . expression4 GreaterThanEqual expression5
    (63) expression5 -> . expression6
    (64) expression5 -> . expression5 LogicalShiftRight expression6
    (65) expression5 -> . expression5 LogicalShiftLeft expression6
    (66) expression5 -> . expression5 ArithmeticShiftRight expression6
    (67) expression5 -> . expression5 ArithmeticShiftLeft expression6
    (68) expression6 -> . expression7
    (69) expression6 -> . expression6 Plus expression7
    (70) expression6 -> . expression6 Minus expression7
    (71) expression7 -> . expression8
    (72) expression7 -> . expression7 Star expression8
    (73) expression7 -> . expression7 Divide expression8
    (74) expression7 -> . expression7 Mod expression8
    (75) expression7 -> . expression7 Power expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    expr_list_p                    shift and go to state 204
    expression                     shift and go to state 23
    expression1                    shift and go to state 24
    expression2                    shift and go to state 25
    expression3                    shift and go to state 26
    expression4                    shift and go to state 27
    BinaryXnor                     shift and go to state 30
    expression5                    shift and go to state 32
    expression6                    shift and go to state 33
    expression7                    shift and go to state 34
    expression8                    shift and go to state 37
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 167

    (113) caliper_statement -> KW_invariant . identifier Colon expression Semi
    (91) identifier -> . Ident

    Ident           shift and go to state 10

    identifier                     shift and go to state 205

state 168

    (114) caliper_statement -> datatype . primary1_list_p Semi
    (108) datatype -> datatype . dimension
    (6) primary1_list_p -> . primary1
    (7) primary1_list_p -> . primary1 Comma primary1_list_p
    (105) dimension -> . BracketL expression BracketR
    (106) dimension -> . BracketL expression Colon expression BracketR
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (91) identifier -> . Ident

    BracketL        shift and go to state 209
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    primary1_list_p                shift and go to state 206
    dimension                      shift and go to state 207
    primary1                       shift and go to state 208
    identifier                     shift and go to state 210

state 169

    (115) caliper_statement -> KW_begin . caliper_statement_list KW_end
    (10) caliper_statement_list -> . empty
    (11) caliper_statement_list -> . caliper_statement_list_p
    (1) empty -> .
    (8) caliper_statement_list_p -> . caliper_statement
    (9) caliper_statement_list_p -> . caliper_statement caliper_statement_list_p
    (112) caliper_statement -> . KW_def expr_list_p Semi
    (113) caliper_statement -> . KW_invariant identifier Colon expression Semi
    (114) caliper_statement -> . datatype primary1_list_p Semi
    (115) caliper_statement -> . KW_begin caliper_statement_list KW_end
    (116) caliper_statement -> . KW_if ParenL expression ParenR caliper_statement
    (117) caliper_statement -> . KW_foreach ParenL caliper_loop_list_p ParenR caliper_statement
    (107) datatype -> . basetype
    (108) datatype -> . datatype dimension
    (102) basetype -> . KW_logic
    (103) basetype -> . identifier ParenL expr_list ParenR
    (104) basetype -> . identifier
    (91) identifier -> . Ident

    KW_end          reduce using rule 1 (empty -> .)
    KW_def          shift and go to state 166
    KW_invariant    shift and go to state 167
    KW_begin        shift and go to state 169
    KW_if           shift and go to state 170
    KW_foreach      shift and go to state 171
    KW_logic        shift and go to state 173
    Ident           shift and go to state 10

    caliper_statement_list         shift and go to state 211
    empty                          shift and go to state 163
    caliper_statement_list_p       shift and go to state 164
    caliper_statement              shift and go to state 165
    identifier                     shift and go to state 161
    datatype                       shift and go to state 168
    basetype                       shift and go to state 172

state 170

    (116) caliper_statement -> KW_if . ParenL expression ParenR caliper_statement

    ParenL          shift and go to state 212


state 171

    (117) caliper_statement -> KW_foreach . ParenL caliper_loop_list_p ParenR caliper_statement

    ParenL          shift and go to state 213


state 172

    (107) datatype -> basetype .

    BracketL        reduce using rule 107 (datatype -> basetype .)
    KW_this         reduce using rule 107 (datatype -> basetype .)
    Ident           reduce using rule 107 (datatype -> basetype .)


state 173

    (102) basetype -> KW_logic .

    BracketL        reduce using rule 102 (basetype -> KW_logic .)
    KW_this         reduce using rule 102 (basetype -> KW_logic .)
    Ident           reduce using rule 102 (basetype -> KW_logic .)


state 174

    (34) LogicalEquivalence -> LessThan Minus GreaterThan .

    Plus            reduce using rule 34 (LogicalEquivalence -> LessThan Minus GreaterThan .)
    Minus           reduce using rule 34 (LogicalEquivalence -> LessThan Minus GreaterThan .)
    Amp             reduce using rule 34 (LogicalEquivalence -> LessThan Minus GreaterThan .)
    Bar             reduce using rule 34 (LogicalEquivalence -> LessThan Minus GreaterThan .)
    Carat           reduce using rule 34 (LogicalEquivalence -> LessThan Minus GreaterThan .)
    Not             reduce using rule 34 (LogicalEquivalence -> LessThan Minus GreaterThan .)
    Tilde           reduce using rule 34 (LogicalEquivalence -> LessThan Minus GreaterThan .)
    ParenL          reduce using rule 34 (LogicalEquivalence -> LessThan Minus GreaterThan .)
    Num             reduce using rule 34 (LogicalEquivalence -> LessThan Minus GreaterThan .)
    KW_this         reduce using rule 34 (LogicalEquivalence -> LessThan Minus GreaterThan .)
    Ident           reduce using rule 34 (LogicalEquivalence -> LessThan Minus GreaterThan .)


state 175

    (44) expression2 -> expression3 Question expression Colon . expression2
    (43) expression2 -> . expression3
    (44) expression2 -> . expression3 Question expression Colon expression2
    (45) expression3 -> . expression4
    (46) expression3 -> . expression3 LogicalOr expression4
    (47) expression3 -> . expression3 LogicalAnd expression4
    (48) expression3 -> . expression3 Bar expression4
    (49) expression3 -> . expression3 Carat expression4
    (50) expression3 -> . expression3 BinaryXnor expression4
    (51) expression3 -> . expression3 Amp expression4
    (52) expression3 -> . expression3 Equality expression4
    (53) expression3 -> . expression3 Inequality expression4
    (54) expression3 -> . expression3 CaseEquality expression4
    (55) expression3 -> . expression3 CaseInequality expression4
    (56) expression3 -> . expression3 WildcardEquality expression4
    (57) expression3 -> . expression3 WildcardInequality expression4
    (58) expression4 -> . expression5
    (59) expression4 -> . expression4 LessThan expression5
    (60) expression4 -> . expression4 LessThanEqual expression5
    (61) expression4 -> . expression4 GreaterThan expression5
    (62) expression4 -> . expression4 GreaterThanEqual expression5
    (63) expression5 -> . expression6
    (64) expression5 -> . expression5 LogicalShiftRight expression6
    (65) expression5 -> . expression5 LogicalShiftLeft expression6
    (66) expression5 -> . expression5 ArithmeticShiftRight expression6
    (67) expression5 -> . expression5 ArithmeticShiftLeft expression6
    (68) expression6 -> . expression7
    (69) expression6 -> . expression6 Plus expression7
    (70) expression6 -> . expression6 Minus expression7
    (71) expression7 -> . expression8
    (72) expression7 -> . expression7 Star expression8
    (73) expression7 -> . expression7 Divide expression8
    (74) expression7 -> . expression7 Mod expression8
    (75) expression7 -> . expression7 Power expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    expression3                    shift and go to state 26
    expression2                    shift and go to state 214
    expression4                    shift and go to state 27
    BinaryXnor                     shift and go to state 30
    expression5                    shift and go to state 32
    expression6                    shift and go to state 33
    expression7                    shift and go to state 34
    expression8                    shift and go to state 37
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 176

    (19) CaseEquality -> Equals Equals Equals .

    Plus            reduce using rule 19 (CaseEquality -> Equals Equals Equals .)
    Minus           reduce using rule 19 (CaseEquality -> Equals Equals Equals .)
    Amp             reduce using rule 19 (CaseEquality -> Equals Equals Equals .)
    Bar             reduce using rule 19 (CaseEquality -> Equals Equals Equals .)
    Carat           reduce using rule 19 (CaseEquality -> Equals Equals Equals .)
    Not             reduce using rule 19 (CaseEquality -> Equals Equals Equals .)
    Tilde           reduce using rule 19 (CaseEquality -> Equals Equals Equals .)
    ParenL          reduce using rule 19 (CaseEquality -> Equals Equals Equals .)
    Num             reduce using rule 19 (CaseEquality -> Equals Equals Equals .)
    KW_this         reduce using rule 19 (CaseEquality -> Equals Equals Equals .)
    Ident           reduce using rule 19 (CaseEquality -> Equals Equals Equals .)


state 177

    (21) WildcardEquality -> Equals Equals Question .

    Plus            reduce using rule 21 (WildcardEquality -> Equals Equals Question .)
    Minus           reduce using rule 21 (WildcardEquality -> Equals Equals Question .)
    Amp             reduce using rule 21 (WildcardEquality -> Equals Equals Question .)
    Bar             reduce using rule 21 (WildcardEquality -> Equals Equals Question .)
    Carat           reduce using rule 21 (WildcardEquality -> Equals Equals Question .)
    Not             reduce using rule 21 (WildcardEquality -> Equals Equals Question .)
    Tilde           reduce using rule 21 (WildcardEquality -> Equals Equals Question .)
    ParenL          reduce using rule 21 (WildcardEquality -> Equals Equals Question .)
    Num             reduce using rule 21 (WildcardEquality -> Equals Equals Question .)
    KW_this         reduce using rule 21 (WildcardEquality -> Equals Equals Question .)
    Ident           reduce using rule 21 (WildcardEquality -> Equals Equals Question .)


state 178

    (20) CaseInequality -> Not Equals Equals .

    Plus            reduce using rule 20 (CaseInequality -> Not Equals Equals .)
    Minus           reduce using rule 20 (CaseInequality -> Not Equals Equals .)
    Amp             reduce using rule 20 (CaseInequality -> Not Equals Equals .)
    Bar             reduce using rule 20 (CaseInequality -> Not Equals Equals .)
    Carat           reduce using rule 20 (CaseInequality -> Not Equals Equals .)
    Not             reduce using rule 20 (CaseInequality -> Not Equals Equals .)
    Tilde           reduce using rule 20 (CaseInequality -> Not Equals Equals .)
    ParenL          reduce using rule 20 (CaseInequality -> Not Equals Equals .)
    Num             reduce using rule 20 (CaseInequality -> Not Equals Equals .)
    KW_this         reduce using rule 20 (CaseInequality -> Not Equals Equals .)
    Ident           reduce using rule 20 (CaseInequality -> Not Equals Equals .)


state 179

    (22) WildcardInequality -> Not Equals Question .

    Plus            reduce using rule 22 (WildcardInequality -> Not Equals Question .)
    Minus           reduce using rule 22 (WildcardInequality -> Not Equals Question .)
    Amp             reduce using rule 22 (WildcardInequality -> Not Equals Question .)
    Bar             reduce using rule 22 (WildcardInequality -> Not Equals Question .)
    Carat           reduce using rule 22 (WildcardInequality -> Not Equals Question .)
    Not             reduce using rule 22 (WildcardInequality -> Not Equals Question .)
    Tilde           reduce using rule 22 (WildcardInequality -> Not Equals Question .)
    ParenL          reduce using rule 22 (WildcardInequality -> Not Equals Question .)
    Num             reduce using rule 22 (WildcardInequality -> Not Equals Question .)
    KW_this         reduce using rule 22 (WildcardInequality -> Not Equals Question .)
    Ident           reduce using rule 22 (WildcardInequality -> Not Equals Question .)


state 180

    (38) ArithmeticShiftRight -> GreaterThan GreaterThan GreaterThan .

    Plus            reduce using rule 38 (ArithmeticShiftRight -> GreaterThan GreaterThan GreaterThan .)
    Minus           reduce using rule 38 (ArithmeticShiftRight -> GreaterThan GreaterThan GreaterThan .)
    Amp             reduce using rule 38 (ArithmeticShiftRight -> GreaterThan GreaterThan GreaterThan .)
    Bar             reduce using rule 38 (ArithmeticShiftRight -> GreaterThan GreaterThan GreaterThan .)
    Carat           reduce using rule 38 (ArithmeticShiftRight -> GreaterThan GreaterThan GreaterThan .)
    Not             reduce using rule 38 (ArithmeticShiftRight -> GreaterThan GreaterThan GreaterThan .)
    Tilde           reduce using rule 38 (ArithmeticShiftRight -> GreaterThan GreaterThan GreaterThan .)
    ParenL          reduce using rule 38 (ArithmeticShiftRight -> GreaterThan GreaterThan GreaterThan .)
    Num             reduce using rule 38 (ArithmeticShiftRight -> GreaterThan GreaterThan GreaterThan .)
    KW_this         reduce using rule 38 (ArithmeticShiftRight -> GreaterThan GreaterThan GreaterThan .)
    Ident           reduce using rule 38 (ArithmeticShiftRight -> GreaterThan GreaterThan GreaterThan .)


state 181

    (37) ArithmeticShiftLeft -> LessThan LessThan LessThan .

    Plus            reduce using rule 37 (ArithmeticShiftLeft -> LessThan LessThan LessThan .)
    Minus           reduce using rule 37 (ArithmeticShiftLeft -> LessThan LessThan LessThan .)
    Amp             reduce using rule 37 (ArithmeticShiftLeft -> LessThan LessThan LessThan .)
    Bar             reduce using rule 37 (ArithmeticShiftLeft -> LessThan LessThan LessThan .)
    Carat           reduce using rule 37 (ArithmeticShiftLeft -> LessThan LessThan LessThan .)
    Not             reduce using rule 37 (ArithmeticShiftLeft -> LessThan LessThan LessThan .)
    Tilde           reduce using rule 37 (ArithmeticShiftLeft -> LessThan LessThan LessThan .)
    ParenL          reduce using rule 37 (ArithmeticShiftLeft -> LessThan LessThan LessThan .)
    Num             reduce using rule 37 (ArithmeticShiftLeft -> LessThan LessThan LessThan .)
    KW_this         reduce using rule 37 (ArithmeticShiftLeft -> LessThan LessThan LessThan .)
    Ident           reduce using rule 37 (ArithmeticShiftLeft -> LessThan LessThan LessThan .)


state 182

    (95) primary1 -> primary1 BracketL expression BracketR .

    Dot             reduce using rule 95 (primary1 -> primary1 BracketL expression BracketR .)
    BracketL        reduce using rule 95 (primary1 -> primary1 BracketL expression BracketR .)
    Star            reduce using rule 95 (primary1 -> primary1 BracketL expression BracketR .)
    Divide          reduce using rule 95 (primary1 -> primary1 BracketL expression BracketR .)
    Mod             reduce using rule 95 (primary1 -> primary1 BracketL expression BracketR .)
    Plus            reduce using rule 95 (primary1 -> primary1 BracketL expression BracketR .)
    Minus           reduce using rule 95 (primary1 -> primary1 BracketL expression BracketR .)
    GreaterThan     reduce using rule 95 (primary1 -> primary1 BracketL expression BracketR .)
    LessThan        reduce using rule 95 (primary1 -> primary1 BracketL expression BracketR .)
    Question        reduce using rule 95 (primary1 -> primary1 BracketL expression BracketR .)
    Bar             reduce using rule 95 (primary1 -> primary1 BracketL expression BracketR .)
    Carat           reduce using rule 95 (primary1 -> primary1 BracketL expression BracketR .)
    Amp             reduce using rule 95 (primary1 -> primary1 BracketL expression BracketR .)
    Tilde           reduce using rule 95 (primary1 -> primary1 BracketL expression BracketR .)
    Equals          reduce using rule 95 (primary1 -> primary1 BracketL expression BracketR .)
    Not             reduce using rule 95 (primary1 -> primary1 BracketL expression BracketR .)
    Comma           reduce using rule 95 (primary1 -> primary1 BracketL expression BracketR .)
    ParenR          reduce using rule 95 (primary1 -> primary1 BracketL expression BracketR .)
    Semi            reduce using rule 95 (primary1 -> primary1 BracketL expression BracketR .)
    Colon           reduce using rule 95 (primary1 -> primary1 BracketL expression BracketR .)
    BracketR        reduce using rule 95 (primary1 -> primary1 BracketL expression BracketR .)


state 183

    (87) part_select_range -> expression Colon . expression
    (39) expression -> . expression1
    (40) expression1 -> . expression2
    (41) expression1 -> . expression2 LogicalImplication expression1
    (42) expression1 -> . expression2 LogicalEquivalence expression1
    (43) expression2 -> . expression3
    (44) expression2 -> . expression3 Question expression Colon expression2
    (45) expression3 -> . expression4
    (46) expression3 -> . expression3 LogicalOr expression4
    (47) expression3 -> . expression3 LogicalAnd expression4
    (48) expression3 -> . expression3 Bar expression4
    (49) expression3 -> . expression3 Carat expression4
    (50) expression3 -> . expression3 BinaryXnor expression4
    (51) expression3 -> . expression3 Amp expression4
    (52) expression3 -> . expression3 Equality expression4
    (53) expression3 -> . expression3 Inequality expression4
    (54) expression3 -> . expression3 CaseEquality expression4
    (55) expression3 -> . expression3 CaseInequality expression4
    (56) expression3 -> . expression3 WildcardEquality expression4
    (57) expression3 -> . expression3 WildcardInequality expression4
    (58) expression4 -> . expression5
    (59) expression4 -> . expression4 LessThan expression5
    (60) expression4 -> . expression4 LessThanEqual expression5
    (61) expression4 -> . expression4 GreaterThan expression5
    (62) expression4 -> . expression4 GreaterThanEqual expression5
    (63) expression5 -> . expression6
    (64) expression5 -> . expression5 LogicalShiftRight expression6
    (65) expression5 -> . expression5 LogicalShiftLeft expression6
    (66) expression5 -> . expression5 ArithmeticShiftRight expression6
    (67) expression5 -> . expression5 ArithmeticShiftLeft expression6
    (68) expression6 -> . expression7
    (69) expression6 -> . expression6 Plus expression7
    (70) expression6 -> . expression6 Minus expression7
    (71) expression7 -> . expression8
    (72) expression7 -> . expression7 Star expression8
    (73) expression7 -> . expression7 Divide expression8
    (74) expression7 -> . expression7 Mod expression8
    (75) expression7 -> . expression7 Power expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    expression                     shift and go to state 215
    expression1                    shift and go to state 24
    expression2                    shift and go to state 25
    expression3                    shift and go to state 26
    expression4                    shift and go to state 27
    BinaryXnor                     shift and go to state 30
    expression5                    shift and go to state 32
    expression6                    shift and go to state 33
    expression7                    shift and go to state 34
    expression8                    shift and go to state 37
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 184

    (88) part_select_range -> expression PlusColon . expression
    (39) expression -> . expression1
    (40) expression1 -> . expression2
    (41) expression1 -> . expression2 LogicalImplication expression1
    (42) expression1 -> . expression2 LogicalEquivalence expression1
    (43) expression2 -> . expression3
    (44) expression2 -> . expression3 Question expression Colon expression2
    (45) expression3 -> . expression4
    (46) expression3 -> . expression3 LogicalOr expression4
    (47) expression3 -> . expression3 LogicalAnd expression4
    (48) expression3 -> . expression3 Bar expression4
    (49) expression3 -> . expression3 Carat expression4
    (50) expression3 -> . expression3 BinaryXnor expression4
    (51) expression3 -> . expression3 Amp expression4
    (52) expression3 -> . expression3 Equality expression4
    (53) expression3 -> . expression3 Inequality expression4
    (54) expression3 -> . expression3 CaseEquality expression4
    (55) expression3 -> . expression3 CaseInequality expression4
    (56) expression3 -> . expression3 WildcardEquality expression4
    (57) expression3 -> . expression3 WildcardInequality expression4
    (58) expression4 -> . expression5
    (59) expression4 -> . expression4 LessThan expression5
    (60) expression4 -> . expression4 LessThanEqual expression5
    (61) expression4 -> . expression4 GreaterThan expression5
    (62) expression4 -> . expression4 GreaterThanEqual expression5
    (63) expression5 -> . expression6
    (64) expression5 -> . expression5 LogicalShiftRight expression6
    (65) expression5 -> . expression5 LogicalShiftLeft expression6
    (66) expression5 -> . expression5 ArithmeticShiftRight expression6
    (67) expression5 -> . expression5 ArithmeticShiftLeft expression6
    (68) expression6 -> . expression7
    (69) expression6 -> . expression6 Plus expression7
    (70) expression6 -> . expression6 Minus expression7
    (71) expression7 -> . expression8
    (72) expression7 -> . expression7 Star expression8
    (73) expression7 -> . expression7 Divide expression8
    (74) expression7 -> . expression7 Mod expression8
    (75) expression7 -> . expression7 Power expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    expression                     shift and go to state 216
    expression1                    shift and go to state 24
    expression2                    shift and go to state 25
    expression3                    shift and go to state 26
    expression4                    shift and go to state 27
    BinaryXnor                     shift and go to state 30
    expression5                    shift and go to state 32
    expression6                    shift and go to state 33
    expression7                    shift and go to state 34
    expression8                    shift and go to state 37
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 185

    (89) part_select_range -> expression MinusColon . expression
    (39) expression -> . expression1
    (40) expression1 -> . expression2
    (41) expression1 -> . expression2 LogicalImplication expression1
    (42) expression1 -> . expression2 LogicalEquivalence expression1
    (43) expression2 -> . expression3
    (44) expression2 -> . expression3 Question expression Colon expression2
    (45) expression3 -> . expression4
    (46) expression3 -> . expression3 LogicalOr expression4
    (47) expression3 -> . expression3 LogicalAnd expression4
    (48) expression3 -> . expression3 Bar expression4
    (49) expression3 -> . expression3 Carat expression4
    (50) expression3 -> . expression3 BinaryXnor expression4
    (51) expression3 -> . expression3 Amp expression4
    (52) expression3 -> . expression3 Equality expression4
    (53) expression3 -> . expression3 Inequality expression4
    (54) expression3 -> . expression3 CaseEquality expression4
    (55) expression3 -> . expression3 CaseInequality expression4
    (56) expression3 -> . expression3 WildcardEquality expression4
    (57) expression3 -> . expression3 WildcardInequality expression4
    (58) expression4 -> . expression5
    (59) expression4 -> . expression4 LessThan expression5
    (60) expression4 -> . expression4 LessThanEqual expression5
    (61) expression4 -> . expression4 GreaterThan expression5
    (62) expression4 -> . expression4 GreaterThanEqual expression5
    (63) expression5 -> . expression6
    (64) expression5 -> . expression5 LogicalShiftRight expression6
    (65) expression5 -> . expression5 LogicalShiftLeft expression6
    (66) expression5 -> . expression5 ArithmeticShiftRight expression6
    (67) expression5 -> . expression5 ArithmeticShiftLeft expression6
    (68) expression6 -> . expression7
    (69) expression6 -> . expression6 Plus expression7
    (70) expression6 -> . expression6 Minus expression7
    (71) expression7 -> . expression8
    (72) expression7 -> . expression7 Star expression8
    (73) expression7 -> . expression7 Divide expression8
    (74) expression7 -> . expression7 Mod expression8
    (75) expression7 -> . expression7 Power expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    expression                     shift and go to state 217
    expression1                    shift and go to state 24
    expression2                    shift and go to state 25
    expression3                    shift and go to state 26
    expression4                    shift and go to state 27
    BinaryXnor                     shift and go to state 30
    expression5                    shift and go to state 32
    expression6                    shift and go to state 33
    expression7                    shift and go to state 34
    expression8                    shift and go to state 37
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 186

    (14) PlusColon -> Plus . Colon

    Colon           shift and go to state 218


state 187

    (15) MinusColon -> Minus . Colon

    Colon           shift and go to state 219


state 188

    (96) primary1 -> primary1 BracketL part_select_range BracketR .

    Dot             reduce using rule 96 (primary1 -> primary1 BracketL part_select_range BracketR .)
    BracketL        reduce using rule 96 (primary1 -> primary1 BracketL part_select_range BracketR .)
    Star            reduce using rule 96 (primary1 -> primary1 BracketL part_select_range BracketR .)
    Divide          reduce using rule 96 (primary1 -> primary1 BracketL part_select_range BracketR .)
    Mod             reduce using rule 96 (primary1 -> primary1 BracketL part_select_range BracketR .)
    Plus            reduce using rule 96 (primary1 -> primary1 BracketL part_select_range BracketR .)
    Minus           reduce using rule 96 (primary1 -> primary1 BracketL part_select_range BracketR .)
    GreaterThan     reduce using rule 96 (primary1 -> primary1 BracketL part_select_range BracketR .)
    LessThan        reduce using rule 96 (primary1 -> primary1 BracketL part_select_range BracketR .)
    Question        reduce using rule 96 (primary1 -> primary1 BracketL part_select_range BracketR .)
    Bar             reduce using rule 96 (primary1 -> primary1 BracketL part_select_range BracketR .)
    Carat           reduce using rule 96 (primary1 -> primary1 BracketL part_select_range BracketR .)
    Amp             reduce using rule 96 (primary1 -> primary1 BracketL part_select_range BracketR .)
    Tilde           reduce using rule 96 (primary1 -> primary1 BracketL part_select_range BracketR .)
    Equals          reduce using rule 96 (primary1 -> primary1 BracketL part_select_range BracketR .)
    Not             reduce using rule 96 (primary1 -> primary1 BracketL part_select_range BracketR .)
    Comma           reduce using rule 96 (primary1 -> primary1 BracketL part_select_range BracketR .)
    ParenR          reduce using rule 96 (primary1 -> primary1 BracketL part_select_range BracketR .)
    Semi            reduce using rule 96 (primary1 -> primary1 BracketL part_select_range BracketR .)
    Colon           reduce using rule 96 (primary1 -> primary1 BracketL part_select_range BracketR .)
    BracketR        reduce using rule 96 (primary1 -> primary1 BracketL part_select_range BracketR .)


state 189

    (129) caliper_declaration -> KW_struct identifier ParenL expr_list ParenR Semi caliper_statement_list . KW_endstruct

    KW_endstruct    shift and go to state 220


state 190

    (130) caliper_declaration -> KW_module identifier ParenL expr_list ParenR Semi caliper_mod_stmt_list . KW_endmodule

    KW_endmodule    shift and go to state 221


state 191

    (12) caliper_mod_stmt_list -> caliper_mod_stmt .
    (13) caliper_mod_stmt_list -> caliper_mod_stmt . caliper_mod_stmt_list
    (12) caliper_mod_stmt_list -> . caliper_mod_stmt
    (13) caliper_mod_stmt_list -> . caliper_mod_stmt caliper_mod_stmt_list
    (118) caliper_mod_stmt -> . KW_input caliper_statement
    (119) caliper_mod_stmt -> . KW_output caliper_statement
    (120) caliper_mod_stmt -> . KW_state caliper_statement
    (121) caliper_mod_stmt -> . KW_output KW_state caliper_statement
    (122) caliper_mod_stmt -> . KW_begin caliper_mod_stmt_list KW_end
    (123) caliper_mod_stmt -> . KW_if ParenL expression ParenR caliper_mod_stmt
    (124) caliper_mod_stmt -> . KW_def expr_list_p Semi
    (125) caliper_mod_stmt -> . KW_invariant identifier Colon expression Semi
    (126) caliper_mod_stmt -> . datatype primary1_list_p Semi
    (127) caliper_mod_stmt -> . KW_submodule identifier ParenL expr_list ParenR identifier Semi
    (107) datatype -> . basetype
    (108) datatype -> . datatype dimension
    (102) basetype -> . KW_logic
    (103) basetype -> . identifier ParenL expr_list ParenR
    (104) basetype -> . identifier
    (91) identifier -> . Ident

    KW_endmodule    reduce using rule 12 (caliper_mod_stmt_list -> caliper_mod_stmt .)
    KW_end          reduce using rule 12 (caliper_mod_stmt_list -> caliper_mod_stmt .)
    KW_input        shift and go to state 192
    KW_output       shift and go to state 193
    KW_state        shift and go to state 194
    KW_begin        shift and go to state 195
    KW_if           shift and go to state 196
    KW_def          shift and go to state 197
    KW_invariant    shift and go to state 198
    KW_submodule    shift and go to state 200
    KW_logic        shift and go to state 173
    Ident           shift and go to state 10

    caliper_mod_stmt               shift and go to state 191
    caliper_mod_stmt_list          shift and go to state 222
    identifier                     shift and go to state 161
    datatype                       shift and go to state 199
    basetype                       shift and go to state 172

state 192

    (118) caliper_mod_stmt -> KW_input . caliper_statement
    (112) caliper_statement -> . KW_def expr_list_p Semi
    (113) caliper_statement -> . KW_invariant identifier Colon expression Semi
    (114) caliper_statement -> . datatype primary1_list_p Semi
    (115) caliper_statement -> . KW_begin caliper_statement_list KW_end
    (116) caliper_statement -> . KW_if ParenL expression ParenR caliper_statement
    (117) caliper_statement -> . KW_foreach ParenL caliper_loop_list_p ParenR caliper_statement
    (107) datatype -> . basetype
    (108) datatype -> . datatype dimension
    (102) basetype -> . KW_logic
    (103) basetype -> . identifier ParenL expr_list ParenR
    (104) basetype -> . identifier
    (91) identifier -> . Ident

    KW_def          shift and go to state 166
    KW_invariant    shift and go to state 167
    KW_begin        shift and go to state 169
    KW_if           shift and go to state 170
    KW_foreach      shift and go to state 171
    KW_logic        shift and go to state 173
    Ident           shift and go to state 10

    caliper_statement              shift and go to state 223
    identifier                     shift and go to state 161
    datatype                       shift and go to state 168
    basetype                       shift and go to state 172

state 193

    (119) caliper_mod_stmt -> KW_output . caliper_statement
    (121) caliper_mod_stmt -> KW_output . KW_state caliper_statement
    (112) caliper_statement -> . KW_def expr_list_p Semi
    (113) caliper_statement -> . KW_invariant identifier Colon expression Semi
    (114) caliper_statement -> . datatype primary1_list_p Semi
    (115) caliper_statement -> . KW_begin caliper_statement_list KW_end
    (116) caliper_statement -> . KW_if ParenL expression ParenR caliper_statement
    (117) caliper_statement -> . KW_foreach ParenL caliper_loop_list_p ParenR caliper_statement
    (107) datatype -> . basetype
    (108) datatype -> . datatype dimension
    (102) basetype -> . KW_logic
    (103) basetype -> . identifier ParenL expr_list ParenR
    (104) basetype -> . identifier
    (91) identifier -> . Ident

    KW_state        shift and go to state 225
    KW_def          shift and go to state 166
    KW_invariant    shift and go to state 167
    KW_begin        shift and go to state 169
    KW_if           shift and go to state 170
    KW_foreach      shift and go to state 171
    KW_logic        shift and go to state 173
    Ident           shift and go to state 10

    caliper_statement              shift and go to state 224
    identifier                     shift and go to state 161
    datatype                       shift and go to state 168
    basetype                       shift and go to state 172

state 194

    (120) caliper_mod_stmt -> KW_state . caliper_statement
    (112) caliper_statement -> . KW_def expr_list_p Semi
    (113) caliper_statement -> . KW_invariant identifier Colon expression Semi
    (114) caliper_statement -> . datatype primary1_list_p Semi
    (115) caliper_statement -> . KW_begin caliper_statement_list KW_end
    (116) caliper_statement -> . KW_if ParenL expression ParenR caliper_statement
    (117) caliper_statement -> . KW_foreach ParenL caliper_loop_list_p ParenR caliper_statement
    (107) datatype -> . basetype
    (108) datatype -> . datatype dimension
    (102) basetype -> . KW_logic
    (103) basetype -> . identifier ParenL expr_list ParenR
    (104) basetype -> . identifier
    (91) identifier -> . Ident

    KW_def          shift and go to state 166
    KW_invariant    shift and go to state 167
    KW_begin        shift and go to state 169
    KW_if           shift and go to state 170
    KW_foreach      shift and go to state 171
    KW_logic        shift and go to state 173
    Ident           shift and go to state 10

    caliper_statement              shift and go to state 226
    identifier                     shift and go to state 161
    datatype                       shift and go to state 168
    basetype                       shift and go to state 172

state 195

    (122) caliper_mod_stmt -> KW_begin . caliper_mod_stmt_list KW_end
    (12) caliper_mod_stmt_list -> . caliper_mod_stmt
    (13) caliper_mod_stmt_list -> . caliper_mod_stmt caliper_mod_stmt_list
    (118) caliper_mod_stmt -> . KW_input caliper_statement
    (119) caliper_mod_stmt -> . KW_output caliper_statement
    (120) caliper_mod_stmt -> . KW_state caliper_statement
    (121) caliper_mod_stmt -> . KW_output KW_state caliper_statement
    (122) caliper_mod_stmt -> . KW_begin caliper_mod_stmt_list KW_end
    (123) caliper_mod_stmt -> . KW_if ParenL expression ParenR caliper_mod_stmt
    (124) caliper_mod_stmt -> . KW_def expr_list_p Semi
    (125) caliper_mod_stmt -> . KW_invariant identifier Colon expression Semi
    (126) caliper_mod_stmt -> . datatype primary1_list_p Semi
    (127) caliper_mod_stmt -> . KW_submodule identifier ParenL expr_list ParenR identifier Semi
    (107) datatype -> . basetype
    (108) datatype -> . datatype dimension
    (102) basetype -> . KW_logic
    (103) basetype -> . identifier ParenL expr_list ParenR
    (104) basetype -> . identifier
    (91) identifier -> . Ident

    KW_input        shift and go to state 192
    KW_output       shift and go to state 193
    KW_state        shift and go to state 194
    KW_begin        shift and go to state 195
    KW_if           shift and go to state 196
    KW_def          shift and go to state 197
    KW_invariant    shift and go to state 198
    KW_submodule    shift and go to state 200
    KW_logic        shift and go to state 173
    Ident           shift and go to state 10

    caliper_mod_stmt_list          shift and go to state 227
    caliper_mod_stmt               shift and go to state 191
    identifier                     shift and go to state 161
    datatype                       shift and go to state 199
    basetype                       shift and go to state 172

state 196

    (123) caliper_mod_stmt -> KW_if . ParenL expression ParenR caliper_mod_stmt

    ParenL          shift and go to state 228


state 197

    (124) caliper_mod_stmt -> KW_def . expr_list_p Semi
    (2) expr_list_p -> . expression
    (3) expr_list_p -> . expression Comma expr_list_p
    (39) expression -> . expression1
    (40) expression1 -> . expression2
    (41) expression1 -> . expression2 LogicalImplication expression1
    (42) expression1 -> . expression2 LogicalEquivalence expression1
    (43) expression2 -> . expression3
    (44) expression2 -> . expression3 Question expression Colon expression2
    (45) expression3 -> . expression4
    (46) expression3 -> . expression3 LogicalOr expression4
    (47) expression3 -> . expression3 LogicalAnd expression4
    (48) expression3 -> . expression3 Bar expression4
    (49) expression3 -> . expression3 Carat expression4
    (50) expression3 -> . expression3 BinaryXnor expression4
    (51) expression3 -> . expression3 Amp expression4
    (52) expression3 -> . expression3 Equality expression4
    (53) expression3 -> . expression3 Inequality expression4
    (54) expression3 -> . expression3 CaseEquality expression4
    (55) expression3 -> . expression3 CaseInequality expression4
    (56) expression3 -> . expression3 WildcardEquality expression4
    (57) expression3 -> . expression3 WildcardInequality expression4
    (58) expression4 -> . expression5
    (59) expression4 -> . expression4 LessThan expression5
    (60) expression4 -> . expression4 LessThanEqual expression5
    (61) expression4 -> . expression4 GreaterThan expression5
    (62) expression4 -> . expression4 GreaterThanEqual expression5
    (63) expression5 -> . expression6
    (64) expression5 -> . expression5 LogicalShiftRight expression6
    (65) expression5 -> . expression5 LogicalShiftLeft expression6
    (66) expression5 -> . expression5 ArithmeticShiftRight expression6
    (67) expression5 -> . expression5 ArithmeticShiftLeft expression6
    (68) expression6 -> . expression7
    (69) expression6 -> . expression6 Plus expression7
    (70) expression6 -> . expression6 Minus expression7
    (71) expression7 -> . expression8
    (72) expression7 -> . expression7 Star expression8
    (73) expression7 -> . expression7 Divide expression8
    (74) expression7 -> . expression7 Mod expression8
    (75) expression7 -> . expression7 Power expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    expr_list_p                    shift and go to state 229
    expression                     shift and go to state 23
    expression1                    shift and go to state 24
    expression2                    shift and go to state 25
    expression3                    shift and go to state 26
    expression4                    shift and go to state 27
    BinaryXnor                     shift and go to state 30
    expression5                    shift and go to state 32
    expression6                    shift and go to state 33
    expression7                    shift and go to state 34
    expression8                    shift and go to state 37
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 198

    (125) caliper_mod_stmt -> KW_invariant . identifier Colon expression Semi
    (91) identifier -> . Ident

    Ident           shift and go to state 10

    identifier                     shift and go to state 230

state 199

    (126) caliper_mod_stmt -> datatype . primary1_list_p Semi
    (108) datatype -> datatype . dimension
    (6) primary1_list_p -> . primary1
    (7) primary1_list_p -> . primary1 Comma primary1_list_p
    (105) dimension -> . BracketL expression BracketR
    (106) dimension -> . BracketL expression Colon expression BracketR
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (91) identifier -> . Ident

    BracketL        shift and go to state 209
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    primary1_list_p                shift and go to state 231
    dimension                      shift and go to state 207
    primary1                       shift and go to state 208
    identifier                     shift and go to state 210

state 200

    (127) caliper_mod_stmt -> KW_submodule . identifier ParenL expr_list ParenR identifier Semi
    (91) identifier -> . Ident

    Ident           shift and go to state 10

    identifier                     shift and go to state 232

state 201

    (103) basetype -> identifier ParenL . expr_list ParenR
    (4) expr_list -> . empty
    (5) expr_list -> . expr_list_p
    (1) empty -> .
    (2) expr_list_p -> . expression
    (3) expr_list_p -> . expression Comma expr_list_p
    (39) expression -> . expression1
    (40) expression1 -> . expression2
    (41) expression1 -> . expression2 LogicalImplication expression1
    (42) expression1 -> . expression2 LogicalEquivalence expression1
    (43) expression2 -> . expression3
    (44) expression2 -> . expression3 Question expression Colon expression2
    (45) expression3 -> . expression4
    (46) expression3 -> . expression3 LogicalOr expression4
    (47) expression3 -> . expression3 LogicalAnd expression4
    (48) expression3 -> . expression3 Bar expression4
    (49) expression3 -> . expression3 Carat expression4
    (50) expression3 -> . expression3 BinaryXnor expression4
    (51) expression3 -> . expression3 Amp expression4
    (52) expression3 -> . expression3 Equality expression4
    (53) expression3 -> . expression3 Inequality expression4
    (54) expression3 -> . expression3 CaseEquality expression4
    (55) expression3 -> . expression3 CaseInequality expression4
    (56) expression3 -> . expression3 WildcardEquality expression4
    (57) expression3 -> . expression3 WildcardInequality expression4
    (58) expression4 -> . expression5
    (59) expression4 -> . expression4 LessThan expression5
    (60) expression4 -> . expression4 LessThanEqual expression5
    (61) expression4 -> . expression4 GreaterThan expression5
    (62) expression4 -> . expression4 GreaterThanEqual expression5
    (63) expression5 -> . expression6
    (64) expression5 -> . expression5 LogicalShiftRight expression6
    (65) expression5 -> . expression5 LogicalShiftLeft expression6
    (66) expression5 -> . expression5 ArithmeticShiftRight expression6
    (67) expression5 -> . expression5 ArithmeticShiftLeft expression6
    (68) expression6 -> . expression7
    (69) expression6 -> . expression6 Plus expression7
    (70) expression6 -> . expression6 Minus expression7
    (71) expression7 -> . expression8
    (72) expression7 -> . expression7 Star expression8
    (73) expression7 -> . expression7 Divide expression8
    (74) expression7 -> . expression7 Mod expression8
    (75) expression7 -> . expression7 Power expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    ParenR          reduce using rule 1 (empty -> .)
    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    identifier                     shift and go to state 18
    expr_list                      shift and go to state 233
    empty                          shift and go to state 21
    expr_list_p                    shift and go to state 22
    expression                     shift and go to state 23
    expression1                    shift and go to state 24
    expression2                    shift and go to state 25
    expression3                    shift and go to state 26
    expression4                    shift and go to state 27
    BinaryXnor                     shift and go to state 30
    expression5                    shift and go to state 32
    expression6                    shift and go to state 33
    expression7                    shift and go to state 34
    expression8                    shift and go to state 37
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45

state 202

    (128) caliper_declaration -> KW_spec identifier ParenL expr_list ParenR Semi caliper_statement_list KW_endspec .

    KW_spec         reduce using rule 128 (caliper_declaration -> KW_spec identifier ParenL expr_list ParenR Semi caliper_statement_list KW_endspec .)
    KW_struct       reduce using rule 128 (caliper_declaration -> KW_spec identifier ParenL expr_list ParenR Semi caliper_statement_list KW_endspec .)
    KW_module       reduce using rule 128 (caliper_declaration -> KW_spec identifier ParenL expr_list ParenR Semi caliper_statement_list KW_endspec .)
    KW_parameter    reduce using rule 128 (caliper_declaration -> KW_spec identifier ParenL expr_list ParenR Semi caliper_statement_list KW_endspec .)
    $end            reduce using rule 128 (caliper_declaration -> KW_spec identifier ParenL expr_list ParenR Semi caliper_statement_list KW_endspec .)


state 203

    (9) caliper_statement_list_p -> caliper_statement caliper_statement_list_p .

    KW_endspec      reduce using rule 9 (caliper_statement_list_p -> caliper_statement caliper_statement_list_p .)
    KW_endstruct    reduce using rule 9 (caliper_statement_list_p -> caliper_statement caliper_statement_list_p .)
    KW_end          reduce using rule 9 (caliper_statement_list_p -> caliper_statement caliper_statement_list_p .)


state 204

    (112) caliper_statement -> KW_def expr_list_p . Semi

    Semi            shift and go to state 234


state 205

    (113) caliper_statement -> KW_invariant identifier . Colon expression Semi

    Colon           shift and go to state 235


state 206

    (114) caliper_statement -> datatype primary1_list_p . Semi

    Semi            shift and go to state 236


state 207

    (108) datatype -> datatype dimension .

    BracketL        reduce using rule 108 (datatype -> datatype dimension .)
    KW_this         reduce using rule 108 (datatype -> datatype dimension .)
    Ident           reduce using rule 108 (datatype -> datatype dimension .)


state 208

    (6) primary1_list_p -> primary1 .
    (7) primary1_list_p -> primary1 . Comma primary1_list_p
    (94) primary1 -> primary1 . Dot identifier
    (95) primary1 -> primary1 . BracketL expression BracketR
    (96) primary1 -> primary1 . BracketL part_select_range BracketR

    Semi            reduce using rule 6 (primary1_list_p -> primary1 .)
    Comma           shift and go to state 237
    Dot             shift and go to state 106
    BracketL        shift and go to state 107


state 209

    (105) dimension -> BracketL . expression BracketR
    (106) dimension -> BracketL . expression Colon expression BracketR
    (39) expression -> . expression1
    (40) expression1 -> . expression2
    (41) expression1 -> . expression2 LogicalImplication expression1
    (42) expression1 -> . expression2 LogicalEquivalence expression1
    (43) expression2 -> . expression3
    (44) expression2 -> . expression3 Question expression Colon expression2
    (45) expression3 -> . expression4
    (46) expression3 -> . expression3 LogicalOr expression4
    (47) expression3 -> . expression3 LogicalAnd expression4
    (48) expression3 -> . expression3 Bar expression4
    (49) expression3 -> . expression3 Carat expression4
    (50) expression3 -> . expression3 BinaryXnor expression4
    (51) expression3 -> . expression3 Amp expression4
    (52) expression3 -> . expression3 Equality expression4
    (53) expression3 -> . expression3 Inequality expression4
    (54) expression3 -> . expression3 CaseEquality expression4
    (55) expression3 -> . expression3 CaseInequality expression4
    (56) expression3 -> . expression3 WildcardEquality expression4
    (57) expression3 -> . expression3 WildcardInequality expression4
    (58) expression4 -> . expression5
    (59) expression4 -> . expression4 LessThan expression5
    (60) expression4 -> . expression4 LessThanEqual expression5
    (61) expression4 -> . expression4 GreaterThan expression5
    (62) expression4 -> . expression4 GreaterThanEqual expression5
    (63) expression5 -> . expression6
    (64) expression5 -> . expression5 LogicalShiftRight expression6
    (65) expression5 -> . expression5 LogicalShiftLeft expression6
    (66) expression5 -> . expression5 ArithmeticShiftRight expression6
    (67) expression5 -> . expression5 ArithmeticShiftLeft expression6
    (68) expression6 -> . expression7
    (69) expression6 -> . expression6 Plus expression7
    (70) expression6 -> . expression6 Minus expression7
    (71) expression7 -> . expression8
    (72) expression7 -> . expression7 Star expression8
    (73) expression7 -> . expression7 Divide expression8
    (74) expression7 -> . expression7 Mod expression8
    (75) expression7 -> . expression7 Power expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    expression                     shift and go to state 238
    expression1                    shift and go to state 24
    expression2                    shift and go to state 25
    expression3                    shift and go to state 26
    expression4                    shift and go to state 27
    BinaryXnor                     shift and go to state 30
    expression5                    shift and go to state 32
    expression6                    shift and go to state 33
    expression7                    shift and go to state 34
    expression8                    shift and go to state 37
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 210

    (92) primary1 -> identifier .

    Comma           reduce using rule 92 (primary1 -> identifier .)
    Dot             reduce using rule 92 (primary1 -> identifier .)
    BracketL        reduce using rule 92 (primary1 -> identifier .)
    Semi            reduce using rule 92 (primary1 -> identifier .)


state 211

    (115) caliper_statement -> KW_begin caliper_statement_list . KW_end

    KW_end          shift and go to state 239


state 212

    (116) caliper_statement -> KW_if ParenL . expression ParenR caliper_statement
    (39) expression -> . expression1
    (40) expression1 -> . expression2
    (41) expression1 -> . expression2 LogicalImplication expression1
    (42) expression1 -> . expression2 LogicalEquivalence expression1
    (43) expression2 -> . expression3
    (44) expression2 -> . expression3 Question expression Colon expression2
    (45) expression3 -> . expression4
    (46) expression3 -> . expression3 LogicalOr expression4
    (47) expression3 -> . expression3 LogicalAnd expression4
    (48) expression3 -> . expression3 Bar expression4
    (49) expression3 -> . expression3 Carat expression4
    (50) expression3 -> . expression3 BinaryXnor expression4
    (51) expression3 -> . expression3 Amp expression4
    (52) expression3 -> . expression3 Equality expression4
    (53) expression3 -> . expression3 Inequality expression4
    (54) expression3 -> . expression3 CaseEquality expression4
    (55) expression3 -> . expression3 CaseInequality expression4
    (56) expression3 -> . expression3 WildcardEquality expression4
    (57) expression3 -> . expression3 WildcardInequality expression4
    (58) expression4 -> . expression5
    (59) expression4 -> . expression4 LessThan expression5
    (60) expression4 -> . expression4 LessThanEqual expression5
    (61) expression4 -> . expression4 GreaterThan expression5
    (62) expression4 -> . expression4 GreaterThanEqual expression5
    (63) expression5 -> . expression6
    (64) expression5 -> . expression5 LogicalShiftRight expression6
    (65) expression5 -> . expression5 LogicalShiftLeft expression6
    (66) expression5 -> . expression5 ArithmeticShiftRight expression6
    (67) expression5 -> . expression5 ArithmeticShiftLeft expression6
    (68) expression6 -> . expression7
    (69) expression6 -> . expression6 Plus expression7
    (70) expression6 -> . expression6 Minus expression7
    (71) expression7 -> . expression8
    (72) expression7 -> . expression7 Star expression8
    (73) expression7 -> . expression7 Divide expression8
    (74) expression7 -> . expression7 Mod expression8
    (75) expression7 -> . expression7 Power expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    expression                     shift and go to state 240
    expression1                    shift and go to state 24
    expression2                    shift and go to state 25
    expression3                    shift and go to state 26
    expression4                    shift and go to state 27
    BinaryXnor                     shift and go to state 30
    expression5                    shift and go to state 32
    expression6                    shift and go to state 33
    expression7                    shift and go to state 34
    expression8                    shift and go to state 37
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 213

    (117) caliper_statement -> KW_foreach ParenL . caliper_loop_list_p ParenR caliper_statement
    (110) caliper_loop_list_p -> . caliper_loop
    (111) caliper_loop_list_p -> . caliper_loop_list_p Comma caliper_loop
    (109) caliper_loop -> . identifier LessThan expression
    (91) identifier -> . Ident

    Ident           shift and go to state 10

    caliper_loop_list_p            shift and go to state 241
    caliper_loop                   shift and go to state 242
    identifier                     shift and go to state 243

state 214

    (44) expression2 -> expression3 Question expression Colon expression2 .

    Minus           reduce using rule 44 (expression2 -> expression3 Question expression Colon expression2 .)
    LessThan        reduce using rule 44 (expression2 -> expression3 Question expression Colon expression2 .)
    Comma           reduce using rule 44 (expression2 -> expression3 Question expression Colon expression2 .)
    ParenR          reduce using rule 44 (expression2 -> expression3 Question expression Colon expression2 .)
    Semi            reduce using rule 44 (expression2 -> expression3 Question expression Colon expression2 .)
    Colon           reduce using rule 44 (expression2 -> expression3 Question expression Colon expression2 .)
    BracketR        reduce using rule 44 (expression2 -> expression3 Question expression Colon expression2 .)
    Plus            reduce using rule 44 (expression2 -> expression3 Question expression Colon expression2 .)


state 215

    (87) part_select_range -> expression Colon expression .

    BracketR        reduce using rule 87 (part_select_range -> expression Colon expression .)


state 216

    (88) part_select_range -> expression PlusColon expression .

    BracketR        reduce using rule 88 (part_select_range -> expression PlusColon expression .)


state 217

    (89) part_select_range -> expression MinusColon expression .

    BracketR        reduce using rule 89 (part_select_range -> expression MinusColon expression .)


state 218

    (14) PlusColon -> Plus Colon .

    Plus            reduce using rule 14 (PlusColon -> Plus Colon .)
    Minus           reduce using rule 14 (PlusColon -> Plus Colon .)
    Amp             reduce using rule 14 (PlusColon -> Plus Colon .)
    Bar             reduce using rule 14 (PlusColon -> Plus Colon .)
    Carat           reduce using rule 14 (PlusColon -> Plus Colon .)
    Not             reduce using rule 14 (PlusColon -> Plus Colon .)
    Tilde           reduce using rule 14 (PlusColon -> Plus Colon .)
    ParenL          reduce using rule 14 (PlusColon -> Plus Colon .)
    Num             reduce using rule 14 (PlusColon -> Plus Colon .)
    KW_this         reduce using rule 14 (PlusColon -> Plus Colon .)
    Ident           reduce using rule 14 (PlusColon -> Plus Colon .)


state 219

    (15) MinusColon -> Minus Colon .

    Plus            reduce using rule 15 (MinusColon -> Minus Colon .)
    Minus           reduce using rule 15 (MinusColon -> Minus Colon .)
    Amp             reduce using rule 15 (MinusColon -> Minus Colon .)
    Bar             reduce using rule 15 (MinusColon -> Minus Colon .)
    Carat           reduce using rule 15 (MinusColon -> Minus Colon .)
    Not             reduce using rule 15 (MinusColon -> Minus Colon .)
    Tilde           reduce using rule 15 (MinusColon -> Minus Colon .)
    ParenL          reduce using rule 15 (MinusColon -> Minus Colon .)
    Num             reduce using rule 15 (MinusColon -> Minus Colon .)
    KW_this         reduce using rule 15 (MinusColon -> Minus Colon .)
    Ident           reduce using rule 15 (MinusColon -> Minus Colon .)


state 220

    (129) caliper_declaration -> KW_struct identifier ParenL expr_list ParenR Semi caliper_statement_list KW_endstruct .

    KW_spec         reduce using rule 129 (caliper_declaration -> KW_struct identifier ParenL expr_list ParenR Semi caliper_statement_list KW_endstruct .)
    KW_struct       reduce using rule 129 (caliper_declaration -> KW_struct identifier ParenL expr_list ParenR Semi caliper_statement_list KW_endstruct .)
    KW_module       reduce using rule 129 (caliper_declaration -> KW_struct identifier ParenL expr_list ParenR Semi caliper_statement_list KW_endstruct .)
    KW_parameter    reduce using rule 129 (caliper_declaration -> KW_struct identifier ParenL expr_list ParenR Semi caliper_statement_list KW_endstruct .)
    $end            reduce using rule 129 (caliper_declaration -> KW_struct identifier ParenL expr_list ParenR Semi caliper_statement_list KW_endstruct .)


state 221

    (130) caliper_declaration -> KW_module identifier ParenL expr_list ParenR Semi caliper_mod_stmt_list KW_endmodule .

    KW_spec         reduce using rule 130 (caliper_declaration -> KW_module identifier ParenL expr_list ParenR Semi caliper_mod_stmt_list KW_endmodule .)
    KW_struct       reduce using rule 130 (caliper_declaration -> KW_module identifier ParenL expr_list ParenR Semi caliper_mod_stmt_list KW_endmodule .)
    KW_module       reduce using rule 130 (caliper_declaration -> KW_module identifier ParenL expr_list ParenR Semi caliper_mod_stmt_list KW_endmodule .)
    KW_parameter    reduce using rule 130 (caliper_declaration -> KW_module identifier ParenL expr_list ParenR Semi caliper_mod_stmt_list KW_endmodule .)
    $end            reduce using rule 130 (caliper_declaration -> KW_module identifier ParenL expr_list ParenR Semi caliper_mod_stmt_list KW_endmodule .)


state 222

    (13) caliper_mod_stmt_list -> caliper_mod_stmt caliper_mod_stmt_list .

    KW_endmodule    reduce using rule 13 (caliper_mod_stmt_list -> caliper_mod_stmt caliper_mod_stmt_list .)
    KW_end          reduce using rule 13 (caliper_mod_stmt_list -> caliper_mod_stmt caliper_mod_stmt_list .)


state 223

    (118) caliper_mod_stmt -> KW_input caliper_statement .

    KW_input        reduce using rule 118 (caliper_mod_stmt -> KW_input caliper_statement .)
    KW_output       reduce using rule 118 (caliper_mod_stmt -> KW_input caliper_statement .)
    KW_state        reduce using rule 118 (caliper_mod_stmt -> KW_input caliper_statement .)
    KW_begin        reduce using rule 118 (caliper_mod_stmt -> KW_input caliper_statement .)
    KW_if           reduce using rule 118 (caliper_mod_stmt -> KW_input caliper_statement .)
    KW_def          reduce using rule 118 (caliper_mod_stmt -> KW_input caliper_statement .)
    KW_invariant    reduce using rule 118 (caliper_mod_stmt -> KW_input caliper_statement .)
    KW_submodule    reduce using rule 118 (caliper_mod_stmt -> KW_input caliper_statement .)
    KW_logic        reduce using rule 118 (caliper_mod_stmt -> KW_input caliper_statement .)
    Ident           reduce using rule 118 (caliper_mod_stmt -> KW_input caliper_statement .)
    KW_endmodule    reduce using rule 118 (caliper_mod_stmt -> KW_input caliper_statement .)
    KW_end          reduce using rule 118 (caliper_mod_stmt -> KW_input caliper_statement .)


state 224

    (119) caliper_mod_stmt -> KW_output caliper_statement .

    KW_input        reduce using rule 119 (caliper_mod_stmt -> KW_output caliper_statement .)
    KW_output       reduce using rule 119 (caliper_mod_stmt -> KW_output caliper_statement .)
    KW_state        reduce using rule 119 (caliper_mod_stmt -> KW_output caliper_statement .)
    KW_begin        reduce using rule 119 (caliper_mod_stmt -> KW_output caliper_statement .)
    KW_if           reduce using rule 119 (caliper_mod_stmt -> KW_output caliper_statement .)
    KW_def          reduce using rule 119 (caliper_mod_stmt -> KW_output caliper_statement .)
    KW_invariant    reduce using rule 119 (caliper_mod_stmt -> KW_output caliper_statement .)
    KW_submodule    reduce using rule 119 (caliper_mod_stmt -> KW_output caliper_statement .)
    KW_logic        reduce using rule 119 (caliper_mod_stmt -> KW_output caliper_statement .)
    Ident           reduce using rule 119 (caliper_mod_stmt -> KW_output caliper_statement .)
    KW_endmodule    reduce using rule 119 (caliper_mod_stmt -> KW_output caliper_statement .)
    KW_end          reduce using rule 119 (caliper_mod_stmt -> KW_output caliper_statement .)


state 225

    (121) caliper_mod_stmt -> KW_output KW_state . caliper_statement
    (112) caliper_statement -> . KW_def expr_list_p Semi
    (113) caliper_statement -> . KW_invariant identifier Colon expression Semi
    (114) caliper_statement -> . datatype primary1_list_p Semi
    (115) caliper_statement -> . KW_begin caliper_statement_list KW_end
    (116) caliper_statement -> . KW_if ParenL expression ParenR caliper_statement
    (117) caliper_statement -> . KW_foreach ParenL caliper_loop_list_p ParenR caliper_statement
    (107) datatype -> . basetype
    (108) datatype -> . datatype dimension
    (102) basetype -> . KW_logic
    (103) basetype -> . identifier ParenL expr_list ParenR
    (104) basetype -> . identifier
    (91) identifier -> . Ident

    KW_def          shift and go to state 166
    KW_invariant    shift and go to state 167
    KW_begin        shift and go to state 169
    KW_if           shift and go to state 170
    KW_foreach      shift and go to state 171
    KW_logic        shift and go to state 173
    Ident           shift and go to state 10

    caliper_statement              shift and go to state 244
    identifier                     shift and go to state 161
    datatype                       shift and go to state 168
    basetype                       shift and go to state 172

state 226

    (120) caliper_mod_stmt -> KW_state caliper_statement .

    KW_input        reduce using rule 120 (caliper_mod_stmt -> KW_state caliper_statement .)
    KW_output       reduce using rule 120 (caliper_mod_stmt -> KW_state caliper_statement .)
    KW_state        reduce using rule 120 (caliper_mod_stmt -> KW_state caliper_statement .)
    KW_begin        reduce using rule 120 (caliper_mod_stmt -> KW_state caliper_statement .)
    KW_if           reduce using rule 120 (caliper_mod_stmt -> KW_state caliper_statement .)
    KW_def          reduce using rule 120 (caliper_mod_stmt -> KW_state caliper_statement .)
    KW_invariant    reduce using rule 120 (caliper_mod_stmt -> KW_state caliper_statement .)
    KW_submodule    reduce using rule 120 (caliper_mod_stmt -> KW_state caliper_statement .)
    KW_logic        reduce using rule 120 (caliper_mod_stmt -> KW_state caliper_statement .)
    Ident           reduce using rule 120 (caliper_mod_stmt -> KW_state caliper_statement .)
    KW_endmodule    reduce using rule 120 (caliper_mod_stmt -> KW_state caliper_statement .)
    KW_end          reduce using rule 120 (caliper_mod_stmt -> KW_state caliper_statement .)


state 227

    (122) caliper_mod_stmt -> KW_begin caliper_mod_stmt_list . KW_end

    KW_end          shift and go to state 245


state 228

    (123) caliper_mod_stmt -> KW_if ParenL . expression ParenR caliper_mod_stmt
    (39) expression -> . expression1
    (40) expression1 -> . expression2
    (41) expression1 -> . expression2 LogicalImplication expression1
    (42) expression1 -> . expression2 LogicalEquivalence expression1
    (43) expression2 -> . expression3
    (44) expression2 -> . expression3 Question expression Colon expression2
    (45) expression3 -> . expression4
    (46) expression3 -> . expression3 LogicalOr expression4
    (47) expression3 -> . expression3 LogicalAnd expression4
    (48) expression3 -> . expression3 Bar expression4
    (49) expression3 -> . expression3 Carat expression4
    (50) expression3 -> . expression3 BinaryXnor expression4
    (51) expression3 -> . expression3 Amp expression4
    (52) expression3 -> . expression3 Equality expression4
    (53) expression3 -> . expression3 Inequality expression4
    (54) expression3 -> . expression3 CaseEquality expression4
    (55) expression3 -> . expression3 CaseInequality expression4
    (56) expression3 -> . expression3 WildcardEquality expression4
    (57) expression3 -> . expression3 WildcardInequality expression4
    (58) expression4 -> . expression5
    (59) expression4 -> . expression4 LessThan expression5
    (60) expression4 -> . expression4 LessThanEqual expression5
    (61) expression4 -> . expression4 GreaterThan expression5
    (62) expression4 -> . expression4 GreaterThanEqual expression5
    (63) expression5 -> . expression6
    (64) expression5 -> . expression5 LogicalShiftRight expression6
    (65) expression5 -> . expression5 LogicalShiftLeft expression6
    (66) expression5 -> . expression5 ArithmeticShiftRight expression6
    (67) expression5 -> . expression5 ArithmeticShiftLeft expression6
    (68) expression6 -> . expression7
    (69) expression6 -> . expression6 Plus expression7
    (70) expression6 -> . expression6 Minus expression7
    (71) expression7 -> . expression8
    (72) expression7 -> . expression7 Star expression8
    (73) expression7 -> . expression7 Divide expression8
    (74) expression7 -> . expression7 Mod expression8
    (75) expression7 -> . expression7 Power expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    expression                     shift and go to state 246
    expression1                    shift and go to state 24
    expression2                    shift and go to state 25
    expression3                    shift and go to state 26
    expression4                    shift and go to state 27
    BinaryXnor                     shift and go to state 30
    expression5                    shift and go to state 32
    expression6                    shift and go to state 33
    expression7                    shift and go to state 34
    expression8                    shift and go to state 37
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 229

    (124) caliper_mod_stmt -> KW_def expr_list_p . Semi

    Semi            shift and go to state 247


state 230

    (125) caliper_mod_stmt -> KW_invariant identifier . Colon expression Semi

    Colon           shift and go to state 248


state 231

    (126) caliper_mod_stmt -> datatype primary1_list_p . Semi

    Semi            shift and go to state 249


state 232

    (127) caliper_mod_stmt -> KW_submodule identifier . ParenL expr_list ParenR identifier Semi

    ParenL          shift and go to state 250


state 233

    (103) basetype -> identifier ParenL expr_list . ParenR

    ParenR          shift and go to state 251


state 234

    (112) caliper_statement -> KW_def expr_list_p Semi .

    KW_def          reduce using rule 112 (caliper_statement -> KW_def expr_list_p Semi .)
    KW_invariant    reduce using rule 112 (caliper_statement -> KW_def expr_list_p Semi .)
    KW_begin        reduce using rule 112 (caliper_statement -> KW_def expr_list_p Semi .)
    KW_if           reduce using rule 112 (caliper_statement -> KW_def expr_list_p Semi .)
    KW_foreach      reduce using rule 112 (caliper_statement -> KW_def expr_list_p Semi .)
    KW_logic        reduce using rule 112 (caliper_statement -> KW_def expr_list_p Semi .)
    Ident           reduce using rule 112 (caliper_statement -> KW_def expr_list_p Semi .)
    KW_endspec      reduce using rule 112 (caliper_statement -> KW_def expr_list_p Semi .)
    KW_endstruct    reduce using rule 112 (caliper_statement -> KW_def expr_list_p Semi .)
    KW_end          reduce using rule 112 (caliper_statement -> KW_def expr_list_p Semi .)
    KW_input        reduce using rule 112 (caliper_statement -> KW_def expr_list_p Semi .)
    KW_output       reduce using rule 112 (caliper_statement -> KW_def expr_list_p Semi .)
    KW_state        reduce using rule 112 (caliper_statement -> KW_def expr_list_p Semi .)
    KW_submodule    reduce using rule 112 (caliper_statement -> KW_def expr_list_p Semi .)
    KW_endmodule    reduce using rule 112 (caliper_statement -> KW_def expr_list_p Semi .)


state 235

    (113) caliper_statement -> KW_invariant identifier Colon . expression Semi
    (39) expression -> . expression1
    (40) expression1 -> . expression2
    (41) expression1 -> . expression2 LogicalImplication expression1
    (42) expression1 -> . expression2 LogicalEquivalence expression1
    (43) expression2 -> . expression3
    (44) expression2 -> . expression3 Question expression Colon expression2
    (45) expression3 -> . expression4
    (46) expression3 -> . expression3 LogicalOr expression4
    (47) expression3 -> . expression3 LogicalAnd expression4
    (48) expression3 -> . expression3 Bar expression4
    (49) expression3 -> . expression3 Carat expression4
    (50) expression3 -> . expression3 BinaryXnor expression4
    (51) expression3 -> . expression3 Amp expression4
    (52) expression3 -> . expression3 Equality expression4
    (53) expression3 -> . expression3 Inequality expression4
    (54) expression3 -> . expression3 CaseEquality expression4
    (55) expression3 -> . expression3 CaseInequality expression4
    (56) expression3 -> . expression3 WildcardEquality expression4
    (57) expression3 -> . expression3 WildcardInequality expression4
    (58) expression4 -> . expression5
    (59) expression4 -> . expression4 LessThan expression5
    (60) expression4 -> . expression4 LessThanEqual expression5
    (61) expression4 -> . expression4 GreaterThan expression5
    (62) expression4 -> . expression4 GreaterThanEqual expression5
    (63) expression5 -> . expression6
    (64) expression5 -> . expression5 LogicalShiftRight expression6
    (65) expression5 -> . expression5 LogicalShiftLeft expression6
    (66) expression5 -> . expression5 ArithmeticShiftRight expression6
    (67) expression5 -> . expression5 ArithmeticShiftLeft expression6
    (68) expression6 -> . expression7
    (69) expression6 -> . expression6 Plus expression7
    (70) expression6 -> . expression6 Minus expression7
    (71) expression7 -> . expression8
    (72) expression7 -> . expression7 Star expression8
    (73) expression7 -> . expression7 Divide expression8
    (74) expression7 -> . expression7 Mod expression8
    (75) expression7 -> . expression7 Power expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    identifier                     shift and go to state 18
    expression                     shift and go to state 252
    expression1                    shift and go to state 24
    expression2                    shift and go to state 25
    expression3                    shift and go to state 26
    expression4                    shift and go to state 27
    BinaryXnor                     shift and go to state 30
    expression5                    shift and go to state 32
    expression6                    shift and go to state 33
    expression7                    shift and go to state 34
    expression8                    shift and go to state 37
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45

state 236

    (114) caliper_statement -> datatype primary1_list_p Semi .

    KW_def          reduce using rule 114 (caliper_statement -> datatype primary1_list_p Semi .)
    KW_invariant    reduce using rule 114 (caliper_statement -> datatype primary1_list_p Semi .)
    KW_begin        reduce using rule 114 (caliper_statement -> datatype primary1_list_p Semi .)
    KW_if           reduce using rule 114 (caliper_statement -> datatype primary1_list_p Semi .)
    KW_foreach      reduce using rule 114 (caliper_statement -> datatype primary1_list_p Semi .)
    KW_logic        reduce using rule 114 (caliper_statement -> datatype primary1_list_p Semi .)
    Ident           reduce using rule 114 (caliper_statement -> datatype primary1_list_p Semi .)
    KW_endspec      reduce using rule 114 (caliper_statement -> datatype primary1_list_p Semi .)
    KW_endstruct    reduce using rule 114 (caliper_statement -> datatype primary1_list_p Semi .)
    KW_end          reduce using rule 114 (caliper_statement -> datatype primary1_list_p Semi .)
    KW_input        reduce using rule 114 (caliper_statement -> datatype primary1_list_p Semi .)
    KW_output       reduce using rule 114 (caliper_statement -> datatype primary1_list_p Semi .)
    KW_state        reduce using rule 114 (caliper_statement -> datatype primary1_list_p Semi .)
    KW_submodule    reduce using rule 114 (caliper_statement -> datatype primary1_list_p Semi .)
    KW_endmodule    reduce using rule 114 (caliper_statement -> datatype primary1_list_p Semi .)


state 237

    (7) primary1_list_p -> primary1 Comma . primary1_list_p
    (6) primary1_list_p -> . primary1
    (7) primary1_list_p -> . primary1 Comma primary1_list_p
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (91) identifier -> . Ident

    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    primary1                       shift and go to state 208
    primary1_list_p                shift and go to state 253
    identifier                     shift and go to state 210

state 238

    (105) dimension -> BracketL expression . BracketR
    (106) dimension -> BracketL expression . Colon expression BracketR

    BracketR        shift and go to state 254
    Colon           shift and go to state 255


state 239

    (115) caliper_statement -> KW_begin caliper_statement_list KW_end .

    KW_def          reduce using rule 115 (caliper_statement -> KW_begin caliper_statement_list KW_end .)
    KW_invariant    reduce using rule 115 (caliper_statement -> KW_begin caliper_statement_list KW_end .)
    KW_begin        reduce using rule 115 (caliper_statement -> KW_begin caliper_statement_list KW_end .)
    KW_if           reduce using rule 115 (caliper_statement -> KW_begin caliper_statement_list KW_end .)
    KW_foreach      reduce using rule 115 (caliper_statement -> KW_begin caliper_statement_list KW_end .)
    KW_logic        reduce using rule 115 (caliper_statement -> KW_begin caliper_statement_list KW_end .)
    Ident           reduce using rule 115 (caliper_statement -> KW_begin caliper_statement_list KW_end .)
    KW_endspec      reduce using rule 115 (caliper_statement -> KW_begin caliper_statement_list KW_end .)
    KW_endstruct    reduce using rule 115 (caliper_statement -> KW_begin caliper_statement_list KW_end .)
    KW_end          reduce using rule 115 (caliper_statement -> KW_begin caliper_statement_list KW_end .)
    KW_input        reduce using rule 115 (caliper_statement -> KW_begin caliper_statement_list KW_end .)
    KW_output       reduce using rule 115 (caliper_statement -> KW_begin caliper_statement_list KW_end .)
    KW_state        reduce using rule 115 (caliper_statement -> KW_begin caliper_statement_list KW_end .)
    KW_submodule    reduce using rule 115 (caliper_statement -> KW_begin caliper_statement_list KW_end .)
    KW_endmodule    reduce using rule 115 (caliper_statement -> KW_begin caliper_statement_list KW_end .)


state 240

    (116) caliper_statement -> KW_if ParenL expression . ParenR caliper_statement

    ParenR          shift and go to state 256


state 241

    (117) caliper_statement -> KW_foreach ParenL caliper_loop_list_p . ParenR caliper_statement
    (111) caliper_loop_list_p -> caliper_loop_list_p . Comma caliper_loop

    ParenR          shift and go to state 257
    Comma           shift and go to state 258


state 242

    (110) caliper_loop_list_p -> caliper_loop .

    ParenR          reduce using rule 110 (caliper_loop_list_p -> caliper_loop .)
    Comma           reduce using rule 110 (caliper_loop_list_p -> caliper_loop .)


state 243

    (109) caliper_loop -> identifier . LessThan expression

    LessThan        shift and go to state 259


state 244

    (121) caliper_mod_stmt -> KW_output KW_state caliper_statement .

    KW_input        reduce using rule 121 (caliper_mod_stmt -> KW_output KW_state caliper_statement .)
    KW_output       reduce using rule 121 (caliper_mod_stmt -> KW_output KW_state caliper_statement .)
    KW_state        reduce using rule 121 (caliper_mod_stmt -> KW_output KW_state caliper_statement .)
    KW_begin        reduce using rule 121 (caliper_mod_stmt -> KW_output KW_state caliper_statement .)
    KW_if           reduce using rule 121 (caliper_mod_stmt -> KW_output KW_state caliper_statement .)
    KW_def          reduce using rule 121 (caliper_mod_stmt -> KW_output KW_state caliper_statement .)
    KW_invariant    reduce using rule 121 (caliper_mod_stmt -> KW_output KW_state caliper_statement .)
    KW_submodule    reduce using rule 121 (caliper_mod_stmt -> KW_output KW_state caliper_statement .)
    KW_logic        reduce using rule 121 (caliper_mod_stmt -> KW_output KW_state caliper_statement .)
    Ident           reduce using rule 121 (caliper_mod_stmt -> KW_output KW_state caliper_statement .)
    KW_endmodule    reduce using rule 121 (caliper_mod_stmt -> KW_output KW_state caliper_statement .)
    KW_end          reduce using rule 121 (caliper_mod_stmt -> KW_output KW_state caliper_statement .)


state 245

    (122) caliper_mod_stmt -> KW_begin caliper_mod_stmt_list KW_end .

    KW_input        reduce using rule 122 (caliper_mod_stmt -> KW_begin caliper_mod_stmt_list KW_end .)
    KW_output       reduce using rule 122 (caliper_mod_stmt -> KW_begin caliper_mod_stmt_list KW_end .)
    KW_state        reduce using rule 122 (caliper_mod_stmt -> KW_begin caliper_mod_stmt_list KW_end .)
    KW_begin        reduce using rule 122 (caliper_mod_stmt -> KW_begin caliper_mod_stmt_list KW_end .)
    KW_if           reduce using rule 122 (caliper_mod_stmt -> KW_begin caliper_mod_stmt_list KW_end .)
    KW_def          reduce using rule 122 (caliper_mod_stmt -> KW_begin caliper_mod_stmt_list KW_end .)
    KW_invariant    reduce using rule 122 (caliper_mod_stmt -> KW_begin caliper_mod_stmt_list KW_end .)
    KW_submodule    reduce using rule 122 (caliper_mod_stmt -> KW_begin caliper_mod_stmt_list KW_end .)
    KW_logic        reduce using rule 122 (caliper_mod_stmt -> KW_begin caliper_mod_stmt_list KW_end .)
    Ident           reduce using rule 122 (caliper_mod_stmt -> KW_begin caliper_mod_stmt_list KW_end .)
    KW_endmodule    reduce using rule 122 (caliper_mod_stmt -> KW_begin caliper_mod_stmt_list KW_end .)
    KW_end          reduce using rule 122 (caliper_mod_stmt -> KW_begin caliper_mod_stmt_list KW_end .)


state 246

    (123) caliper_mod_stmt -> KW_if ParenL expression . ParenR caliper_mod_stmt

    ParenR          shift and go to state 260


state 247

    (124) caliper_mod_stmt -> KW_def expr_list_p Semi .

    KW_input        reduce using rule 124 (caliper_mod_stmt -> KW_def expr_list_p Semi .)
    KW_output       reduce using rule 124 (caliper_mod_stmt -> KW_def expr_list_p Semi .)
    KW_state        reduce using rule 124 (caliper_mod_stmt -> KW_def expr_list_p Semi .)
    KW_begin        reduce using rule 124 (caliper_mod_stmt -> KW_def expr_list_p Semi .)
    KW_if           reduce using rule 124 (caliper_mod_stmt -> KW_def expr_list_p Semi .)
    KW_def          reduce using rule 124 (caliper_mod_stmt -> KW_def expr_list_p Semi .)
    KW_invariant    reduce using rule 124 (caliper_mod_stmt -> KW_def expr_list_p Semi .)
    KW_submodule    reduce using rule 124 (caliper_mod_stmt -> KW_def expr_list_p Semi .)
    KW_logic        reduce using rule 124 (caliper_mod_stmt -> KW_def expr_list_p Semi .)
    Ident           reduce using rule 124 (caliper_mod_stmt -> KW_def expr_list_p Semi .)
    KW_endmodule    reduce using rule 124 (caliper_mod_stmt -> KW_def expr_list_p Semi .)
    KW_end          reduce using rule 124 (caliper_mod_stmt -> KW_def expr_list_p Semi .)


state 248

    (125) caliper_mod_stmt -> KW_invariant identifier Colon . expression Semi
    (39) expression -> . expression1
    (40) expression1 -> . expression2
    (41) expression1 -> . expression2 LogicalImplication expression1
    (42) expression1 -> . expression2 LogicalEquivalence expression1
    (43) expression2 -> . expression3
    (44) expression2 -> . expression3 Question expression Colon expression2
    (45) expression3 -> . expression4
    (46) expression3 -> . expression3 LogicalOr expression4
    (47) expression3 -> . expression3 LogicalAnd expression4
    (48) expression3 -> . expression3 Bar expression4
    (49) expression3 -> . expression3 Carat expression4
    (50) expression3 -> . expression3 BinaryXnor expression4
    (51) expression3 -> . expression3 Amp expression4
    (52) expression3 -> . expression3 Equality expression4
    (53) expression3 -> . expression3 Inequality expression4
    (54) expression3 -> . expression3 CaseEquality expression4
    (55) expression3 -> . expression3 CaseInequality expression4
    (56) expression3 -> . expression3 WildcardEquality expression4
    (57) expression3 -> . expression3 WildcardInequality expression4
    (58) expression4 -> . expression5
    (59) expression4 -> . expression4 LessThan expression5
    (60) expression4 -> . expression4 LessThanEqual expression5
    (61) expression4 -> . expression4 GreaterThan expression5
    (62) expression4 -> . expression4 GreaterThanEqual expression5
    (63) expression5 -> . expression6
    (64) expression5 -> . expression5 LogicalShiftRight expression6
    (65) expression5 -> . expression5 LogicalShiftLeft expression6
    (66) expression5 -> . expression5 ArithmeticShiftRight expression6
    (67) expression5 -> . expression5 ArithmeticShiftLeft expression6
    (68) expression6 -> . expression7
    (69) expression6 -> . expression6 Plus expression7
    (70) expression6 -> . expression6 Minus expression7
    (71) expression7 -> . expression8
    (72) expression7 -> . expression7 Star expression8
    (73) expression7 -> . expression7 Divide expression8
    (74) expression7 -> . expression7 Mod expression8
    (75) expression7 -> . expression7 Power expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    identifier                     shift and go to state 18
    expression                     shift and go to state 261
    expression1                    shift and go to state 24
    expression2                    shift and go to state 25
    expression3                    shift and go to state 26
    expression4                    shift and go to state 27
    BinaryXnor                     shift and go to state 30
    expression5                    shift and go to state 32
    expression6                    shift and go to state 33
    expression7                    shift and go to state 34
    expression8                    shift and go to state 37
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45

state 249

    (126) caliper_mod_stmt -> datatype primary1_list_p Semi .

    KW_input        reduce using rule 126 (caliper_mod_stmt -> datatype primary1_list_p Semi .)
    KW_output       reduce using rule 126 (caliper_mod_stmt -> datatype primary1_list_p Semi .)
    KW_state        reduce using rule 126 (caliper_mod_stmt -> datatype primary1_list_p Semi .)
    KW_begin        reduce using rule 126 (caliper_mod_stmt -> datatype primary1_list_p Semi .)
    KW_if           reduce using rule 126 (caliper_mod_stmt -> datatype primary1_list_p Semi .)
    KW_def          reduce using rule 126 (caliper_mod_stmt -> datatype primary1_list_p Semi .)
    KW_invariant    reduce using rule 126 (caliper_mod_stmt -> datatype primary1_list_p Semi .)
    KW_submodule    reduce using rule 126 (caliper_mod_stmt -> datatype primary1_list_p Semi .)
    KW_logic        reduce using rule 126 (caliper_mod_stmt -> datatype primary1_list_p Semi .)
    Ident           reduce using rule 126 (caliper_mod_stmt -> datatype primary1_list_p Semi .)
    KW_endmodule    reduce using rule 126 (caliper_mod_stmt -> datatype primary1_list_p Semi .)
    KW_end          reduce using rule 126 (caliper_mod_stmt -> datatype primary1_list_p Semi .)


state 250

    (127) caliper_mod_stmt -> KW_submodule identifier ParenL . expr_list ParenR identifier Semi
    (4) expr_list -> . empty
    (5) expr_list -> . expr_list_p
    (1) empty -> .
    (2) expr_list_p -> . expression
    (3) expr_list_p -> . expression Comma expr_list_p
    (39) expression -> . expression1
    (40) expression1 -> . expression2
    (41) expression1 -> . expression2 LogicalImplication expression1
    (42) expression1 -> . expression2 LogicalEquivalence expression1
    (43) expression2 -> . expression3
    (44) expression2 -> . expression3 Question expression Colon expression2
    (45) expression3 -> . expression4
    (46) expression3 -> . expression3 LogicalOr expression4
    (47) expression3 -> . expression3 LogicalAnd expression4
    (48) expression3 -> . expression3 Bar expression4
    (49) expression3 -> . expression3 Carat expression4
    (50) expression3 -> . expression3 BinaryXnor expression4
    (51) expression3 -> . expression3 Amp expression4
    (52) expression3 -> . expression3 Equality expression4
    (53) expression3 -> . expression3 Inequality expression4
    (54) expression3 -> . expression3 CaseEquality expression4
    (55) expression3 -> . expression3 CaseInequality expression4
    (56) expression3 -> . expression3 WildcardEquality expression4
    (57) expression3 -> . expression3 WildcardInequality expression4
    (58) expression4 -> . expression5
    (59) expression4 -> . expression4 LessThan expression5
    (60) expression4 -> . expression4 LessThanEqual expression5
    (61) expression4 -> . expression4 GreaterThan expression5
    (62) expression4 -> . expression4 GreaterThanEqual expression5
    (63) expression5 -> . expression6
    (64) expression5 -> . expression5 LogicalShiftRight expression6
    (65) expression5 -> . expression5 LogicalShiftLeft expression6
    (66) expression5 -> . expression5 ArithmeticShiftRight expression6
    (67) expression5 -> . expression5 ArithmeticShiftLeft expression6
    (68) expression6 -> . expression7
    (69) expression6 -> . expression6 Plus expression7
    (70) expression6 -> . expression6 Minus expression7
    (71) expression7 -> . expression8
    (72) expression7 -> . expression7 Star expression8
    (73) expression7 -> . expression7 Divide expression8
    (74) expression7 -> . expression7 Mod expression8
    (75) expression7 -> . expression7 Power expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    ParenR          reduce using rule 1 (empty -> .)
    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    identifier                     shift and go to state 18
    expr_list                      shift and go to state 262
    empty                          shift and go to state 21
    expr_list_p                    shift and go to state 22
    expression                     shift and go to state 23
    expression1                    shift and go to state 24
    expression2                    shift and go to state 25
    expression3                    shift and go to state 26
    expression4                    shift and go to state 27
    BinaryXnor                     shift and go to state 30
    expression5                    shift and go to state 32
    expression6                    shift and go to state 33
    expression7                    shift and go to state 34
    expression8                    shift and go to state 37
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45

state 251

    (103) basetype -> identifier ParenL expr_list ParenR .

    BracketL        reduce using rule 103 (basetype -> identifier ParenL expr_list ParenR .)
    KW_this         reduce using rule 103 (basetype -> identifier ParenL expr_list ParenR .)
    Ident           reduce using rule 103 (basetype -> identifier ParenL expr_list ParenR .)


state 252

    (113) caliper_statement -> KW_invariant identifier Colon expression . Semi

    Semi            shift and go to state 263


state 253

    (7) primary1_list_p -> primary1 Comma primary1_list_p .

    Semi            reduce using rule 7 (primary1_list_p -> primary1 Comma primary1_list_p .)


state 254

    (105) dimension -> BracketL expression BracketR .

    BracketL        reduce using rule 105 (dimension -> BracketL expression BracketR .)
    KW_this         reduce using rule 105 (dimension -> BracketL expression BracketR .)
    Ident           reduce using rule 105 (dimension -> BracketL expression BracketR .)


state 255

    (106) dimension -> BracketL expression Colon . expression BracketR
    (39) expression -> . expression1
    (40) expression1 -> . expression2
    (41) expression1 -> . expression2 LogicalImplication expression1
    (42) expression1 -> . expression2 LogicalEquivalence expression1
    (43) expression2 -> . expression3
    (44) expression2 -> . expression3 Question expression Colon expression2
    (45) expression3 -> . expression4
    (46) expression3 -> . expression3 LogicalOr expression4
    (47) expression3 -> . expression3 LogicalAnd expression4
    (48) expression3 -> . expression3 Bar expression4
    (49) expression3 -> . expression3 Carat expression4
    (50) expression3 -> . expression3 BinaryXnor expression4
    (51) expression3 -> . expression3 Amp expression4
    (52) expression3 -> . expression3 Equality expression4
    (53) expression3 -> . expression3 Inequality expression4
    (54) expression3 -> . expression3 CaseEquality expression4
    (55) expression3 -> . expression3 CaseInequality expression4
    (56) expression3 -> . expression3 WildcardEquality expression4
    (57) expression3 -> . expression3 WildcardInequality expression4
    (58) expression4 -> . expression5
    (59) expression4 -> . expression4 LessThan expression5
    (60) expression4 -> . expression4 LessThanEqual expression5
    (61) expression4 -> . expression4 GreaterThan expression5
    (62) expression4 -> . expression4 GreaterThanEqual expression5
    (63) expression5 -> . expression6
    (64) expression5 -> . expression5 LogicalShiftRight expression6
    (65) expression5 -> . expression5 LogicalShiftLeft expression6
    (66) expression5 -> . expression5 ArithmeticShiftRight expression6
    (67) expression5 -> . expression5 ArithmeticShiftLeft expression6
    (68) expression6 -> . expression7
    (69) expression6 -> . expression6 Plus expression7
    (70) expression6 -> . expression6 Minus expression7
    (71) expression7 -> . expression8
    (72) expression7 -> . expression7 Star expression8
    (73) expression7 -> . expression7 Divide expression8
    (74) expression7 -> . expression7 Mod expression8
    (75) expression7 -> . expression7 Power expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    expression                     shift and go to state 264
    expression1                    shift and go to state 24
    expression2                    shift and go to state 25
    expression3                    shift and go to state 26
    expression4                    shift and go to state 27
    BinaryXnor                     shift and go to state 30
    expression5                    shift and go to state 32
    expression6                    shift and go to state 33
    expression7                    shift and go to state 34
    expression8                    shift and go to state 37
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45
    identifier                     shift and go to state 18

state 256

    (116) caliper_statement -> KW_if ParenL expression ParenR . caliper_statement
    (112) caliper_statement -> . KW_def expr_list_p Semi
    (113) caliper_statement -> . KW_invariant identifier Colon expression Semi
    (114) caliper_statement -> . datatype primary1_list_p Semi
    (115) caliper_statement -> . KW_begin caliper_statement_list KW_end
    (116) caliper_statement -> . KW_if ParenL expression ParenR caliper_statement
    (117) caliper_statement -> . KW_foreach ParenL caliper_loop_list_p ParenR caliper_statement
    (107) datatype -> . basetype
    (108) datatype -> . datatype dimension
    (102) basetype -> . KW_logic
    (103) basetype -> . identifier ParenL expr_list ParenR
    (104) basetype -> . identifier
    (91) identifier -> . Ident

    KW_def          shift and go to state 166
    KW_invariant    shift and go to state 167
    KW_begin        shift and go to state 169
    KW_if           shift and go to state 170
    KW_foreach      shift and go to state 171
    KW_logic        shift and go to state 173
    Ident           shift and go to state 10

    caliper_statement              shift and go to state 265
    identifier                     shift and go to state 161
    datatype                       shift and go to state 168
    basetype                       shift and go to state 172

state 257

    (117) caliper_statement -> KW_foreach ParenL caliper_loop_list_p ParenR . caliper_statement
    (112) caliper_statement -> . KW_def expr_list_p Semi
    (113) caliper_statement -> . KW_invariant identifier Colon expression Semi
    (114) caliper_statement -> . datatype primary1_list_p Semi
    (115) caliper_statement -> . KW_begin caliper_statement_list KW_end
    (116) caliper_statement -> . KW_if ParenL expression ParenR caliper_statement
    (117) caliper_statement -> . KW_foreach ParenL caliper_loop_list_p ParenR caliper_statement
    (107) datatype -> . basetype
    (108) datatype -> . datatype dimension
    (102) basetype -> . KW_logic
    (103) basetype -> . identifier ParenL expr_list ParenR
    (104) basetype -> . identifier
    (91) identifier -> . Ident

    KW_def          shift and go to state 166
    KW_invariant    shift and go to state 167
    KW_begin        shift and go to state 169
    KW_if           shift and go to state 170
    KW_foreach      shift and go to state 171
    KW_logic        shift and go to state 173
    Ident           shift and go to state 10

    caliper_statement              shift and go to state 266
    identifier                     shift and go to state 161
    datatype                       shift and go to state 168
    basetype                       shift and go to state 172

state 258

    (111) caliper_loop_list_p -> caliper_loop_list_p Comma . caliper_loop
    (109) caliper_loop -> . identifier LessThan expression
    (91) identifier -> . Ident

    Ident           shift and go to state 10

    caliper_loop                   shift and go to state 267
    identifier                     shift and go to state 243

state 259

    (109) caliper_loop -> identifier LessThan . expression
    (39) expression -> . expression1
    (40) expression1 -> . expression2
    (41) expression1 -> . expression2 LogicalImplication expression1
    (42) expression1 -> . expression2 LogicalEquivalence expression1
    (43) expression2 -> . expression3
    (44) expression2 -> . expression3 Question expression Colon expression2
    (45) expression3 -> . expression4
    (46) expression3 -> . expression3 LogicalOr expression4
    (47) expression3 -> . expression3 LogicalAnd expression4
    (48) expression3 -> . expression3 Bar expression4
    (49) expression3 -> . expression3 Carat expression4
    (50) expression3 -> . expression3 BinaryXnor expression4
    (51) expression3 -> . expression3 Amp expression4
    (52) expression3 -> . expression3 Equality expression4
    (53) expression3 -> . expression3 Inequality expression4
    (54) expression3 -> . expression3 CaseEquality expression4
    (55) expression3 -> . expression3 CaseInequality expression4
    (56) expression3 -> . expression3 WildcardEquality expression4
    (57) expression3 -> . expression3 WildcardInequality expression4
    (58) expression4 -> . expression5
    (59) expression4 -> . expression4 LessThan expression5
    (60) expression4 -> . expression4 LessThanEqual expression5
    (61) expression4 -> . expression4 GreaterThan expression5
    (62) expression4 -> . expression4 GreaterThanEqual expression5
    (63) expression5 -> . expression6
    (64) expression5 -> . expression5 LogicalShiftRight expression6
    (65) expression5 -> . expression5 LogicalShiftLeft expression6
    (66) expression5 -> . expression5 ArithmeticShiftRight expression6
    (67) expression5 -> . expression5 ArithmeticShiftLeft expression6
    (68) expression6 -> . expression7
    (69) expression6 -> . expression6 Plus expression7
    (70) expression6 -> . expression6 Minus expression7
    (71) expression7 -> . expression8
    (72) expression7 -> . expression7 Star expression8
    (73) expression7 -> . expression7 Divide expression8
    (74) expression7 -> . expression7 Mod expression8
    (75) expression7 -> . expression7 Power expression8
    (76) expression8 -> . primary
    (77) expression8 -> . Plus primary
    (78) expression8 -> . Minus primary
    (79) expression8 -> . Amp primary
    (80) expression8 -> . BinaryNand primary
    (81) expression8 -> . Bar primary
    (82) expression8 -> . BinaryNor primary
    (83) expression8 -> . Carat primary
    (84) expression8 -> . BinaryXnor primary
    (85) expression8 -> . Not primary
    (86) expression8 -> . Tilde primary
    (98) primary -> . number
    (99) primary -> . primary1
    (100) primary -> . function_call
    (101) primary -> . ParenL expression ParenR
    (29) BinaryNand -> . Tilde Amp
    (30) BinaryNand -> . Amp Tilde
    (31) BinaryNor -> . Tilde Bar
    (32) BinaryNor -> . Bar Tilde
    (27) BinaryXnor -> . Tilde Carat
    (28) BinaryXnor -> . Carat Tilde
    (90) number -> . Num
    (92) primary1 -> . identifier
    (93) primary1 -> . KW_this
    (94) primary1 -> . primary1 Dot identifier
    (95) primary1 -> . primary1 BracketL expression BracketR
    (96) primary1 -> . primary1 BracketL part_select_range BracketR
    (97) function_call -> . identifier ParenL expr_list ParenR
    (91) identifier -> . Ident

    Plus            shift and go to state 35
    Minus           shift and go to state 36
    Amp             shift and go to state 31
    Bar             shift and go to state 28
    Carat           shift and go to state 29
    Not             shift and go to state 41
    Tilde           shift and go to state 42
    ParenL          shift and go to state 19
    Num             shift and go to state 46
    KW_this         shift and go to state 47
    Ident           shift and go to state 10

    identifier                     shift and go to state 18
    expression                     shift and go to state 268
    expression1                    shift and go to state 24
    expression2                    shift and go to state 25
    expression3                    shift and go to state 26
    expression4                    shift and go to state 27
    BinaryXnor                     shift and go to state 30
    expression5                    shift and go to state 32
    expression6                    shift and go to state 33
    expression7                    shift and go to state 34
    expression8                    shift and go to state 37
    primary                        shift and go to state 38
    BinaryNand                     shift and go to state 39
    BinaryNor                      shift and go to state 40
    number                         shift and go to state 43
    primary1                       shift and go to state 44
    function_call                  shift and go to state 45

state 260

    (123) caliper_mod_stmt -> KW_if ParenL expression ParenR . caliper_mod_stmt
    (118) caliper_mod_stmt -> . KW_input caliper_statement
    (119) caliper_mod_stmt -> . KW_output caliper_statement
    (120) caliper_mod_stmt -> . KW_state caliper_statement
    (121) caliper_mod_stmt -> . KW_output KW_state caliper_statement
    (122) caliper_mod_stmt -> . KW_begin caliper_mod_stmt_list KW_end
    (123) caliper_mod_stmt -> . KW_if ParenL expression ParenR caliper_mod_stmt
    (124) caliper_mod_stmt -> . KW_def expr_list_p Semi
    (125) caliper_mod_stmt -> . KW_invariant identifier Colon expression Semi
    (126) caliper_mod_stmt -> . datatype primary1_list_p Semi
    (127) caliper_mod_stmt -> . KW_submodule identifier ParenL expr_list ParenR identifier Semi
    (107) datatype -> . basetype
    (108) datatype -> . datatype dimension
    (102) basetype -> . KW_logic
    (103) basetype -> . identifier ParenL expr_list ParenR
    (104) basetype -> . identifier
    (91) identifier -> . Ident

    KW_input        shift and go to state 192
    KW_output       shift and go to state 193
    KW_state        shift and go to state 194
    KW_begin        shift and go to state 195
    KW_if           shift and go to state 196
    KW_def          shift and go to state 197
    KW_invariant    shift and go to state 198
    KW_submodule    shift and go to state 200
    KW_logic        shift and go to state 173
    Ident           shift and go to state 10

    caliper_mod_stmt               shift and go to state 269
    identifier                     shift and go to state 161
    datatype                       shift and go to state 199
    basetype                       shift and go to state 172

state 261

    (125) caliper_mod_stmt -> KW_invariant identifier Colon expression . Semi

    Semi            shift and go to state 270


state 262

    (127) caliper_mod_stmt -> KW_submodule identifier ParenL expr_list . ParenR identifier Semi

    ParenR          shift and go to state 271


state 263

    (113) caliper_statement -> KW_invariant identifier Colon expression Semi .

    KW_def          reduce using rule 113 (caliper_statement -> KW_invariant identifier Colon expression Semi .)
    KW_invariant    reduce using rule 113 (caliper_statement -> KW_invariant identifier Colon expression Semi .)
    KW_begin        reduce using rule 113 (caliper_statement -> KW_invariant identifier Colon expression Semi .)
    KW_if           reduce using rule 113 (caliper_statement -> KW_invariant identifier Colon expression Semi .)
    KW_foreach      reduce using rule 113 (caliper_statement -> KW_invariant identifier Colon expression Semi .)
    KW_logic        reduce using rule 113 (caliper_statement -> KW_invariant identifier Colon expression Semi .)
    Ident           reduce using rule 113 (caliper_statement -> KW_invariant identifier Colon expression Semi .)
    KW_endspec      reduce using rule 113 (caliper_statement -> KW_invariant identifier Colon expression Semi .)
    KW_endstruct    reduce using rule 113 (caliper_statement -> KW_invariant identifier Colon expression Semi .)
    KW_end          reduce using rule 113 (caliper_statement -> KW_invariant identifier Colon expression Semi .)
    KW_input        reduce using rule 113 (caliper_statement -> KW_invariant identifier Colon expression Semi .)
    KW_output       reduce using rule 113 (caliper_statement -> KW_invariant identifier Colon expression Semi .)
    KW_state        reduce using rule 113 (caliper_statement -> KW_invariant identifier Colon expression Semi .)
    KW_submodule    reduce using rule 113 (caliper_statement -> KW_invariant identifier Colon expression Semi .)
    KW_endmodule    reduce using rule 113 (caliper_statement -> KW_invariant identifier Colon expression Semi .)


state 264

    (106) dimension -> BracketL expression Colon expression . BracketR

    BracketR        shift and go to state 272


state 265

    (116) caliper_statement -> KW_if ParenL expression ParenR caliper_statement .

    KW_def          reduce using rule 116 (caliper_statement -> KW_if ParenL expression ParenR caliper_statement .)
    KW_invariant    reduce using rule 116 (caliper_statement -> KW_if ParenL expression ParenR caliper_statement .)
    KW_begin        reduce using rule 116 (caliper_statement -> KW_if ParenL expression ParenR caliper_statement .)
    KW_if           reduce using rule 116 (caliper_statement -> KW_if ParenL expression ParenR caliper_statement .)
    KW_foreach      reduce using rule 116 (caliper_statement -> KW_if ParenL expression ParenR caliper_statement .)
    KW_logic        reduce using rule 116 (caliper_statement -> KW_if ParenL expression ParenR caliper_statement .)
    Ident           reduce using rule 116 (caliper_statement -> KW_if ParenL expression ParenR caliper_statement .)
    KW_endspec      reduce using rule 116 (caliper_statement -> KW_if ParenL expression ParenR caliper_statement .)
    KW_endstruct    reduce using rule 116 (caliper_statement -> KW_if ParenL expression ParenR caliper_statement .)
    KW_end          reduce using rule 116 (caliper_statement -> KW_if ParenL expression ParenR caliper_statement .)
    KW_input        reduce using rule 116 (caliper_statement -> KW_if ParenL expression ParenR caliper_statement .)
    KW_output       reduce using rule 116 (caliper_statement -> KW_if ParenL expression ParenR caliper_statement .)
    KW_state        reduce using rule 116 (caliper_statement -> KW_if ParenL expression ParenR caliper_statement .)
    KW_submodule    reduce using rule 116 (caliper_statement -> KW_if ParenL expression ParenR caliper_statement .)
    KW_endmodule    reduce using rule 116 (caliper_statement -> KW_if ParenL expression ParenR caliper_statement .)


state 266

    (117) caliper_statement -> KW_foreach ParenL caliper_loop_list_p ParenR caliper_statement .

    KW_def          reduce using rule 117 (caliper_statement -> KW_foreach ParenL caliper_loop_list_p ParenR caliper_statement .)
    KW_invariant    reduce using rule 117 (caliper_statement -> KW_foreach ParenL caliper_loop_list_p ParenR caliper_statement .)
    KW_begin        reduce using rule 117 (caliper_statement -> KW_foreach ParenL caliper_loop_list_p ParenR caliper_statement .)
    KW_if           reduce using rule 117 (caliper_statement -> KW_foreach ParenL caliper_loop_list_p ParenR caliper_statement .)
    KW_foreach      reduce using rule 117 (caliper_statement -> KW_foreach ParenL caliper_loop_list_p ParenR caliper_statement .)
    KW_logic        reduce using rule 117 (caliper_statement -> KW_foreach ParenL caliper_loop_list_p ParenR caliper_statement .)
    Ident           reduce using rule 117 (caliper_statement -> KW_foreach ParenL caliper_loop_list_p ParenR caliper_statement .)
    KW_endspec      reduce using rule 117 (caliper_statement -> KW_foreach ParenL caliper_loop_list_p ParenR caliper_statement .)
    KW_endstruct    reduce using rule 117 (caliper_statement -> KW_foreach ParenL caliper_loop_list_p ParenR caliper_statement .)
    KW_end          reduce using rule 117 (caliper_statement -> KW_foreach ParenL caliper_loop_list_p ParenR caliper_statement .)
    KW_input        reduce using rule 117 (caliper_statement -> KW_foreach ParenL caliper_loop_list_p ParenR caliper_statement .)
    KW_output       reduce using rule 117 (caliper_statement -> KW_foreach ParenL caliper_loop_list_p ParenR caliper_statement .)
    KW_state        reduce using rule 117 (caliper_statement -> KW_foreach ParenL caliper_loop_list_p ParenR caliper_statement .)
    KW_submodule    reduce using rule 117 (caliper_statement -> KW_foreach ParenL caliper_loop_list_p ParenR caliper_statement .)
    KW_endmodule    reduce using rule 117 (caliper_statement -> KW_foreach ParenL caliper_loop_list_p ParenR caliper_statement .)


state 267

    (111) caliper_loop_list_p -> caliper_loop_list_p Comma caliper_loop .

    ParenR          reduce using rule 111 (caliper_loop_list_p -> caliper_loop_list_p Comma caliper_loop .)
    Comma           reduce using rule 111 (caliper_loop_list_p -> caliper_loop_list_p Comma caliper_loop .)


state 268

    (109) caliper_loop -> identifier LessThan expression .

    ParenR          reduce using rule 109 (caliper_loop -> identifier LessThan expression .)
    Comma           reduce using rule 109 (caliper_loop -> identifier LessThan expression .)


state 269

    (123) caliper_mod_stmt -> KW_if ParenL expression ParenR caliper_mod_stmt .

    KW_input        reduce using rule 123 (caliper_mod_stmt -> KW_if ParenL expression ParenR caliper_mod_stmt .)
    KW_output       reduce using rule 123 (caliper_mod_stmt -> KW_if ParenL expression ParenR caliper_mod_stmt .)
    KW_state        reduce using rule 123 (caliper_mod_stmt -> KW_if ParenL expression ParenR caliper_mod_stmt .)
    KW_begin        reduce using rule 123 (caliper_mod_stmt -> KW_if ParenL expression ParenR caliper_mod_stmt .)
    KW_if           reduce using rule 123 (caliper_mod_stmt -> KW_if ParenL expression ParenR caliper_mod_stmt .)
    KW_def          reduce using rule 123 (caliper_mod_stmt -> KW_if ParenL expression ParenR caliper_mod_stmt .)
    KW_invariant    reduce using rule 123 (caliper_mod_stmt -> KW_if ParenL expression ParenR caliper_mod_stmt .)
    KW_submodule    reduce using rule 123 (caliper_mod_stmt -> KW_if ParenL expression ParenR caliper_mod_stmt .)
    KW_logic        reduce using rule 123 (caliper_mod_stmt -> KW_if ParenL expression ParenR caliper_mod_stmt .)
    Ident           reduce using rule 123 (caliper_mod_stmt -> KW_if ParenL expression ParenR caliper_mod_stmt .)
    KW_endmodule    reduce using rule 123 (caliper_mod_stmt -> KW_if ParenL expression ParenR caliper_mod_stmt .)
    KW_end          reduce using rule 123 (caliper_mod_stmt -> KW_if ParenL expression ParenR caliper_mod_stmt .)


state 270

    (125) caliper_mod_stmt -> KW_invariant identifier Colon expression Semi .

    KW_input        reduce using rule 125 (caliper_mod_stmt -> KW_invariant identifier Colon expression Semi .)
    KW_output       reduce using rule 125 (caliper_mod_stmt -> KW_invariant identifier Colon expression Semi .)
    KW_state        reduce using rule 125 (caliper_mod_stmt -> KW_invariant identifier Colon expression Semi .)
    KW_begin        reduce using rule 125 (caliper_mod_stmt -> KW_invariant identifier Colon expression Semi .)
    KW_if           reduce using rule 125 (caliper_mod_stmt -> KW_invariant identifier Colon expression Semi .)
    KW_def          reduce using rule 125 (caliper_mod_stmt -> KW_invariant identifier Colon expression Semi .)
    KW_invariant    reduce using rule 125 (caliper_mod_stmt -> KW_invariant identifier Colon expression Semi .)
    KW_submodule    reduce using rule 125 (caliper_mod_stmt -> KW_invariant identifier Colon expression Semi .)
    KW_logic        reduce using rule 125 (caliper_mod_stmt -> KW_invariant identifier Colon expression Semi .)
    Ident           reduce using rule 125 (caliper_mod_stmt -> KW_invariant identifier Colon expression Semi .)
    KW_endmodule    reduce using rule 125 (caliper_mod_stmt -> KW_invariant identifier Colon expression Semi .)
    KW_end          reduce using rule 125 (caliper_mod_stmt -> KW_invariant identifier Colon expression Semi .)


state 271

    (127) caliper_mod_stmt -> KW_submodule identifier ParenL expr_list ParenR . identifier Semi
    (91) identifier -> . Ident

    Ident           shift and go to state 10

    identifier                     shift and go to state 273

state 272

    (106) dimension -> BracketL expression Colon expression BracketR .

    BracketL        reduce using rule 106 (dimension -> BracketL expression Colon expression BracketR .)
    KW_this         reduce using rule 106 (dimension -> BracketL expression Colon expression BracketR .)
    Ident           reduce using rule 106 (dimension -> BracketL expression Colon expression BracketR .)


state 273

    (127) caliper_mod_stmt -> KW_submodule identifier ParenL expr_list ParenR identifier . Semi

    Semi            shift and go to state 274


state 274

    (127) caliper_mod_stmt -> KW_submodule identifier ParenL expr_list ParenR identifier Semi .

    KW_input        reduce using rule 127 (caliper_mod_stmt -> KW_submodule identifier ParenL expr_list ParenR identifier Semi .)
    KW_output       reduce using rule 127 (caliper_mod_stmt -> KW_submodule identifier ParenL expr_list ParenR identifier Semi .)
    KW_state        reduce using rule 127 (caliper_mod_stmt -> KW_submodule identifier ParenL expr_list ParenR identifier Semi .)
    KW_begin        reduce using rule 127 (caliper_mod_stmt -> KW_submodule identifier ParenL expr_list ParenR identifier Semi .)
    KW_if           reduce using rule 127 (caliper_mod_stmt -> KW_submodule identifier ParenL expr_list ParenR identifier Semi .)
    KW_def          reduce using rule 127 (caliper_mod_stmt -> KW_submodule identifier ParenL expr_list ParenR identifier Semi .)
    KW_invariant    reduce using rule 127 (caliper_mod_stmt -> KW_submodule identifier ParenL expr_list ParenR identifier Semi .)
    KW_submodule    reduce using rule 127 (caliper_mod_stmt -> KW_submodule identifier ParenL expr_list ParenR identifier Semi .)
    KW_logic        reduce using rule 127 (caliper_mod_stmt -> KW_submodule identifier ParenL expr_list ParenR identifier Semi .)
    Ident           reduce using rule 127 (caliper_mod_stmt -> KW_submodule identifier ParenL expr_list ParenR identifier Semi .)
    KW_endmodule    reduce using rule 127 (caliper_mod_stmt -> KW_submodule identifier ParenL expr_list ParenR identifier Semi .)
    KW_end          reduce using rule 127 (caliper_mod_stmt -> KW_submodule identifier ParenL expr_list ParenR identifier Semi .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for Minus in state 25 resolved as shift
WARNING: shift/reduce conflict for LessThan in state 27 resolved as shift
WARNING: shift/reduce conflict for GreaterThan in state 32 resolved as shift
WARNING: shift/reduce conflict for LessThan in state 32 resolved as shift
WARNING: shift/reduce conflict for Plus in state 33 resolved as shift
WARNING: shift/reduce conflict for Minus in state 33 resolved as shift
WARNING: shift/reduce conflict for LessThan in state 119 resolved as shift
WARNING: shift/reduce conflict for LessThan in state 120 resolved as shift
WARNING: shift/reduce conflict for Tilde in state 121 resolved as shift
WARNING: shift/reduce conflict for ParenL in state 121 resolved as shift
WARNING: shift/reduce conflict for Num in state 121 resolved as shift
WARNING: shift/reduce conflict for KW_this in state 121 resolved as shift
WARNING: shift/reduce conflict for Ident in state 121 resolved as shift
WARNING: shift/reduce conflict for LessThan in state 122 resolved as shift
WARNING: shift/reduce conflict for LessThan in state 123 resolved as shift
WARNING: shift/reduce conflict for Amp in state 124 resolved as shift
WARNING: shift/reduce conflict for Bar in state 124 resolved as shift
WARNING: shift/reduce conflict for Carat in state 124 resolved as shift
WARNING: shift/reduce conflict for ParenL in state 124 resolved as shift
WARNING: shift/reduce conflict for Num in state 124 resolved as shift
WARNING: shift/reduce conflict for KW_this in state 124 resolved as shift
WARNING: shift/reduce conflict for Ident in state 124 resolved as shift
WARNING: shift/reduce conflict for LessThan in state 125 resolved as shift
WARNING: shift/reduce conflict for Tilde in state 126 resolved as shift
WARNING: shift/reduce conflict for ParenL in state 126 resolved as shift
WARNING: shift/reduce conflict for Num in state 126 resolved as shift
WARNING: shift/reduce conflict for KW_this in state 126 resolved as shift
WARNING: shift/reduce conflict for Ident in state 126 resolved as shift
WARNING: shift/reduce conflict for LessThan in state 127 resolved as shift
WARNING: shift/reduce conflict for LessThan in state 128 resolved as shift
WARNING: shift/reduce conflict for LessThan in state 129 resolved as shift
WARNING: shift/reduce conflict for LessThan in state 130 resolved as shift
WARNING: shift/reduce conflict for LessThan in state 131 resolved as shift
WARNING: shift/reduce conflict for LessThan in state 132 resolved as shift
WARNING: shift/reduce conflict for LessThan in state 133 resolved as shift
WARNING: shift/reduce conflict for GreaterThan in state 136 resolved as shift
WARNING: shift/reduce conflict for LessThan in state 136 resolved as shift
WARNING: shift/reduce conflict for GreaterThan in state 138 resolved as shift
WARNING: shift/reduce conflict for LessThan in state 138 resolved as shift
WARNING: shift/reduce conflict for GreaterThan in state 139 resolved as shift
WARNING: shift/reduce conflict for LessThan in state 139 resolved as shift
WARNING: shift/reduce conflict for GreaterThan in state 141 resolved as shift
WARNING: shift/reduce conflict for LessThan in state 141 resolved as shift
WARNING: shift/reduce conflict for Plus in state 142 resolved as shift
WARNING: shift/reduce conflict for Minus in state 142 resolved as shift
WARNING: shift/reduce conflict for Plus in state 143 resolved as shift
WARNING: shift/reduce conflict for Minus in state 143 resolved as shift
WARNING: shift/reduce conflict for Plus in state 144 resolved as shift
WARNING: shift/reduce conflict for Minus in state 144 resolved as shift
WARNING: shift/reduce conflict for Plus in state 145 resolved as shift
WARNING: shift/reduce conflict for Minus in state 145 resolved as shift
